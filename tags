!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AbstractRegistry	easylogging++.h	/^    AbstractRegistry(AbstractRegistry&& sr) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::AbstractRegistry
AbstractRegistry	easylogging++.h	/^    AbstractRegistry(void) {}$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::AbstractRegistry
AbstractRegistry	easylogging++.h	/^class AbstractRegistry : public base::threading::ThreadSafe {$/;"	c	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime
Address	protob/messages.pb.cc	/^Address::Address()$/;"	f	class:Address
Address	protob/messages.pb.cc	/^Address::Address(const Address& from)$/;"	f	class:Address
Address	protob/messages.pb.h	/^class Address : public ::google::protobuf::Message {$/;"	c
Address_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* Address_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
Address_reflection_	protob/messages.pb.cc	/^  Address_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
AllowVerboseIfModuleNotSpecified	easylogging++.h	/^    AllowVerboseIfModuleNotSpecified = 2,$/;"	m	class:el::Level::ConfigurationType::LoggingFlag
And	easylogging++.h	/^static inline base::type::EnumType And(Enum e, base::type::EnumType flag) {$/;"	f	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::bitwise
AppName	easylogging++.h	/^    User = 1<<7, Host = 1<<8, LogMessage = 1<<9, VerboseLevel = 1<<10, AppName = 1<<11, ThreadId = 1<<12,$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::FormatFlags
ApplySettings	protob/messages.pb.cc	/^ApplySettings::ApplySettings()$/;"	f	class:ApplySettings
ApplySettings	protob/messages.pb.cc	/^ApplySettings::ApplySettings(const ApplySettings& from)$/;"	f	class:ApplySettings
ApplySettings	protob/messages.pb.h	/^class ApplySettings : public ::google::protobuf::Message {$/;"	c
ApplySettings_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* ApplySettings_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
ApplySettings_reflection_	protob/messages.pb.cc	/^  ApplySettings_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
AutoSpacing	easylogging++.h	/^    AutoSpacing = 8192$/;"	m	class:el::Level::ConfigurationType::LoggingFlag
ButtonAck	protob/messages.pb.cc	/^ButtonAck::ButtonAck()$/;"	f	class:ButtonAck
ButtonAck	protob/messages.pb.cc	/^ButtonAck::ButtonAck(const ButtonAck& from)$/;"	f	class:ButtonAck
ButtonAck	protob/messages.pb.h	/^class ButtonAck : public ::google::protobuf::Message {$/;"	c
ButtonAck_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* ButtonAck_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
ButtonAck_reflection_	protob/messages.pb.cc	/^  ButtonAck_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
ButtonRequest	protob/messages.pb.cc	/^ButtonRequest::ButtonRequest()$/;"	f	class:ButtonRequest
ButtonRequest	protob/messages.pb.cc	/^ButtonRequest::ButtonRequest(const ButtonRequest& from)$/;"	f	class:ButtonRequest
ButtonRequest	protob/messages.pb.h	/^class ButtonRequest : public ::google::protobuf::Message {$/;"	c
ButtonRequestType	protob/types.pb.h	/^enum ButtonRequestType {$/;"	g
ButtonRequestType_ARRAYSIZE	protob/types.pb.h	/^const int ButtonRequestType_ARRAYSIZE = ButtonRequestType_MAX + 1;$/;"	v
ButtonRequestType_IsValid	protob/types.pb.cc	/^bool ButtonRequestType_IsValid(int value) {$/;"	f
ButtonRequestType_MAX	protob/types.pb.h	/^const ButtonRequestType ButtonRequestType_MAX = ButtonRequest_Address;$/;"	v
ButtonRequestType_MIN	protob/types.pb.h	/^const ButtonRequestType ButtonRequestType_MIN = ButtonRequest_Other;$/;"	v
ButtonRequestType_Name	protob/types.pb.h	/^inline const ::std::string& ButtonRequestType_Name(ButtonRequestType value) {$/;"	f
ButtonRequestType_Parse	protob/types.pb.h	/^inline bool ButtonRequestType_Parse($/;"	f
ButtonRequestType_descriptor	protob/types.pb.cc	/^const ::google::protobuf::EnumDescriptor* ButtonRequestType_descriptor() {$/;"	f
ButtonRequestType_descriptor_	protob/types.pb.cc	/^const ::google::protobuf::EnumDescriptor* ButtonRequestType_descriptor_ = NULL;$/;"	m	namespace:__anon3	file:
ButtonRequest_Address	protob/types.pb.h	/^  ButtonRequest_Address = 10$/;"	e	enum:ButtonRequestType
ButtonRequest_ConfirmOutput	protob/types.pb.h	/^  ButtonRequest_ConfirmOutput = 3,$/;"	e	enum:ButtonRequestType
ButtonRequest_ConfirmWord	protob/types.pb.h	/^  ButtonRequest_ConfirmWord = 5,$/;"	e	enum:ButtonRequestType
ButtonRequest_FeeOverThreshold	protob/types.pb.h	/^  ButtonRequest_FeeOverThreshold = 2,$/;"	e	enum:ButtonRequestType
ButtonRequest_FirmwareCheck	protob/types.pb.h	/^  ButtonRequest_FirmwareCheck = 9,$/;"	e	enum:ButtonRequestType
ButtonRequest_Other	protob/types.pb.h	/^  ButtonRequest_Other = 1,$/;"	e	enum:ButtonRequestType
ButtonRequest_ProtectCall	protob/types.pb.h	/^  ButtonRequest_ProtectCall = 7,$/;"	e	enum:ButtonRequestType
ButtonRequest_ResetDevice	protob/types.pb.h	/^  ButtonRequest_ResetDevice = 4,$/;"	e	enum:ButtonRequestType
ButtonRequest_SignTx	protob/types.pb.h	/^  ButtonRequest_SignTx = 8,$/;"	e	enum:ButtonRequestType
ButtonRequest_WipeDevice	protob/types.pb.h	/^  ButtonRequest_WipeDevice = 6,$/;"	e	enum:ButtonRequestType
ButtonRequest_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* ButtonRequest_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
ButtonRequest_reflection_	protob/messages.pb.cc	/^  ButtonRequest_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
ByteSize	protob/config.pb.cc	/^int Configuration::ByteSize() const {$/;"	f	class:Configuration
ByteSize	protob/config.pb.cc	/^int DeviceDescriptor::ByteSize() const {$/;"	f	class:DeviceDescriptor
ByteSize	protob/messages.pb.cc	/^int Address::ByteSize() const {$/;"	f	class:Address
ByteSize	protob/messages.pb.cc	/^int ApplySettings::ByteSize() const {$/;"	f	class:ApplySettings
ByteSize	protob/messages.pb.cc	/^int ButtonAck::ByteSize() const {$/;"	f	class:ButtonAck
ByteSize	protob/messages.pb.cc	/^int ButtonRequest::ByteSize() const {$/;"	f	class:ButtonRequest
ByteSize	protob/messages.pb.cc	/^int Cancel::ByteSize() const {$/;"	f	class:Cancel
ByteSize	protob/messages.pb.cc	/^int ChangePin::ByteSize() const {$/;"	f	class:ChangePin
ByteSize	protob/messages.pb.cc	/^int CipherKeyValue::ByteSize() const {$/;"	f	class:CipherKeyValue
ByteSize	protob/messages.pb.cc	/^int ClearSession::ByteSize() const {$/;"	f	class:ClearSession
ByteSize	protob/messages.pb.cc	/^int DebugLinkDecision::ByteSize() const {$/;"	f	class:DebugLinkDecision
ByteSize	protob/messages.pb.cc	/^int DebugLinkGetState::ByteSize() const {$/;"	f	class:DebugLinkGetState
ByteSize	protob/messages.pb.cc	/^int DebugLinkLog::ByteSize() const {$/;"	f	class:DebugLinkLog
ByteSize	protob/messages.pb.cc	/^int DebugLinkState::ByteSize() const {$/;"	f	class:DebugLinkState
ByteSize	protob/messages.pb.cc	/^int DebugLinkStop::ByteSize() const {$/;"	f	class:DebugLinkStop
ByteSize	protob/messages.pb.cc	/^int DecryptMessage::ByteSize() const {$/;"	f	class:DecryptMessage
ByteSize	protob/messages.pb.cc	/^int EncryptMessage::ByteSize() const {$/;"	f	class:EncryptMessage
ByteSize	protob/messages.pb.cc	/^int Entropy::ByteSize() const {$/;"	f	class:Entropy
ByteSize	protob/messages.pb.cc	/^int EntropyAck::ByteSize() const {$/;"	f	class:EntropyAck
ByteSize	protob/messages.pb.cc	/^int EntropyRequest::ByteSize() const {$/;"	f	class:EntropyRequest
ByteSize	protob/messages.pb.cc	/^int EstimateTxSize::ByteSize() const {$/;"	f	class:EstimateTxSize
ByteSize	protob/messages.pb.cc	/^int Failure::ByteSize() const {$/;"	f	class:Failure
ByteSize	protob/messages.pb.cc	/^int Features::ByteSize() const {$/;"	f	class:Features
ByteSize	protob/messages.pb.cc	/^int FirmwareErase::ByteSize() const {$/;"	f	class:FirmwareErase
ByteSize	protob/messages.pb.cc	/^int FirmwareUpload::ByteSize() const {$/;"	f	class:FirmwareUpload
ByteSize	protob/messages.pb.cc	/^int GetAddress::ByteSize() const {$/;"	f	class:GetAddress
ByteSize	protob/messages.pb.cc	/^int GetEntropy::ByteSize() const {$/;"	f	class:GetEntropy
ByteSize	protob/messages.pb.cc	/^int GetPublicKey::ByteSize() const {$/;"	f	class:GetPublicKey
ByteSize	protob/messages.pb.cc	/^int Initialize::ByteSize() const {$/;"	f	class:Initialize
ByteSize	protob/messages.pb.cc	/^int LoadDevice::ByteSize() const {$/;"	f	class:LoadDevice
ByteSize	protob/messages.pb.cc	/^int MessageSignature::ByteSize() const {$/;"	f	class:MessageSignature
ByteSize	protob/messages.pb.cc	/^int PassphraseAck::ByteSize() const {$/;"	f	class:PassphraseAck
ByteSize	protob/messages.pb.cc	/^int PassphraseRequest::ByteSize() const {$/;"	f	class:PassphraseRequest
ByteSize	protob/messages.pb.cc	/^int PinMatrixAck::ByteSize() const {$/;"	f	class:PinMatrixAck
ByteSize	protob/messages.pb.cc	/^int PinMatrixRequest::ByteSize() const {$/;"	f	class:PinMatrixRequest
ByteSize	protob/messages.pb.cc	/^int Ping::ByteSize() const {$/;"	f	class:Ping
ByteSize	protob/messages.pb.cc	/^int PublicKey::ByteSize() const {$/;"	f	class:PublicKey
ByteSize	protob/messages.pb.cc	/^int RecoveryDevice::ByteSize() const {$/;"	f	class:RecoveryDevice
ByteSize	protob/messages.pb.cc	/^int ResetDevice::ByteSize() const {$/;"	f	class:ResetDevice
ByteSize	protob/messages.pb.cc	/^int SignMessage::ByteSize() const {$/;"	f	class:SignMessage
ByteSize	protob/messages.pb.cc	/^int SignTx::ByteSize() const {$/;"	f	class:SignTx
ByteSize	protob/messages.pb.cc	/^int SimpleSignTx::ByteSize() const {$/;"	f	class:SimpleSignTx
ByteSize	protob/messages.pb.cc	/^int Success::ByteSize() const {$/;"	f	class:Success
ByteSize	protob/messages.pb.cc	/^int TestScreen::ByteSize() const {$/;"	f	class:TestScreen
ByteSize	protob/messages.pb.cc	/^int TxAck::ByteSize() const {$/;"	f	class:TxAck
ByteSize	protob/messages.pb.cc	/^int TxRequest::ByteSize() const {$/;"	f	class:TxRequest
ByteSize	protob/messages.pb.cc	/^int TxSize::ByteSize() const {$/;"	f	class:TxSize
ByteSize	protob/messages.pb.cc	/^int VerifyMessage::ByteSize() const {$/;"	f	class:VerifyMessage
ByteSize	protob/messages.pb.cc	/^int WipeDevice::ByteSize() const {$/;"	f	class:WipeDevice
ByteSize	protob/messages.pb.cc	/^int WordAck::ByteSize() const {$/;"	f	class:WordAck
ByteSize	protob/messages.pb.cc	/^int WordRequest::ByteSize() const {$/;"	f	class:WordRequest
ByteSize	protob/storage.pb.cc	/^int Storage::ByteSize() const {$/;"	f	class:Storage
ByteSize	protob/types.pb.cc	/^int CoinType::ByteSize() const {$/;"	f	class:CoinType
ByteSize	protob/types.pb.cc	/^int HDNodeType::ByteSize() const {$/;"	f	class:HDNodeType
ByteSize	protob/types.pb.cc	/^int MultisigRedeemScriptType::ByteSize() const {$/;"	f	class:MultisigRedeemScriptType
ByteSize	protob/types.pb.cc	/^int TransactionType::ByteSize() const {$/;"	f	class:TransactionType
ByteSize	protob/types.pb.cc	/^int TxInputType::ByteSize() const {$/;"	f	class:TxInputType
ByteSize	protob/types.pb.cc	/^int TxOutputBinType::ByteSize() const {$/;"	f	class:TxOutputBinType
ByteSize	protob/types.pb.cc	/^int TxOutputType::ByteSize() const {$/;"	f	class:TxOutputType
ByteSize	protob/types.pb.cc	/^int TxRequestDetailsType::ByteSize() const {$/;"	f	class:TxRequestDetailsType
ByteSize	protob/types.pb.cc	/^int TxRequestSerializedType::ByteSize() const {$/;"	f	class:TxRequestSerializedType
CCHECK	easylogging++.h	6195;"	d
CCHECK	easylogging++.h	6217;"	d
CCHECK_EQ	easylogging++.h	6197;"	d
CCHECK_EQ	easylogging++.h	6221;"	d
CCHECK_GE	easylogging++.h	6202;"	d
CCHECK_GE	easylogging++.h	6226;"	d
CCHECK_GT	easylogging++.h	6200;"	d
CCHECK_GT	easylogging++.h	6224;"	d
CCHECK_LE	easylogging++.h	6201;"	d
CCHECK_LE	easylogging++.h	6225;"	d
CCHECK_LT	easylogging++.h	6199;"	d
CCHECK_LT	easylogging++.h	6223;"	d
CCHECK_NE	easylogging++.h	6198;"	d
CCHECK_NE	easylogging++.h	6222;"	d
CCHECK_NOTNULL	easylogging++.h	6203;"	d
CCHECK_NOTNULL	easylogging++.h	6244;"	d
CCHECK_STRCASEEQ	easylogging++.h	6204;"	d
CCHECK_STRCASEEQ	easylogging++.h	6249;"	d
CCHECK_STRCASENE	easylogging++.h	6205;"	d
CCHECK_STRCASENE	easylogging++.h	6251;"	d
CCHECK_STREQ	easylogging++.h	6245;"	d
CCHECK_STRNE	easylogging++.h	6247;"	d
CDEBUG	easylogging++.h	5733;"	d
CDEBUG	easylogging++.h	5778;"	d
CDEBUG_AFTER_N	easylogging++.h	5754;"	d
CDEBUG_AFTER_N	easylogging++.h	5903;"	d
CDEBUG_EVERY_N	easylogging++.h	5747;"	d
CDEBUG_EVERY_N	easylogging++.h	5860;"	d
CDEBUG_IF	easylogging++.h	5740;"	d
CDEBUG_IF	easylogging++.h	5817;"	d
CDEBUG_N_TIMES	easylogging++.h	5761;"	d
CDEBUG_N_TIMES	easylogging++.h	5946;"	d
CERROR	easylogging++.h	5735;"	d
CERROR	easylogging++.h	5783;"	d
CERROR_AFTER_N	easylogging++.h	5755;"	d
CERROR_AFTER_N	easylogging++.h	5909;"	d
CERROR_EVERY_N	easylogging++.h	5748;"	d
CERROR_EVERY_N	easylogging++.h	5866;"	d
CERROR_IF	easylogging++.h	5741;"	d
CERROR_IF	easylogging++.h	5823;"	d
CERROR_N_TIMES	easylogging++.h	5762;"	d
CERROR_N_TIMES	easylogging++.h	5952;"	d
CFATAL	easylogging++.h	5734;"	d
CFATAL	easylogging++.h	5788;"	d
CFATAL_AFTER_N	easylogging++.h	5756;"	d
CFATAL_AFTER_N	easylogging++.h	5915;"	d
CFATAL_EVERY_N	easylogging++.h	5749;"	d
CFATAL_EVERY_N	easylogging++.h	5872;"	d
CFATAL_IF	easylogging++.h	5742;"	d
CFATAL_IF	easylogging++.h	5829;"	d
CFATAL_N_TIMES	easylogging++.h	5763;"	d
CFATAL_N_TIMES	easylogging++.h	5958;"	d
CHECK	easylogging++.h	6206;"	d
CHECK	easylogging++.h	6219;"	d
CHECK_EQ	easylogging++.h	6208;"	d
CHECK_EQ	easylogging++.h	6227;"	d
CHECK_GE	easylogging++.h	6213;"	d
CHECK_GE	easylogging++.h	6232;"	d
CHECK_GT	easylogging++.h	6211;"	d
CHECK_GT	easylogging++.h	6230;"	d
CHECK_LE	easylogging++.h	6212;"	d
CHECK_LE	easylogging++.h	6231;"	d
CHECK_LT	easylogging++.h	6210;"	d
CHECK_LT	easylogging++.h	6229;"	d
CHECK_NE	easylogging++.h	6209;"	d
CHECK_NE	easylogging++.h	6228;"	d
CHECK_NOTNULL	easylogging++.h	6214;"	d
CHECK_NOTNULL	easylogging++.h	6253;"	d
CHECK_STRCASEEQ	easylogging++.h	6215;"	d
CHECK_STRCASEEQ	easylogging++.h	6256;"	d
CHECK_STRCASENE	easylogging++.h	6216;"	d
CHECK_STRCASENE	easylogging++.h	6257;"	d
CHECK_STREQ	easylogging++.h	6254;"	d
CHECK_STRNE	easylogging++.h	6255;"	d
CINFO	easylogging++.h	5731;"	d
CINFO	easylogging++.h	5768;"	d
CINFO_AFTER_N	easylogging++.h	5752;"	d
CINFO_AFTER_N	easylogging++.h	5891;"	d
CINFO_EVERY_N	easylogging++.h	5745;"	d
CINFO_EVERY_N	easylogging++.h	5848;"	d
CINFO_IF	easylogging++.h	5738;"	d
CINFO_IF	easylogging++.h	5805;"	d
CINFO_N_TIMES	easylogging++.h	5759;"	d
CINFO_N_TIMES	easylogging++.h	5934;"	d
CLOG	easylogging++.h	5979;"	d
CLOG	easylogging++.h	5992;"	d
CLOG_AFTER_N	easylogging++.h	5987;"	d
CLOG_AFTER_N	easylogging++.h	6005;"	d
CLOG_EVERY_N	easylogging++.h	5985;"	d
CLOG_EVERY_N	easylogging++.h	6001;"	d
CLOG_IF	easylogging++.h	5982;"	d
CLOG_IF	easylogging++.h	5996;"	d
CLOG_N_TIMES	easylogging++.h	5989;"	d
CLOG_N_TIMES	easylogging++.h	6009;"	d
CLOG_VERBOSE	easylogging++.h	5980;"	d
CLOG_VERBOSE_IF	easylogging++.h	5983;"	d
CPCHECK	easylogging++.h	6196;"	d
CPCHECK	easylogging++.h	6218;"	d
CPLOG	easylogging++.h	6049;"	d
CPLOG	easylogging++.h	6057;"	d
CPLOG_IF	easylogging++.h	6050;"	d
CPLOG_IF	easylogging++.h	6059;"	d
CSYSLOG	easylogging++.h	6070;"	d
CSYSLOG	easylogging++.h	6091;"	d
CSYSLOG_AFTER_N	easylogging++.h	6073;"	d
CSYSLOG_AFTER_N	easylogging++.h	6096;"	d
CSYSLOG_EVERY_N	easylogging++.h	6072;"	d
CSYSLOG_EVERY_N	easylogging++.h	6095;"	d
CSYSLOG_IF	easylogging++.h	6071;"	d
CSYSLOG_IF	easylogging++.h	6093;"	d
CSYSLOG_N_TIMES	easylogging++.h	6074;"	d
CSYSLOG_N_TIMES	easylogging++.h	6097;"	d
CTRACE	easylogging++.h	5736;"	d
CTRACE	easylogging++.h	5793;"	d
CTRACE_AFTER_N	easylogging++.h	5757;"	d
CTRACE_AFTER_N	easylogging++.h	5921;"	d
CTRACE_EVERY_N	easylogging++.h	5750;"	d
CTRACE_EVERY_N	easylogging++.h	5878;"	d
CTRACE_IF	easylogging++.h	5743;"	d
CTRACE_IF	easylogging++.h	5835;"	d
CTRACE_N_TIMES	easylogging++.h	5764;"	d
CTRACE_N_TIMES	easylogging++.h	5964;"	d
CVERBOSE	easylogging++.h	5737;"	d
CVERBOSE	easylogging++.h	5798;"	d
CVERBOSE_AFTER_N	easylogging++.h	5758;"	d
CVERBOSE_AFTER_N	easylogging++.h	5927;"	d
CVERBOSE_EVERY_N	easylogging++.h	5751;"	d
CVERBOSE_EVERY_N	easylogging++.h	5884;"	d
CVERBOSE_IF	easylogging++.h	5744;"	d
CVERBOSE_IF	easylogging++.h	5841;"	d
CVERBOSE_N_TIMES	easylogging++.h	5765;"	d
CVERBOSE_N_TIMES	easylogging++.h	5970;"	d
CVLOG	easylogging++.h	5981;"	d
CVLOG	easylogging++.h	5994;"	d
CVLOG_AFTER_N	easylogging++.h	5988;"	d
CVLOG_AFTER_N	easylogging++.h	6007;"	d
CVLOG_EVERY_N	easylogging++.h	5986;"	d
CVLOG_EVERY_N	easylogging++.h	6003;"	d
CVLOG_IF	easylogging++.h	5984;"	d
CVLOG_IF	easylogging++.h	5998;"	d
CVLOG_N_TIMES	easylogging++.h	5990;"	d
CVLOG_N_TIMES	easylogging++.h	6011;"	d
CWARNING	easylogging++.h	5732;"	d
CWARNING	easylogging++.h	5773;"	d
CWARNING_AFTER_N	easylogging++.h	5753;"	d
CWARNING_AFTER_N	easylogging++.h	5897;"	d
CWARNING_EVERY_N	easylogging++.h	5746;"	d
CWARNING_EVERY_N	easylogging++.h	5854;"	d
CWARNING_IF	easylogging++.h	5739;"	d
CWARNING_IF	easylogging++.h	5811;"	d
CWARNING_N_TIMES	easylogging++.h	5760;"	d
CWARNING_N_TIMES	easylogging++.h	5940;"	d
Callback	easylogging++.h	/^    Callback(void) : m_enabled(true) {}$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Callback
Callback	easylogging++.h	/^class Callback : protected base::threading::ThreadSafe {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base
Cancel	protob/messages.pb.cc	/^Cancel::Cancel()$/;"	f	class:Cancel
Cancel	protob/messages.pb.cc	/^Cancel::Cancel(const Cancel& from)$/;"	f	class:Cancel
Cancel	protob/messages.pb.h	/^class Cancel : public ::google::protobuf::Message {$/;"	c
Cancel_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* Cancel_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
Cancel_reflection_	protob/messages.pb.cc	/^  Cancel_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
ChangePin	protob/messages.pb.cc	/^ChangePin::ChangePin()$/;"	f	class:ChangePin
ChangePin	protob/messages.pb.cc	/^ChangePin::ChangePin(const ChangePin& from)$/;"	f	class:ChangePin
ChangePin	protob/messages.pb.h	/^class ChangePin : public ::google::protobuf::Message {$/;"	c
ChangePin_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* ChangePin_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
ChangePin_reflection_	protob/messages.pb.cc	/^  ChangePin_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
Checkpoint	easylogging++.h	/^        Checkpoint = 1, Complete = 2$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::DataType
CipherKeyValue	protob/messages.pb.cc	/^CipherKeyValue::CipherKeyValue()$/;"	f	class:CipherKeyValue
CipherKeyValue	protob/messages.pb.cc	/^CipherKeyValue::CipherKeyValue(const CipherKeyValue& from)$/;"	f	class:CipherKeyValue
CipherKeyValue	protob/messages.pb.h	/^class CipherKeyValue : public ::google::protobuf::Message {$/;"	c
CipherKeyValue_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* CipherKeyValue_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
CipherKeyValue_reflection_	protob/messages.pb.cc	/^  CipherKeyValue_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
Clear	protob/config.pb.cc	/^void Configuration::Clear() {$/;"	f	class:Configuration
Clear	protob/config.pb.cc	/^void DeviceDescriptor::Clear() {$/;"	f	class:DeviceDescriptor
Clear	protob/messages.pb.cc	/^void Address::Clear() {$/;"	f	class:Address
Clear	protob/messages.pb.cc	/^void ApplySettings::Clear() {$/;"	f	class:ApplySettings
Clear	protob/messages.pb.cc	/^void ButtonAck::Clear() {$/;"	f	class:ButtonAck
Clear	protob/messages.pb.cc	/^void ButtonRequest::Clear() {$/;"	f	class:ButtonRequest
Clear	protob/messages.pb.cc	/^void Cancel::Clear() {$/;"	f	class:Cancel
Clear	protob/messages.pb.cc	/^void ChangePin::Clear() {$/;"	f	class:ChangePin
Clear	protob/messages.pb.cc	/^void CipherKeyValue::Clear() {$/;"	f	class:CipherKeyValue
Clear	protob/messages.pb.cc	/^void ClearSession::Clear() {$/;"	f	class:ClearSession
Clear	protob/messages.pb.cc	/^void DebugLinkDecision::Clear() {$/;"	f	class:DebugLinkDecision
Clear	protob/messages.pb.cc	/^void DebugLinkGetState::Clear() {$/;"	f	class:DebugLinkGetState
Clear	protob/messages.pb.cc	/^void DebugLinkLog::Clear() {$/;"	f	class:DebugLinkLog
Clear	protob/messages.pb.cc	/^void DebugLinkState::Clear() {$/;"	f	class:DebugLinkState
Clear	protob/messages.pb.cc	/^void DebugLinkStop::Clear() {$/;"	f	class:DebugLinkStop
Clear	protob/messages.pb.cc	/^void DecryptMessage::Clear() {$/;"	f	class:DecryptMessage
Clear	protob/messages.pb.cc	/^void EncryptMessage::Clear() {$/;"	f	class:EncryptMessage
Clear	protob/messages.pb.cc	/^void Entropy::Clear() {$/;"	f	class:Entropy
Clear	protob/messages.pb.cc	/^void EntropyAck::Clear() {$/;"	f	class:EntropyAck
Clear	protob/messages.pb.cc	/^void EntropyRequest::Clear() {$/;"	f	class:EntropyRequest
Clear	protob/messages.pb.cc	/^void EstimateTxSize::Clear() {$/;"	f	class:EstimateTxSize
Clear	protob/messages.pb.cc	/^void Failure::Clear() {$/;"	f	class:Failure
Clear	protob/messages.pb.cc	/^void Features::Clear() {$/;"	f	class:Features
Clear	protob/messages.pb.cc	/^void FirmwareErase::Clear() {$/;"	f	class:FirmwareErase
Clear	protob/messages.pb.cc	/^void FirmwareUpload::Clear() {$/;"	f	class:FirmwareUpload
Clear	protob/messages.pb.cc	/^void GetAddress::Clear() {$/;"	f	class:GetAddress
Clear	protob/messages.pb.cc	/^void GetEntropy::Clear() {$/;"	f	class:GetEntropy
Clear	protob/messages.pb.cc	/^void GetPublicKey::Clear() {$/;"	f	class:GetPublicKey
Clear	protob/messages.pb.cc	/^void Initialize::Clear() {$/;"	f	class:Initialize
Clear	protob/messages.pb.cc	/^void LoadDevice::Clear() {$/;"	f	class:LoadDevice
Clear	protob/messages.pb.cc	/^void MessageSignature::Clear() {$/;"	f	class:MessageSignature
Clear	protob/messages.pb.cc	/^void PassphraseAck::Clear() {$/;"	f	class:PassphraseAck
Clear	protob/messages.pb.cc	/^void PassphraseRequest::Clear() {$/;"	f	class:PassphraseRequest
Clear	protob/messages.pb.cc	/^void PinMatrixAck::Clear() {$/;"	f	class:PinMatrixAck
Clear	protob/messages.pb.cc	/^void PinMatrixRequest::Clear() {$/;"	f	class:PinMatrixRequest
Clear	protob/messages.pb.cc	/^void Ping::Clear() {$/;"	f	class:Ping
Clear	protob/messages.pb.cc	/^void PublicKey::Clear() {$/;"	f	class:PublicKey
Clear	protob/messages.pb.cc	/^void RecoveryDevice::Clear() {$/;"	f	class:RecoveryDevice
Clear	protob/messages.pb.cc	/^void ResetDevice::Clear() {$/;"	f	class:ResetDevice
Clear	protob/messages.pb.cc	/^void SignMessage::Clear() {$/;"	f	class:SignMessage
Clear	protob/messages.pb.cc	/^void SignTx::Clear() {$/;"	f	class:SignTx
Clear	protob/messages.pb.cc	/^void SimpleSignTx::Clear() {$/;"	f	class:SimpleSignTx
Clear	protob/messages.pb.cc	/^void Success::Clear() {$/;"	f	class:Success
Clear	protob/messages.pb.cc	/^void TestScreen::Clear() {$/;"	f	class:TestScreen
Clear	protob/messages.pb.cc	/^void TxAck::Clear() {$/;"	f	class:TxAck
Clear	protob/messages.pb.cc	/^void TxRequest::Clear() {$/;"	f	class:TxRequest
Clear	protob/messages.pb.cc	/^void TxSize::Clear() {$/;"	f	class:TxSize
Clear	protob/messages.pb.cc	/^void VerifyMessage::Clear() {$/;"	f	class:VerifyMessage
Clear	protob/messages.pb.cc	/^void WipeDevice::Clear() {$/;"	f	class:WipeDevice
Clear	protob/messages.pb.cc	/^void WordAck::Clear() {$/;"	f	class:WordAck
Clear	protob/messages.pb.cc	/^void WordRequest::Clear() {$/;"	f	class:WordRequest
Clear	protob/storage.pb.cc	/^void Storage::Clear() {$/;"	f	class:Storage
Clear	protob/types.pb.cc	/^void CoinType::Clear() {$/;"	f	class:CoinType
Clear	protob/types.pb.cc	/^void HDNodeType::Clear() {$/;"	f	class:HDNodeType
Clear	protob/types.pb.cc	/^void MultisigRedeemScriptType::Clear() {$/;"	f	class:MultisigRedeemScriptType
Clear	protob/types.pb.cc	/^void TransactionType::Clear() {$/;"	f	class:TransactionType
Clear	protob/types.pb.cc	/^void TxInputType::Clear() {$/;"	f	class:TxInputType
Clear	protob/types.pb.cc	/^void TxOutputBinType::Clear() {$/;"	f	class:TxOutputBinType
Clear	protob/types.pb.cc	/^void TxOutputType::Clear() {$/;"	f	class:TxOutputType
Clear	protob/types.pb.cc	/^void TxRequestDetailsType::Clear() {$/;"	f	class:TxRequestDetailsType
Clear	protob/types.pb.cc	/^void TxRequestSerializedType::Clear() {$/;"	f	class:TxRequestSerializedType
ClearSession	protob/messages.pb.cc	/^ClearSession::ClearSession()$/;"	f	class:ClearSession
ClearSession	protob/messages.pb.cc	/^ClearSession::ClearSession(const ClearSession& from)$/;"	f	class:ClearSession
ClearSession	protob/messages.pb.h	/^class ClearSession : public ::google::protobuf::Message {$/;"	c
ClearSession_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* ClearSession_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
ClearSession_reflection_	protob/messages.pb.cc	/^  ClearSession_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
CoinType	protob/types.pb.cc	/^CoinType::CoinType()$/;"	f	class:CoinType
CoinType	protob/types.pb.cc	/^CoinType::CoinType(const CoinType& from)$/;"	f	class:CoinType
CoinType	protob/types.pb.h	/^class CoinType : public ::google::protobuf::Message {$/;"	c
CoinType_descriptor_	protob/types.pb.cc	/^const ::google::protobuf::Descriptor* CoinType_descriptor_ = NULL;$/;"	m	namespace:__anon3	file:
CoinType_reflection_	protob/types.pb.cc	/^  CoinType_reflection_ = NULL;$/;"	m	namespace:__anon3	file:
ColoredTerminalOutput	easylogging++.h	/^    ColoredTerminalOutput = 64,$/;"	m	class:el::Level::ConfigurationType::LoggingFlag
CommandLineArgs	easylogging++.h	/^    CommandLineArgs(int argc, char** argv) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::CommandLineArgs
CommandLineArgs	easylogging++.h	/^    CommandLineArgs(int argc, const char** argv) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::CommandLineArgs
CommandLineArgs	easylogging++.h	/^    CommandLineArgs(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::CommandLineArgs
CommandLineArgs	easylogging++.h	/^class CommandLineArgs {$/;"	c	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime
Complete	easylogging++.h	/^        Checkpoint = 1, Complete = 2$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::DataType
Configuration	easylogging++.h	/^    Configuration(Level level, ConfigurationType configurationType, const std::string& value) :$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configuration
Configuration	easylogging++.h	/^    Configuration(const Configuration& c) :$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configuration
Configuration	easylogging++.h	/^class Configuration : public Loggable {$/;"	c	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File
Configuration	protob/config.pb.cc	/^Configuration::Configuration()$/;"	f	class:Configuration
Configuration	protob/config.pb.cc	/^Configuration::Configuration(const Configuration& from)$/;"	f	class:Configuration
Configuration	protob/config.pb.h	/^class Configuration : public ::google::protobuf::Message {$/;"	c
ConfigurationType	easylogging++.h	/^enum class ConfigurationType : base::type::EnumType {$/;"	c	class:el::Level
ConfigurationTypeHelper	easylogging++.h	/^class ConfigurationTypeHelper : base::StaticClass {$/;"	c	class:el::Level::ConfigurationType
Configuration_descriptor_	protob/config.pb.cc	/^const ::google::protobuf::Descriptor* Configuration_descriptor_ = NULL;$/;"	m	namespace:__anon7	file:
Configuration_reflection_	protob/config.pb.cc	/^  Configuration_reflection_ = NULL;$/;"	m	namespace:__anon7	file:
Configurations	easylogging++.h	/^    Configurations(const std::string& configurationFile, bool useDefaultsForRemaining = true, Configurations* base = nullptr) :$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations
Configurations	easylogging++.h	/^    Configurations(void) :$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations
Configurations	easylogging++.h	/^class Configurations : public base::utils::RegistryWithPred<Configuration, Configuration::Predicate> {$/;"	c	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File
CopyFrom	protob/config.pb.cc	/^void Configuration::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:Configuration
CopyFrom	protob/config.pb.cc	/^void Configuration::CopyFrom(const Configuration& from) {$/;"	f	class:Configuration
CopyFrom	protob/config.pb.cc	/^void DeviceDescriptor::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:DeviceDescriptor
CopyFrom	protob/config.pb.cc	/^void DeviceDescriptor::CopyFrom(const DeviceDescriptor& from) {$/;"	f	class:DeviceDescriptor
CopyFrom	protob/messages.pb.cc	/^void Address::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:Address
CopyFrom	protob/messages.pb.cc	/^void Address::CopyFrom(const Address& from) {$/;"	f	class:Address
CopyFrom	protob/messages.pb.cc	/^void ApplySettings::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:ApplySettings
CopyFrom	protob/messages.pb.cc	/^void ApplySettings::CopyFrom(const ApplySettings& from) {$/;"	f	class:ApplySettings
CopyFrom	protob/messages.pb.cc	/^void ButtonAck::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:ButtonAck
CopyFrom	protob/messages.pb.cc	/^void ButtonAck::CopyFrom(const ButtonAck& from) {$/;"	f	class:ButtonAck
CopyFrom	protob/messages.pb.cc	/^void ButtonRequest::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:ButtonRequest
CopyFrom	protob/messages.pb.cc	/^void ButtonRequest::CopyFrom(const ButtonRequest& from) {$/;"	f	class:ButtonRequest
CopyFrom	protob/messages.pb.cc	/^void Cancel::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:Cancel
CopyFrom	protob/messages.pb.cc	/^void Cancel::CopyFrom(const Cancel& from) {$/;"	f	class:Cancel
CopyFrom	protob/messages.pb.cc	/^void ChangePin::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:ChangePin
CopyFrom	protob/messages.pb.cc	/^void ChangePin::CopyFrom(const ChangePin& from) {$/;"	f	class:ChangePin
CopyFrom	protob/messages.pb.cc	/^void CipherKeyValue::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:CipherKeyValue
CopyFrom	protob/messages.pb.cc	/^void CipherKeyValue::CopyFrom(const CipherKeyValue& from) {$/;"	f	class:CipherKeyValue
CopyFrom	protob/messages.pb.cc	/^void ClearSession::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:ClearSession
CopyFrom	protob/messages.pb.cc	/^void ClearSession::CopyFrom(const ClearSession& from) {$/;"	f	class:ClearSession
CopyFrom	protob/messages.pb.cc	/^void DebugLinkDecision::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:DebugLinkDecision
CopyFrom	protob/messages.pb.cc	/^void DebugLinkDecision::CopyFrom(const DebugLinkDecision& from) {$/;"	f	class:DebugLinkDecision
CopyFrom	protob/messages.pb.cc	/^void DebugLinkGetState::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:DebugLinkGetState
CopyFrom	protob/messages.pb.cc	/^void DebugLinkGetState::CopyFrom(const DebugLinkGetState& from) {$/;"	f	class:DebugLinkGetState
CopyFrom	protob/messages.pb.cc	/^void DebugLinkLog::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:DebugLinkLog
CopyFrom	protob/messages.pb.cc	/^void DebugLinkLog::CopyFrom(const DebugLinkLog& from) {$/;"	f	class:DebugLinkLog
CopyFrom	protob/messages.pb.cc	/^void DebugLinkState::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:DebugLinkState
CopyFrom	protob/messages.pb.cc	/^void DebugLinkState::CopyFrom(const DebugLinkState& from) {$/;"	f	class:DebugLinkState
CopyFrom	protob/messages.pb.cc	/^void DebugLinkStop::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:DebugLinkStop
CopyFrom	protob/messages.pb.cc	/^void DebugLinkStop::CopyFrom(const DebugLinkStop& from) {$/;"	f	class:DebugLinkStop
CopyFrom	protob/messages.pb.cc	/^void DecryptMessage::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:DecryptMessage
CopyFrom	protob/messages.pb.cc	/^void DecryptMessage::CopyFrom(const DecryptMessage& from) {$/;"	f	class:DecryptMessage
CopyFrom	protob/messages.pb.cc	/^void EncryptMessage::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:EncryptMessage
CopyFrom	protob/messages.pb.cc	/^void EncryptMessage::CopyFrom(const EncryptMessage& from) {$/;"	f	class:EncryptMessage
CopyFrom	protob/messages.pb.cc	/^void Entropy::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:Entropy
CopyFrom	protob/messages.pb.cc	/^void Entropy::CopyFrom(const Entropy& from) {$/;"	f	class:Entropy
CopyFrom	protob/messages.pb.cc	/^void EntropyAck::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:EntropyAck
CopyFrom	protob/messages.pb.cc	/^void EntropyAck::CopyFrom(const EntropyAck& from) {$/;"	f	class:EntropyAck
CopyFrom	protob/messages.pb.cc	/^void EntropyRequest::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:EntropyRequest
CopyFrom	protob/messages.pb.cc	/^void EntropyRequest::CopyFrom(const EntropyRequest& from) {$/;"	f	class:EntropyRequest
CopyFrom	protob/messages.pb.cc	/^void EstimateTxSize::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:EstimateTxSize
CopyFrom	protob/messages.pb.cc	/^void EstimateTxSize::CopyFrom(const EstimateTxSize& from) {$/;"	f	class:EstimateTxSize
CopyFrom	protob/messages.pb.cc	/^void Failure::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:Failure
CopyFrom	protob/messages.pb.cc	/^void Failure::CopyFrom(const Failure& from) {$/;"	f	class:Failure
CopyFrom	protob/messages.pb.cc	/^void Features::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:Features
CopyFrom	protob/messages.pb.cc	/^void Features::CopyFrom(const Features& from) {$/;"	f	class:Features
CopyFrom	protob/messages.pb.cc	/^void FirmwareErase::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:FirmwareErase
CopyFrom	protob/messages.pb.cc	/^void FirmwareErase::CopyFrom(const FirmwareErase& from) {$/;"	f	class:FirmwareErase
CopyFrom	protob/messages.pb.cc	/^void FirmwareUpload::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:FirmwareUpload
CopyFrom	protob/messages.pb.cc	/^void FirmwareUpload::CopyFrom(const FirmwareUpload& from) {$/;"	f	class:FirmwareUpload
CopyFrom	protob/messages.pb.cc	/^void GetAddress::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:GetAddress
CopyFrom	protob/messages.pb.cc	/^void GetAddress::CopyFrom(const GetAddress& from) {$/;"	f	class:GetAddress
CopyFrom	protob/messages.pb.cc	/^void GetEntropy::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:GetEntropy
CopyFrom	protob/messages.pb.cc	/^void GetEntropy::CopyFrom(const GetEntropy& from) {$/;"	f	class:GetEntropy
CopyFrom	protob/messages.pb.cc	/^void GetPublicKey::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:GetPublicKey
CopyFrom	protob/messages.pb.cc	/^void GetPublicKey::CopyFrom(const GetPublicKey& from) {$/;"	f	class:GetPublicKey
CopyFrom	protob/messages.pb.cc	/^void Initialize::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:Initialize
CopyFrom	protob/messages.pb.cc	/^void Initialize::CopyFrom(const Initialize& from) {$/;"	f	class:Initialize
CopyFrom	protob/messages.pb.cc	/^void LoadDevice::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:LoadDevice
CopyFrom	protob/messages.pb.cc	/^void LoadDevice::CopyFrom(const LoadDevice& from) {$/;"	f	class:LoadDevice
CopyFrom	protob/messages.pb.cc	/^void MessageSignature::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:MessageSignature
CopyFrom	protob/messages.pb.cc	/^void MessageSignature::CopyFrom(const MessageSignature& from) {$/;"	f	class:MessageSignature
CopyFrom	protob/messages.pb.cc	/^void PassphraseAck::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:PassphraseAck
CopyFrom	protob/messages.pb.cc	/^void PassphraseAck::CopyFrom(const PassphraseAck& from) {$/;"	f	class:PassphraseAck
CopyFrom	protob/messages.pb.cc	/^void PassphraseRequest::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:PassphraseRequest
CopyFrom	protob/messages.pb.cc	/^void PassphraseRequest::CopyFrom(const PassphraseRequest& from) {$/;"	f	class:PassphraseRequest
CopyFrom	protob/messages.pb.cc	/^void PinMatrixAck::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:PinMatrixAck
CopyFrom	protob/messages.pb.cc	/^void PinMatrixAck::CopyFrom(const PinMatrixAck& from) {$/;"	f	class:PinMatrixAck
CopyFrom	protob/messages.pb.cc	/^void PinMatrixRequest::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:PinMatrixRequest
CopyFrom	protob/messages.pb.cc	/^void PinMatrixRequest::CopyFrom(const PinMatrixRequest& from) {$/;"	f	class:PinMatrixRequest
CopyFrom	protob/messages.pb.cc	/^void Ping::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:Ping
CopyFrom	protob/messages.pb.cc	/^void Ping::CopyFrom(const Ping& from) {$/;"	f	class:Ping
CopyFrom	protob/messages.pb.cc	/^void PublicKey::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:PublicKey
CopyFrom	protob/messages.pb.cc	/^void PublicKey::CopyFrom(const PublicKey& from) {$/;"	f	class:PublicKey
CopyFrom	protob/messages.pb.cc	/^void RecoveryDevice::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:RecoveryDevice
CopyFrom	protob/messages.pb.cc	/^void RecoveryDevice::CopyFrom(const RecoveryDevice& from) {$/;"	f	class:RecoveryDevice
CopyFrom	protob/messages.pb.cc	/^void ResetDevice::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:ResetDevice
CopyFrom	protob/messages.pb.cc	/^void ResetDevice::CopyFrom(const ResetDevice& from) {$/;"	f	class:ResetDevice
CopyFrom	protob/messages.pb.cc	/^void SignMessage::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:SignMessage
CopyFrom	protob/messages.pb.cc	/^void SignMessage::CopyFrom(const SignMessage& from) {$/;"	f	class:SignMessage
CopyFrom	protob/messages.pb.cc	/^void SignTx::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:SignTx
CopyFrom	protob/messages.pb.cc	/^void SignTx::CopyFrom(const SignTx& from) {$/;"	f	class:SignTx
CopyFrom	protob/messages.pb.cc	/^void SimpleSignTx::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:SimpleSignTx
CopyFrom	protob/messages.pb.cc	/^void SimpleSignTx::CopyFrom(const SimpleSignTx& from) {$/;"	f	class:SimpleSignTx
CopyFrom	protob/messages.pb.cc	/^void Success::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:Success
CopyFrom	protob/messages.pb.cc	/^void Success::CopyFrom(const Success& from) {$/;"	f	class:Success
CopyFrom	protob/messages.pb.cc	/^void TestScreen::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:TestScreen
CopyFrom	protob/messages.pb.cc	/^void TestScreen::CopyFrom(const TestScreen& from) {$/;"	f	class:TestScreen
CopyFrom	protob/messages.pb.cc	/^void TxAck::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:TxAck
CopyFrom	protob/messages.pb.cc	/^void TxAck::CopyFrom(const TxAck& from) {$/;"	f	class:TxAck
CopyFrom	protob/messages.pb.cc	/^void TxRequest::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:TxRequest
CopyFrom	protob/messages.pb.cc	/^void TxRequest::CopyFrom(const TxRequest& from) {$/;"	f	class:TxRequest
CopyFrom	protob/messages.pb.cc	/^void TxSize::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:TxSize
CopyFrom	protob/messages.pb.cc	/^void TxSize::CopyFrom(const TxSize& from) {$/;"	f	class:TxSize
CopyFrom	protob/messages.pb.cc	/^void VerifyMessage::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:VerifyMessage
CopyFrom	protob/messages.pb.cc	/^void VerifyMessage::CopyFrom(const VerifyMessage& from) {$/;"	f	class:VerifyMessage
CopyFrom	protob/messages.pb.cc	/^void WipeDevice::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:WipeDevice
CopyFrom	protob/messages.pb.cc	/^void WipeDevice::CopyFrom(const WipeDevice& from) {$/;"	f	class:WipeDevice
CopyFrom	protob/messages.pb.cc	/^void WordAck::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:WordAck
CopyFrom	protob/messages.pb.cc	/^void WordAck::CopyFrom(const WordAck& from) {$/;"	f	class:WordAck
CopyFrom	protob/messages.pb.cc	/^void WordRequest::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:WordRequest
CopyFrom	protob/messages.pb.cc	/^void WordRequest::CopyFrom(const WordRequest& from) {$/;"	f	class:WordRequest
CopyFrom	protob/storage.pb.cc	/^void Storage::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:Storage
CopyFrom	protob/storage.pb.cc	/^void Storage::CopyFrom(const Storage& from) {$/;"	f	class:Storage
CopyFrom	protob/types.pb.cc	/^void CoinType::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:CoinType
CopyFrom	protob/types.pb.cc	/^void CoinType::CopyFrom(const CoinType& from) {$/;"	f	class:CoinType
CopyFrom	protob/types.pb.cc	/^void HDNodeType::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:HDNodeType
CopyFrom	protob/types.pb.cc	/^void HDNodeType::CopyFrom(const HDNodeType& from) {$/;"	f	class:HDNodeType
CopyFrom	protob/types.pb.cc	/^void MultisigRedeemScriptType::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:MultisigRedeemScriptType
CopyFrom	protob/types.pb.cc	/^void MultisigRedeemScriptType::CopyFrom(const MultisigRedeemScriptType& from) {$/;"	f	class:MultisigRedeemScriptType
CopyFrom	protob/types.pb.cc	/^void TransactionType::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:TransactionType
CopyFrom	protob/types.pb.cc	/^void TransactionType::CopyFrom(const TransactionType& from) {$/;"	f	class:TransactionType
CopyFrom	protob/types.pb.cc	/^void TxInputType::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:TxInputType
CopyFrom	protob/types.pb.cc	/^void TxInputType::CopyFrom(const TxInputType& from) {$/;"	f	class:TxInputType
CopyFrom	protob/types.pb.cc	/^void TxOutputBinType::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:TxOutputBinType
CopyFrom	protob/types.pb.cc	/^void TxOutputBinType::CopyFrom(const TxOutputBinType& from) {$/;"	f	class:TxOutputBinType
CopyFrom	protob/types.pb.cc	/^void TxOutputType::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:TxOutputType
CopyFrom	protob/types.pb.cc	/^void TxOutputType::CopyFrom(const TxOutputType& from) {$/;"	f	class:TxOutputType
CopyFrom	protob/types.pb.cc	/^void TxRequestDetailsType::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:TxRequestDetailsType
CopyFrom	protob/types.pb.cc	/^void TxRequestDetailsType::CopyFrom(const TxRequestDetailsType& from) {$/;"	f	class:TxRequestDetailsType
CopyFrom	protob/types.pb.cc	/^void TxRequestSerializedType::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:TxRequestSerializedType
CopyFrom	protob/types.pb.cc	/^void TxRequestSerializedType::CopyFrom(const TxRequestSerializedType& from) {$/;"	f	class:TxRequestSerializedType
CrashHandler	easylogging++.h	/^    explicit CrashHandler(bool useDefault) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::debug::StackTrace::CrashHandler
CrashHandler	easylogging++.h	/^    explicit CrashHandler(const Handler& cHandler) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::debug::StackTrace::CrashHandler
CrashHandler	easylogging++.h	/^class CrashHandler : base::NoCopy {$/;"	c	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::debug::StackTrace
CreateLoggerAutomatically	easylogging++.h	/^    CreateLoggerAutomatically = 4096,$/;"	m	class:el::Level::ConfigurationType::LoggingFlag
CustomFormatSpecifier	easylogging++.h	/^    CustomFormatSpecifier(const char* formatSpecifier, const FormatSpecifierValueResolver& resolver) :$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::CustomFormatSpecifier
CustomFormatSpecifier	easylogging++.h	/^class CustomFormatSpecifier {$/;"	c	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File
DCCHECK	easylogging++.h	6258;"	d
DCCHECK	easylogging++.h	6280;"	d
DCCHECK_EQ	easylogging++.h	6259;"	d
DCCHECK_EQ	easylogging++.h	6281;"	d
DCCHECK_GE	easylogging++.h	6264;"	d
DCCHECK_GE	easylogging++.h	6286;"	d
DCCHECK_GT	easylogging++.h	6262;"	d
DCCHECK_GT	easylogging++.h	6284;"	d
DCCHECK_LE	easylogging++.h	6263;"	d
DCCHECK_LE	easylogging++.h	6285;"	d
DCCHECK_LT	easylogging++.h	6261;"	d
DCCHECK_LT	easylogging++.h	6283;"	d
DCCHECK_NE	easylogging++.h	6260;"	d
DCCHECK_NE	easylogging++.h	6282;"	d
DCCHECK_NOTNULL	easylogging++.h	6265;"	d
DCCHECK_NOTNULL	easylogging++.h	6287;"	d
DCCHECK_STRCASEEQ	easylogging++.h	6266;"	d
DCCHECK_STRCASEEQ	easylogging++.h	6290;"	d
DCCHECK_STRCASENE	easylogging++.h	6267;"	d
DCCHECK_STRCASENE	easylogging++.h	6291;"	d
DCCHECK_STREQ	easylogging++.h	6288;"	d
DCCHECK_STRNE	easylogging++.h	6289;"	d
DCHECK	easylogging++.h	6269;"	d
DCHECK	easylogging++.h	6293;"	d
DCHECK_EQ	easylogging++.h	6270;"	d
DCHECK_EQ	easylogging++.h	6294;"	d
DCHECK_GE	easylogging++.h	6275;"	d
DCHECK_GE	easylogging++.h	6299;"	d
DCHECK_GT	easylogging++.h	6273;"	d
DCHECK_GT	easylogging++.h	6297;"	d
DCHECK_LE	easylogging++.h	6274;"	d
DCHECK_LE	easylogging++.h	6298;"	d
DCHECK_LT	easylogging++.h	6272;"	d
DCHECK_LT	easylogging++.h	6296;"	d
DCHECK_NE	easylogging++.h	6271;"	d
DCHECK_NE	easylogging++.h	6295;"	d
DCHECK_NOTNULL	easylogging++.h	6276;"	d
DCHECK_NOTNULL	easylogging++.h	6300;"	d
DCHECK_STRCASEEQ	easylogging++.h	6277;"	d
DCHECK_STRCASEEQ	easylogging++.h	6303;"	d
DCHECK_STRCASENE	easylogging++.h	6278;"	d
DCHECK_STRCASENE	easylogging++.h	6304;"	d
DCHECK_STREQ	easylogging++.h	6301;"	d
DCHECK_STRNE	easylogging++.h	6302;"	d
DCLOG	easylogging++.h	6143;"	d
DCLOG	easylogging++.h	6154;"	d
DCLOG_AFTER_N	easylogging++.h	6149;"	d
DCLOG_AFTER_N	easylogging++.h	6163;"	d
DCLOG_EVERY_N	easylogging++.h	6147;"	d
DCLOG_EVERY_N	easylogging++.h	6161;"	d
DCLOG_IF	easylogging++.h	6145;"	d
DCLOG_IF	easylogging++.h	6158;"	d
DCLOG_N_TIMES	easylogging++.h	6151;"	d
DCLOG_N_TIMES	easylogging++.h	6165;"	d
DCLOG_VERBOSE	easylogging++.h	6155;"	d
DCPCHECK	easylogging++.h	6268;"	d
DCPCHECK	easylogging++.h	6292;"	d
DCPLOG	easylogging++.h	6053;"	d
DCPLOG	easylogging++.h	6061;"	d
DCPLOG_IF	easylogging++.h	6054;"	d
DCPLOG_IF	easylogging++.h	6063;"	d
DCSYSLOG	easylogging++.h	6080;"	d
DCSYSLOG	easylogging++.h	6103;"	d
DCSYSLOG_AFTER_N	easylogging++.h	6083;"	d
DCSYSLOG_AFTER_N	easylogging++.h	6108;"	d
DCSYSLOG_EVERY_N	easylogging++.h	6082;"	d
DCSYSLOG_EVERY_N	easylogging++.h	6106;"	d
DCSYSLOG_IF	easylogging++.h	6081;"	d
DCSYSLOG_IF	easylogging++.h	6104;"	d
DCSYSLOG_N_TIMES	easylogging++.h	6084;"	d
DCSYSLOG_N_TIMES	easylogging++.h	6110;"	d
DCVLOG	easylogging++.h	6144;"	d
DCVLOG	easylogging++.h	6156;"	d
DCVLOG_AFTER_N	easylogging++.h	6150;"	d
DCVLOG_AFTER_N	easylogging++.h	6164;"	d
DCVLOG_EVERY_N	easylogging++.h	6148;"	d
DCVLOG_EVERY_N	easylogging++.h	6162;"	d
DCVLOG_IF	easylogging++.h	6146;"	d
DCVLOG_IF	easylogging++.h	6159;"	d
DCVLOG_N_TIMES	easylogging++.h	6152;"	d
DCVLOG_N_TIMES	easylogging++.h	6166;"	d
DEBUG	easylogging++.h	5725;"	d
DLOG	easylogging++.h	6171;"	d
DLOG	easylogging++.h	6182;"	d
DLOG_AFTER_N	easylogging++.h	6177;"	d
DLOG_AFTER_N	easylogging++.h	6190;"	d
DLOG_EVERY_N	easylogging++.h	6175;"	d
DLOG_EVERY_N	easylogging++.h	6188;"	d
DLOG_IF	easylogging++.h	6173;"	d
DLOG_IF	easylogging++.h	6185;"	d
DLOG_N_TIMES	easylogging++.h	6179;"	d
DLOG_N_TIMES	easylogging++.h	6192;"	d
DO_	protob/config.pb.cc	223;"	d	file:
DO_	protob/config.pb.cc	305;"	d	file:
DO_	protob/config.pb.cc	575;"	d	file:
DO_	protob/config.pb.cc	675;"	d	file:
DO_	protob/messages.pb.cc	10046;"	d	file:
DO_	protob/messages.pb.cc	10277;"	d	file:
DO_	protob/messages.pb.cc	10359;"	d	file:
DO_	protob/messages.pb.cc	10614;"	d	file:
DO_	protob/messages.pb.cc	10667;"	d	file:
DO_	protob/messages.pb.cc	10898;"	d	file:
DO_	protob/messages.pb.cc	11016;"	d	file:
DO_	protob/messages.pb.cc	11320;"	d	file:
DO_	protob/messages.pb.cc	11385;"	d	file:
DO_	protob/messages.pb.cc	11613;"	d	file:
DO_	protob/messages.pb.cc	11645;"	d	file:
DO_	protob/messages.pb.cc	11835;"	d	file:
DO_	protob/messages.pb.cc	11900;"	d	file:
DO_	protob/messages.pb.cc	12142;"	d	file:
DO_	protob/messages.pb.cc	12221;"	d	file:
DO_	protob/messages.pb.cc	12498;"	d	file:
DO_	protob/messages.pb.cc	12563;"	d	file:
DO_	protob/messages.pb.cc	12792;"	d	file:
DO_	protob/messages.pb.cc	12822;"	d	file:
DO_	protob/messages.pb.cc	12999;"	d	file:
DO_	protob/messages.pb.cc	13010;"	d	file:
DO_	protob/messages.pb.cc	13167;"	d	file:
DO_	protob/messages.pb.cc	13197;"	d	file:
DO_	protob/messages.pb.cc	13377;"	d	file:
DO_	protob/messages.pb.cc	13409;"	d	file:
DO_	protob/messages.pb.cc	13586;"	d	file:
DO_	protob/messages.pb.cc	13618;"	d	file:
DO_	protob/messages.pb.cc	13788;"	d	file:
DO_	protob/messages.pb.cc	13799;"	d	file:
DO_	protob/messages.pb.cc	14031;"	d	file:
DO_	protob/messages.pb.cc	14206;"	d	file:
DO_	protob/messages.pb.cc	14625;"	d	file:
DO_	protob/messages.pb.cc	14636;"	d	file:
DO_	protob/messages.pb.cc	14806;"	d	file:
DO_	protob/messages.pb.cc	14872;"	d	file:
DO_	protob/messages.pb.cc	1584;"	d	file:
DO_	protob/messages.pb.cc	1595;"	d	file:
DO_	protob/messages.pb.cc	1840;"	d	file:
DO_	protob/messages.pb.cc	2112;"	d	file:
DO_	protob/messages.pb.cc	2645;"	d	file:
DO_	protob/messages.pb.cc	2656;"	d	file:
DO_	protob/messages.pb.cc	2823;"	d	file:
DO_	protob/messages.pb.cc	2873;"	d	file:
DO_	protob/messages.pb.cc	3088;"	d	file:
DO_	protob/messages.pb.cc	3120;"	d	file:
DO_	protob/messages.pb.cc	3310;"	d	file:
DO_	protob/messages.pb.cc	3391;"	d	file:
DO_	protob/messages.pb.cc	3650;"	d	file:
DO_	protob/messages.pb.cc	3697;"	d	file:
DO_	protob/messages.pb.cc	3916;"	d	file:
DO_	protob/messages.pb.cc	3970;"	d	file:
DO_	protob/messages.pb.cc	4187;"	d	file:
DO_	protob/messages.pb.cc	4241;"	d	file:
DO_	protob/messages.pb.cc	4443;"	d	file:
DO_	protob/messages.pb.cc	4454;"	d	file:
DO_	protob/messages.pb.cc	4604;"	d	file:
DO_	protob/messages.pb.cc	4641;"	d	file:
DO_	protob/messages.pb.cc	4825;"	d	file:
DO_	protob/messages.pb.cc	4858;"	d	file:
DO_	protob/messages.pb.cc	5039;"	d	file:
DO_	protob/messages.pb.cc	5050;"	d	file:
DO_	protob/messages.pb.cc	5195;"	d	file:
DO_	protob/messages.pb.cc	5206;"	d	file:
DO_	protob/messages.pb.cc	5363;"	d	file:
DO_	protob/messages.pb.cc	5396;"	d	file:
DO_	protob/messages.pb.cc	5582;"	d	file:
DO_	protob/messages.pb.cc	5614;"	d	file:
DO_	protob/messages.pb.cc	5798;"	d	file:
DO_	protob/messages.pb.cc	5828;"	d	file:
DO_	protob/messages.pb.cc	6005;"	d	file:
DO_	protob/messages.pb.cc	6044;"	d	file:
DO_	protob/messages.pb.cc	6233;"	d	file:
DO_	protob/messages.pb.cc	6280;"	d	file:
DO_	protob/messages.pb.cc	6506;"	d	file:
DO_	protob/messages.pb.cc	6578;"	d	file:
DO_	protob/messages.pb.cc	6813;"	d	file:
DO_	protob/messages.pb.cc	6846;"	d	file:
DO_	protob/messages.pb.cc	7027;"	d	file:
DO_	protob/messages.pb.cc	7038;"	d	file:
DO_	protob/messages.pb.cc	7239;"	d	file:
DO_	protob/messages.pb.cc	7369;"	d	file:
DO_	protob/messages.pb.cc	7739;"	d	file:
DO_	protob/messages.pb.cc	7853;"	d	file:
DO_	protob/messages.pb.cc	8141;"	d	file:
DO_	protob/messages.pb.cc	8152;"	d	file:
DO_	protob/messages.pb.cc	8309;"	d	file:
DO_	protob/messages.pb.cc	8339;"	d	file:
DO_	protob/messages.pb.cc	8548;"	d	file:
DO_	protob/messages.pb.cc	8662;"	d	file:
DO_	protob/messages.pb.cc	8950;"	d	file:
DO_	protob/messages.pb.cc	8961;"	d	file:
DO_	protob/messages.pb.cc	9118;"	d	file:
DO_	protob/messages.pb.cc	9151;"	d	file:
DO_	protob/messages.pb.cc	9357;"	d	file:
DO_	protob/messages.pb.cc	9427;"	d	file:
DO_	protob/messages.pb.cc	9688;"	d	file:
DO_	protob/messages.pb.cc	9749;"	d	file:
DO_	protob/messages.pb.cc	9999;"	d	file:
DO_	protob/storage.pb.cc	233;"	d	file:
DO_	protob/storage.pb.cc	395;"	d	file:
DO_	protob/types.pb.cc	1024;"	d	file:
DO_	protob/types.pb.cc	1106;"	d	file:
DO_	protob/types.pb.cc	1362;"	d	file:
DO_	protob/types.pb.cc	1409;"	d	file:
DO_	protob/types.pb.cc	1637;"	d	file:
DO_	protob/types.pb.cc	1771;"	d	file:
DO_	protob/types.pb.cc	2102;"	d	file:
DO_	protob/types.pb.cc	2194;"	d	file:
DO_	protob/types.pb.cc	2457;"	d	file:
DO_	protob/types.pb.cc	2503;"	d	file:
DO_	protob/types.pb.cc	2719;"	d	file:
DO_	protob/types.pb.cc	2844;"	d	file:
DO_	protob/types.pb.cc	3171;"	d	file:
DO_	protob/types.pb.cc	3217;"	d	file:
DO_	protob/types.pb.cc	3437;"	d	file:
DO_	protob/types.pb.cc	3497;"	d	file:
DO_	protob/types.pb.cc	604;"	d	file:
DO_	protob/types.pb.cc	710;"	d	file:
DPCHECK	easylogging++.h	6279;"	d
DPCHECK	easylogging++.h	6305;"	d
DPLOG	easylogging++.h	6055;"	d
DPLOG	easylogging++.h	6067;"	d
DPLOG_IF	easylogging++.h	6056;"	d
DPLOG_IF	easylogging++.h	6068;"	d
DSYSLOG	easylogging++.h	6085;"	d
DSYSLOG	easylogging++.h	6112;"	d
DSYSLOG_AFTER_N	easylogging++.h	6088;"	d
DSYSLOG_AFTER_N	easylogging++.h	6115;"	d
DSYSLOG_EVERY_N	easylogging++.h	6087;"	d
DSYSLOG_EVERY_N	easylogging++.h	6114;"	d
DSYSLOG_IF	easylogging++.h	6086;"	d
DSYSLOG_IF	easylogging++.h	6113;"	d
DSYSLOG_N_TIMES	easylogging++.h	6089;"	d
DSYSLOG_N_TIMES	easylogging++.h	6116;"	d
DVLOG	easylogging++.h	6172;"	d
DVLOG	easylogging++.h	6183;"	d
DVLOG_AFTER_N	easylogging++.h	6178;"	d
DVLOG_AFTER_N	easylogging++.h	6191;"	d
DVLOG_EVERY_N	easylogging++.h	6176;"	d
DVLOG_EVERY_N	easylogging++.h	6189;"	d
DVLOG_IF	easylogging++.h	6174;"	d
DVLOG_IF	easylogging++.h	6186;"	d
DVLOG_N_TIMES	easylogging++.h	6180;"	d
DVLOG_N_TIMES	easylogging++.h	6193;"	d
DataType	easylogging++.h	/^    enum class DataType : base::type::EnumType {$/;"	c	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData
DateTime	easylogging++.h	/^    DateTime = 1<<1, LoggerId = 1<<2, File = 1<<3, Line = 1<<4, Location = 1<<5, Function = 1<<6,$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::FormatFlags
DateTime	easylogging++.h	/^class DateTime : base::StaticClass {$/;"	c	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS
Day	easylogging++.h	/^    Microsecond = 0, Millisecond = 1, Second = 2, Minute = 3, Hour = 4, Day = 5$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit
Debug	easylogging++.h	/^        Debug = 4,$/;"	m	class:el::Level
DebugLinkDecision	protob/messages.pb.cc	/^DebugLinkDecision::DebugLinkDecision()$/;"	f	class:DebugLinkDecision
DebugLinkDecision	protob/messages.pb.cc	/^DebugLinkDecision::DebugLinkDecision(const DebugLinkDecision& from)$/;"	f	class:DebugLinkDecision
DebugLinkDecision	protob/messages.pb.h	/^class DebugLinkDecision : public ::google::protobuf::Message {$/;"	c
DebugLinkDecision_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* DebugLinkDecision_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
DebugLinkDecision_reflection_	protob/messages.pb.cc	/^  DebugLinkDecision_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
DebugLinkGetState	protob/messages.pb.cc	/^DebugLinkGetState::DebugLinkGetState()$/;"	f	class:DebugLinkGetState
DebugLinkGetState	protob/messages.pb.cc	/^DebugLinkGetState::DebugLinkGetState(const DebugLinkGetState& from)$/;"	f	class:DebugLinkGetState
DebugLinkGetState	protob/messages.pb.h	/^class DebugLinkGetState : public ::google::protobuf::Message {$/;"	c
DebugLinkGetState_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* DebugLinkGetState_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
DebugLinkGetState_reflection_	protob/messages.pb.cc	/^  DebugLinkGetState_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
DebugLinkLog	protob/messages.pb.cc	/^DebugLinkLog::DebugLinkLog()$/;"	f	class:DebugLinkLog
DebugLinkLog	protob/messages.pb.cc	/^DebugLinkLog::DebugLinkLog(const DebugLinkLog& from)$/;"	f	class:DebugLinkLog
DebugLinkLog	protob/messages.pb.h	/^class DebugLinkLog : public ::google::protobuf::Message {$/;"	c
DebugLinkLog_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* DebugLinkLog_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
DebugLinkLog_reflection_	protob/messages.pb.cc	/^  DebugLinkLog_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
DebugLinkState	protob/messages.pb.cc	/^DebugLinkState::DebugLinkState()$/;"	f	class:DebugLinkState
DebugLinkState	protob/messages.pb.cc	/^DebugLinkState::DebugLinkState(const DebugLinkState& from)$/;"	f	class:DebugLinkState
DebugLinkState	protob/messages.pb.h	/^class DebugLinkState : public ::google::protobuf::Message {$/;"	c
DebugLinkState_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* DebugLinkState_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
DebugLinkState_reflection_	protob/messages.pb.cc	/^  DebugLinkState_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
DebugLinkStop	protob/messages.pb.cc	/^DebugLinkStop::DebugLinkStop()$/;"	f	class:DebugLinkStop
DebugLinkStop	protob/messages.pb.cc	/^DebugLinkStop::DebugLinkStop(const DebugLinkStop& from)$/;"	f	class:DebugLinkStop
DebugLinkStop	protob/messages.pb.h	/^class DebugLinkStop : public ::google::protobuf::Message {$/;"	c
DebugLinkStop_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* DebugLinkStop_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
DebugLinkStop_reflection_	protob/messages.pb.cc	/^  DebugLinkStop_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
DecryptMessage	protob/messages.pb.cc	/^DecryptMessage::DecryptMessage()$/;"	f	class:DecryptMessage
DecryptMessage	protob/messages.pb.cc	/^DecryptMessage::DecryptMessage(const DecryptMessage& from)$/;"	f	class:DecryptMessage
DecryptMessage	protob/messages.pb.h	/^class DecryptMessage : public ::google::protobuf::Message {$/;"	c
DecryptMessage_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* DecryptMessage_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
DecryptMessage_reflection_	protob/messages.pb.cc	/^  DecryptMessage_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
DefaultLogBuilder	easylogging++.h	/^class DefaultLogBuilder : public LogBuilder {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base
DefaultLogDispatchCallback	easylogging++.h	/^class DefaultLogDispatchCallback : public LogDispatchCallback {$/;"	c	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
DefaultPerformanceTrackingCallback	easylogging++.h	/^class DefaultPerformanceTrackingCallback : public PerformanceTrackingCallback {$/;"	c	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::PerformanceTracker
DeviceDescriptor	protob/config.pb.cc	/^DeviceDescriptor::DeviceDescriptor()$/;"	f	class:DeviceDescriptor
DeviceDescriptor	protob/config.pb.cc	/^DeviceDescriptor::DeviceDescriptor(const DeviceDescriptor& from)$/;"	f	class:DeviceDescriptor
DeviceDescriptor	protob/config.pb.h	/^class DeviceDescriptor : public ::google::protobuf::Message {$/;"	c
DeviceDescriptor_descriptor_	protob/config.pb.cc	/^const ::google::protobuf::Descriptor* DeviceDescriptor_descriptor_ = NULL;$/;"	m	namespace:__anon7	file:
DeviceDescriptor_reflection_	protob/config.pb.cc	/^  DeviceDescriptor_reflection_ = NULL;$/;"	m	namespace:__anon7	file:
DisableApplicationAbortOnFatalLog	easylogging++.h	/^    DisableApplicationAbortOnFatalLog = 8,$/;"	m	class:el::Level::ConfigurationType::LoggingFlag
DisablePerformanceTrackingCheckpointComparison	easylogging++.h	/^    DisablePerformanceTrackingCheckpointComparison = 256,$/;"	m	class:el::Level::ConfigurationType::LoggingFlag
DisableVModules	easylogging++.h	/^    DisableVModules = 512,$/;"	m	class:el::Level::ConfigurationType::LoggingFlag
DisableVModulesExtensions	easylogging++.h	/^    DisableVModulesExtensions = 1024,$/;"	m	class:el::Level::ConfigurationType::LoggingFlag
DispatchAction	easylogging++.h	/^enum class DispatchAction : base::type::EnumType {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base
EASYLOGGINGPP_H	easylogging++.h	15;"	d
ELPP	easylogging++.h	4026;"	d
ELPP_ASSERT	easylogging++.h	107;"	d
ELPP_ASSERT	easylogging++.h	114;"	d
ELPP_ASSERT	easylogging++.h	122;"	d
ELPP_COUNTER	easylogging++.h	5716;"	d
ELPP_COUNTER	easylogging++.h	5719;"	d
ELPP_COUNTER_POS	easylogging++.h	5717;"	d
ELPP_COUNTER_POS	easylogging++.h	5721;"	d
ELPP_COUT	easylogging++.h	411;"	d
ELPP_COUT	easylogging++.h	416;"	d
ELPP_COUT_LINE	easylogging++.h	440;"	d
ELPP_COUT_LINE	easylogging++.h	442;"	d
ELPP_FINAL	easylogging++.h	205;"	d
ELPP_FINAL	easylogging++.h	207;"	d
ELPP_FINAL	easylogging++.h	209;"	d
ELPP_INTERNAL_ERROR	easylogging++.h	134;"	d
ELPP_INTERNAL_ERROR	easylogging++.h	143;"	d
ELPP_INTERNAL_INFO	easylogging++.h	142;"	d
ELPP_INTERNAL_INFO	easylogging++.h	150;"	d
ELPP_INTERNAL_INFO	easylogging++.h	156;"	d
ELPP_INTERNAL_INFO	easylogging++.h	157;"	d
ELPP_ITERATOR_CONTAINER_LOG_FIVE_ARG	easylogging++.h	4367;"	d
ELPP_ITERATOR_CONTAINER_LOG_FIVE_ARG	easylogging++.h	4593;"	d
ELPP_ITERATOR_CONTAINER_LOG_FOUR_ARG	easylogging++.h	4362;"	d
ELPP_ITERATOR_CONTAINER_LOG_FOUR_ARG	easylogging++.h	4592;"	d
ELPP_ITERATOR_CONTAINER_LOG_ONE_ARG	easylogging++.h	4347;"	d
ELPP_ITERATOR_CONTAINER_LOG_ONE_ARG	easylogging++.h	4589;"	d
ELPP_ITERATOR_CONTAINER_LOG_THREE_ARG	easylogging++.h	4357;"	d
ELPP_ITERATOR_CONTAINER_LOG_THREE_ARG	easylogging++.h	4591;"	d
ELPP_ITERATOR_CONTAINER_LOG_TWO_ARG	easylogging++.h	4352;"	d
ELPP_ITERATOR_CONTAINER_LOG_TWO_ARG	easylogging++.h	4590;"	d
ELPP_LITERAL	easylogging++.h	409;"	d
ELPP_LITERAL	easylogging++.h	413;"	d
ELPP_SIMPLE_LOG	easylogging++.h	4298;"	d
ELPP_SIMPLE_LOG	easylogging++.h	4588;"	d
ELPP_STRLEN	easylogging++.h	410;"	d
ELPP_STRLEN	easylogging++.h	414;"	d
ELPP_VARIADIC_FUNC_MSVC	easylogging++.h	4929;"	d
ELPP_VARIADIC_FUNC_MSVC_RUN	easylogging++.h	4930;"	d
ELPP_WX_ENABLED	easylogging++.h	4577;"	d
ELPP_WX_HASH_MAP_ENABLED	easylogging++.h	4578;"	d
ELPP_WX_PTR_ENABLED	easylogging++.h	4576;"	d
ERROR	easylogging++.h	5726;"	d
Enabled	easylogging++.h	/^    Enabled = 1,$/;"	m	class:el::Level::ConfigurationType
EncryptMessage	protob/messages.pb.cc	/^EncryptMessage::EncryptMessage()$/;"	f	class:EncryptMessage
EncryptMessage	protob/messages.pb.cc	/^EncryptMessage::EncryptMessage(const EncryptMessage& from)$/;"	f	class:EncryptMessage
EncryptMessage	protob/messages.pb.h	/^class EncryptMessage : public ::google::protobuf::Message {$/;"	c
EncryptMessage_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* EncryptMessage_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
EncryptMessage_reflection_	protob/messages.pb.cc	/^  EncryptMessage_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
Entropy	protob/messages.pb.cc	/^Entropy::Entropy()$/;"	f	class:Entropy
Entropy	protob/messages.pb.cc	/^Entropy::Entropy(const Entropy& from)$/;"	f	class:Entropy
Entropy	protob/messages.pb.h	/^class Entropy : public ::google::protobuf::Message {$/;"	c
EntropyAck	protob/messages.pb.cc	/^EntropyAck::EntropyAck()$/;"	f	class:EntropyAck
EntropyAck	protob/messages.pb.cc	/^EntropyAck::EntropyAck(const EntropyAck& from)$/;"	f	class:EntropyAck
EntropyAck	protob/messages.pb.h	/^class EntropyAck : public ::google::protobuf::Message {$/;"	c
EntropyAck_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* EntropyAck_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
EntropyAck_reflection_	protob/messages.pb.cc	/^  EntropyAck_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
EntropyRequest	protob/messages.pb.cc	/^EntropyRequest::EntropyRequest()$/;"	f	class:EntropyRequest
EntropyRequest	protob/messages.pb.cc	/^EntropyRequest::EntropyRequest(const EntropyRequest& from)$/;"	f	class:EntropyRequest
EntropyRequest	protob/messages.pb.h	/^class EntropyRequest : public ::google::protobuf::Message {$/;"	c
EntropyRequest_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* EntropyRequest_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
EntropyRequest_reflection_	protob/messages.pb.cc	/^  EntropyRequest_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
Entropy_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* Entropy_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
Entropy_reflection_	protob/messages.pb.cc	/^  Entropy_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
EnumType	easylogging++.h	/^typedef unsigned short EnumType;  \/\/ NOLINT$/;"	t	namespace:el::base::type
Error	easylogging++.h	/^        Error = 16,$/;"	m	class:el::Level
EstimateTxSize	protob/messages.pb.cc	/^EstimateTxSize::EstimateTxSize()$/;"	f	class:EstimateTxSize
EstimateTxSize	protob/messages.pb.cc	/^EstimateTxSize::EstimateTxSize(const EstimateTxSize& from)$/;"	f	class:EstimateTxSize
EstimateTxSize	protob/messages.pb.h	/^class EstimateTxSize : public ::google::protobuf::Message {$/;"	c
EstimateTxSize_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* EstimateTxSize_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
EstimateTxSize_reflection_	protob/messages.pb.cc	/^  EstimateTxSize_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
FATAL	easylogging++.h	5727;"	d
Failure	protob/messages.pb.cc	/^Failure::Failure()$/;"	f	class:Failure
Failure	protob/messages.pb.cc	/^Failure::Failure(const Failure& from)$/;"	f	class:Failure
Failure	protob/messages.pb.h	/^class Failure : public ::google::protobuf::Message {$/;"	c
FailureType	protob/types.pb.h	/^enum FailureType {$/;"	g
FailureType_ARRAYSIZE	protob/types.pb.h	/^const int FailureType_ARRAYSIZE = FailureType_MAX + 1;$/;"	v
FailureType_IsValid	protob/types.pb.cc	/^bool FailureType_IsValid(int value) {$/;"	f
FailureType_MAX	protob/types.pb.h	/^const FailureType FailureType_MAX = Failure_FirmwareError;$/;"	v
FailureType_MIN	protob/types.pb.h	/^const FailureType FailureType_MIN = Failure_UnexpectedMessage;$/;"	v
FailureType_Name	protob/types.pb.h	/^inline const ::std::string& FailureType_Name(FailureType value) {$/;"	f
FailureType_Parse	protob/types.pb.h	/^inline bool FailureType_Parse($/;"	f
FailureType_descriptor	protob/types.pb.cc	/^const ::google::protobuf::EnumDescriptor* FailureType_descriptor() {$/;"	f
FailureType_descriptor_	protob/types.pb.cc	/^const ::google::protobuf::EnumDescriptor* FailureType_descriptor_ = NULL;$/;"	m	namespace:__anon3	file:
Failure_ActionCancelled	protob/types.pb.h	/^  Failure_ActionCancelled = 4,$/;"	e	enum:FailureType
Failure_ButtonExpected	protob/types.pb.h	/^  Failure_ButtonExpected = 2,$/;"	e	enum:FailureType
Failure_FirmwareError	protob/types.pb.h	/^  Failure_FirmwareError = 99$/;"	e	enum:FailureType
Failure_InvalidSignature	protob/types.pb.h	/^  Failure_InvalidSignature = 8,$/;"	e	enum:FailureType
Failure_NotEnoughFunds	protob/types.pb.h	/^  Failure_NotEnoughFunds = 10,$/;"	e	enum:FailureType
Failure_NotInitialized	protob/types.pb.h	/^  Failure_NotInitialized = 11,$/;"	e	enum:FailureType
Failure_Other	protob/types.pb.h	/^  Failure_Other = 9,$/;"	e	enum:FailureType
Failure_PinCancelled	protob/types.pb.h	/^  Failure_PinCancelled = 6,$/;"	e	enum:FailureType
Failure_PinExpected	protob/types.pb.h	/^  Failure_PinExpected = 5,$/;"	e	enum:FailureType
Failure_PinInvalid	protob/types.pb.h	/^  Failure_PinInvalid = 7,$/;"	e	enum:FailureType
Failure_SyntaxError	protob/types.pb.h	/^  Failure_SyntaxError = 3,$/;"	e	enum:FailureType
Failure_UnexpectedMessage	protob/types.pb.h	/^  Failure_UnexpectedMessage = 1,$/;"	e	enum:FailureType
Failure_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* Failure_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
Failure_reflection_	protob/messages.pb.cc	/^  Failure_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
Fatal	easylogging++.h	/^        Fatal = 8, $/;"	m	class:el::Level
Features	protob/messages.pb.cc	/^Features::Features()$/;"	f	class:Features
Features	protob/messages.pb.cc	/^Features::Features(const Features& from)$/;"	f	class:Features
Features	protob/messages.pb.h	/^class Features : public ::google::protobuf::Message {$/;"	c
Features_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* Features_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
Features_reflection_	protob/messages.pb.cc	/^  Features_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
File	easylogging++.h	/^    DateTime = 1<<1, LoggerId = 1<<2, File = 1<<3, Line = 1<<4, Location = 1<<5, Function = 1<<6,$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::FormatFlags
File	easylogging++.h	/^class File : base::StaticClass {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils
FileBase	easylogging++.h	/^    Level = 1<<13, FileBase = 1<<14, LevelShort = 1<<15,$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::FormatFlags
FileStreamPtr	easylogging++.h	/^typedef std::shared_ptr<base::type::fstream_t> FileStreamPtr;$/;"	t	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base
Filename	easylogging++.h	/^    Filename = 16,$/;"	m	class:el::Level::ConfigurationType
FirmwareErase	protob/messages.pb.cc	/^FirmwareErase::FirmwareErase()$/;"	f	class:FirmwareErase
FirmwareErase	protob/messages.pb.cc	/^FirmwareErase::FirmwareErase(const FirmwareErase& from)$/;"	f	class:FirmwareErase
FirmwareErase	protob/messages.pb.h	/^class FirmwareErase : public ::google::protobuf::Message {$/;"	c
FirmwareErase_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* FirmwareErase_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
FirmwareErase_reflection_	protob/messages.pb.cc	/^  FirmwareErase_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
FirmwareUpload	protob/messages.pb.cc	/^FirmwareUpload::FirmwareUpload()$/;"	f	class:FirmwareUpload
FirmwareUpload	protob/messages.pb.cc	/^FirmwareUpload::FirmwareUpload(const FirmwareUpload& from)$/;"	f	class:FirmwareUpload
FirmwareUpload	protob/messages.pb.h	/^class FirmwareUpload : public ::google::protobuf::Message {$/;"	c
FirmwareUpload_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* FirmwareUpload_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
FirmwareUpload_reflection_	protob/messages.pb.cc	/^  FirmwareUpload_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
Format	easylogging++.h	/^    Format = 8,$/;"	m	class:el::Level::ConfigurationType
FormatFlags	easylogging++.h	/^enum class FormatFlags : base::type::EnumType {$/;"	c	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit
FormatSpecifierValueResolver	easylogging++.h	/^typedef std::function<const std::string&(void)> FormatSpecifierValueResolver;$/;"	t	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File
Function	easylogging++.h	/^    DateTime = 1<<1, LoggerId = 1<<2, File = 1<<3, Line = 1<<4, Location = 1<<5, Function = 1<<6,$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::FormatFlags
GetAddress	protob/messages.pb.cc	/^GetAddress::GetAddress()$/;"	f	class:GetAddress
GetAddress	protob/messages.pb.cc	/^GetAddress::GetAddress(const GetAddress& from)$/;"	f	class:GetAddress
GetAddress	protob/messages.pb.h	/^class GetAddress : public ::google::protobuf::Message {$/;"	c
GetAddress_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* GetAddress_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
GetAddress_reflection_	protob/messages.pb.cc	/^  GetAddress_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
GetCachedSize	protob/config.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:Configuration
GetCachedSize	protob/config.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:DeviceDescriptor
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:Address
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:ApplySettings
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:ButtonAck
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:ButtonRequest
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:Cancel
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:ChangePin
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:CipherKeyValue
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:ClearSession
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:DebugLinkDecision
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:DebugLinkGetState
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:DebugLinkLog
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:DebugLinkState
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:DebugLinkStop
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:DecryptMessage
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:EncryptMessage
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:Entropy
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:EntropyAck
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:EntropyRequest
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:EstimateTxSize
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:Failure
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:Features
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:FirmwareErase
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:FirmwareUpload
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:GetAddress
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:GetEntropy
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:GetPublicKey
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:Initialize
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:LoadDevice
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:MessageSignature
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:PassphraseAck
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:PassphraseRequest
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:PinMatrixAck
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:PinMatrixRequest
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:Ping
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:PublicKey
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:RecoveryDevice
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:ResetDevice
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:SignMessage
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:SignTx
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:SimpleSignTx
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:Success
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:TestScreen
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:TxAck
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:TxRequest
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:TxSize
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:VerifyMessage
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:WipeDevice
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:WordAck
GetCachedSize	protob/messages.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:WordRequest
GetCachedSize	protob/storage.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:Storage
GetCachedSize	protob/types.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:CoinType
GetCachedSize	protob/types.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:HDNodeType
GetCachedSize	protob/types.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:MultisigRedeemScriptType
GetCachedSize	protob/types.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:TransactionType
GetCachedSize	protob/types.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:TxInputType
GetCachedSize	protob/types.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:TxOutputBinType
GetCachedSize	protob/types.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:TxOutputType
GetCachedSize	protob/types.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:TxRequestDetailsType
GetCachedSize	protob/types.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:TxRequestSerializedType
GetEntropy	protob/messages.pb.cc	/^GetEntropy::GetEntropy()$/;"	f	class:GetEntropy
GetEntropy	protob/messages.pb.cc	/^GetEntropy::GetEntropy(const GetEntropy& from)$/;"	f	class:GetEntropy
GetEntropy	protob/messages.pb.h	/^class GetEntropy : public ::google::protobuf::Message {$/;"	c
GetEntropy_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* GetEntropy_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
GetEntropy_reflection_	protob/messages.pb.cc	/^  GetEntropy_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
GetEnumDescriptor	protob/messages.pb.h	/^inline const EnumDescriptor* GetEnumDescriptor< ::MessageType>() {$/;"	f	namespace:google::protobuf
GetEnumDescriptor	protob/types.pb.h	/^inline const EnumDescriptor* GetEnumDescriptor< ::ButtonRequestType>() {$/;"	f	namespace:google::protobuf
GetEnumDescriptor	protob/types.pb.h	/^inline const EnumDescriptor* GetEnumDescriptor< ::FailureType>() {$/;"	f	namespace:google::protobuf
GetEnumDescriptor	protob/types.pb.h	/^inline const EnumDescriptor* GetEnumDescriptor< ::InputScriptType>() {$/;"	f	namespace:google::protobuf
GetEnumDescriptor	protob/types.pb.h	/^inline const EnumDescriptor* GetEnumDescriptor< ::OutputScriptType>() {$/;"	f	namespace:google::protobuf
GetEnumDescriptor	protob/types.pb.h	/^inline const EnumDescriptor* GetEnumDescriptor< ::PinMatrixRequestType>() {$/;"	f	namespace:google::protobuf
GetEnumDescriptor	protob/types.pb.h	/^inline const EnumDescriptor* GetEnumDescriptor< ::RequestType>() {$/;"	f	namespace:google::protobuf
GetMetadata	protob/config.pb.cc	/^::google::protobuf::Metadata Configuration::GetMetadata() const {$/;"	f	class:Configuration
GetMetadata	protob/config.pb.cc	/^::google::protobuf::Metadata DeviceDescriptor::GetMetadata() const {$/;"	f	class:DeviceDescriptor
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata Address::GetMetadata() const {$/;"	f	class:Address
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata ApplySettings::GetMetadata() const {$/;"	f	class:ApplySettings
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata ButtonAck::GetMetadata() const {$/;"	f	class:ButtonAck
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata ButtonRequest::GetMetadata() const {$/;"	f	class:ButtonRequest
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata Cancel::GetMetadata() const {$/;"	f	class:Cancel
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata ChangePin::GetMetadata() const {$/;"	f	class:ChangePin
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata CipherKeyValue::GetMetadata() const {$/;"	f	class:CipherKeyValue
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata ClearSession::GetMetadata() const {$/;"	f	class:ClearSession
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata DebugLinkDecision::GetMetadata() const {$/;"	f	class:DebugLinkDecision
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata DebugLinkGetState::GetMetadata() const {$/;"	f	class:DebugLinkGetState
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata DebugLinkLog::GetMetadata() const {$/;"	f	class:DebugLinkLog
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata DebugLinkState::GetMetadata() const {$/;"	f	class:DebugLinkState
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata DebugLinkStop::GetMetadata() const {$/;"	f	class:DebugLinkStop
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata DecryptMessage::GetMetadata() const {$/;"	f	class:DecryptMessage
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata EncryptMessage::GetMetadata() const {$/;"	f	class:EncryptMessage
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata Entropy::GetMetadata() const {$/;"	f	class:Entropy
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata EntropyAck::GetMetadata() const {$/;"	f	class:EntropyAck
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata EntropyRequest::GetMetadata() const {$/;"	f	class:EntropyRequest
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata EstimateTxSize::GetMetadata() const {$/;"	f	class:EstimateTxSize
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata Failure::GetMetadata() const {$/;"	f	class:Failure
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata Features::GetMetadata() const {$/;"	f	class:Features
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata FirmwareErase::GetMetadata() const {$/;"	f	class:FirmwareErase
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata FirmwareUpload::GetMetadata() const {$/;"	f	class:FirmwareUpload
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata GetAddress::GetMetadata() const {$/;"	f	class:GetAddress
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata GetEntropy::GetMetadata() const {$/;"	f	class:GetEntropy
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata GetPublicKey::GetMetadata() const {$/;"	f	class:GetPublicKey
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata Initialize::GetMetadata() const {$/;"	f	class:Initialize
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata LoadDevice::GetMetadata() const {$/;"	f	class:LoadDevice
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata MessageSignature::GetMetadata() const {$/;"	f	class:MessageSignature
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata PassphraseAck::GetMetadata() const {$/;"	f	class:PassphraseAck
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata PassphraseRequest::GetMetadata() const {$/;"	f	class:PassphraseRequest
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata PinMatrixAck::GetMetadata() const {$/;"	f	class:PinMatrixAck
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata PinMatrixRequest::GetMetadata() const {$/;"	f	class:PinMatrixRequest
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata Ping::GetMetadata() const {$/;"	f	class:Ping
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata PublicKey::GetMetadata() const {$/;"	f	class:PublicKey
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata RecoveryDevice::GetMetadata() const {$/;"	f	class:RecoveryDevice
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata ResetDevice::GetMetadata() const {$/;"	f	class:ResetDevice
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata SignMessage::GetMetadata() const {$/;"	f	class:SignMessage
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata SignTx::GetMetadata() const {$/;"	f	class:SignTx
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata SimpleSignTx::GetMetadata() const {$/;"	f	class:SimpleSignTx
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata Success::GetMetadata() const {$/;"	f	class:Success
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata TestScreen::GetMetadata() const {$/;"	f	class:TestScreen
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata TxAck::GetMetadata() const {$/;"	f	class:TxAck
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata TxRequest::GetMetadata() const {$/;"	f	class:TxRequest
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata TxSize::GetMetadata() const {$/;"	f	class:TxSize
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata VerifyMessage::GetMetadata() const {$/;"	f	class:VerifyMessage
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata WipeDevice::GetMetadata() const {$/;"	f	class:WipeDevice
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata WordAck::GetMetadata() const {$/;"	f	class:WordAck
GetMetadata	protob/messages.pb.cc	/^::google::protobuf::Metadata WordRequest::GetMetadata() const {$/;"	f	class:WordRequest
GetMetadata	protob/storage.pb.cc	/^::google::protobuf::Metadata Storage::GetMetadata() const {$/;"	f	class:Storage
GetMetadata	protob/types.pb.cc	/^::google::protobuf::Metadata CoinType::GetMetadata() const {$/;"	f	class:CoinType
GetMetadata	protob/types.pb.cc	/^::google::protobuf::Metadata HDNodeType::GetMetadata() const {$/;"	f	class:HDNodeType
GetMetadata	protob/types.pb.cc	/^::google::protobuf::Metadata MultisigRedeemScriptType::GetMetadata() const {$/;"	f	class:MultisigRedeemScriptType
GetMetadata	protob/types.pb.cc	/^::google::protobuf::Metadata TransactionType::GetMetadata() const {$/;"	f	class:TransactionType
GetMetadata	protob/types.pb.cc	/^::google::protobuf::Metadata TxInputType::GetMetadata() const {$/;"	f	class:TxInputType
GetMetadata	protob/types.pb.cc	/^::google::protobuf::Metadata TxOutputBinType::GetMetadata() const {$/;"	f	class:TxOutputBinType
GetMetadata	protob/types.pb.cc	/^::google::protobuf::Metadata TxOutputType::GetMetadata() const {$/;"	f	class:TxOutputType
GetMetadata	protob/types.pb.cc	/^::google::protobuf::Metadata TxRequestDetailsType::GetMetadata() const {$/;"	f	class:TxRequestDetailsType
GetMetadata	protob/types.pb.cc	/^::google::protobuf::Metadata TxRequestSerializedType::GetMetadata() const {$/;"	f	class:TxRequestSerializedType
GetPublicKey	protob/messages.pb.cc	/^GetPublicKey::GetPublicKey()$/;"	f	class:GetPublicKey
GetPublicKey	protob/messages.pb.cc	/^GetPublicKey::GetPublicKey(const GetPublicKey& from)$/;"	f	class:GetPublicKey
GetPublicKey	protob/messages.pb.h	/^class GetPublicKey : public ::google::protobuf::Message {$/;"	c
GetPublicKey_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* GetPublicKey_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
GetPublicKey_reflection_	protob/messages.pb.cc	/^  GetPublicKey_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
Global	easylogging++.h	/^        Global = 1,$/;"	m	class:el::Level
HDNodeType	protob/types.pb.cc	/^HDNodeType::HDNodeType()$/;"	f	class:HDNodeType
HDNodeType	protob/types.pb.cc	/^HDNodeType::HDNodeType(const HDNodeType& from)$/;"	f	class:HDNodeType
HDNodeType	protob/types.pb.h	/^class HDNodeType : public ::google::protobuf::Message {$/;"	c
HDNodeType_descriptor_	protob/types.pb.cc	/^const ::google::protobuf::Descriptor* HDNodeType_descriptor_ = NULL;$/;"	m	namespace:__anon3	file:
HDNodeType_reflection_	protob/types.pb.cc	/^  HDNodeType_reflection_ = NULL;$/;"	m	namespace:__anon3	file:
Handler	easylogging++.h	/^    typedef void (*Handler)(int);$/;"	t	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::debug::StackTrace::CrashHandler
Helpers	easylogging++.h	/^class Helpers : base::StaticClass {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base
HierarchicalLogging	easylogging++.h	/^    HierarchicalLogging = 2048,$/;"	m	class:el::Level::ConfigurationType::LoggingFlag
HitCounter	easylogging++.h	/^    HitCounter(const HitCounter& hitCounter) :$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::HitCounter
HitCounter	easylogging++.h	/^    HitCounter(const char* filename, unsigned long int lineNumber) :  \/\/ NOLINT$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::HitCounter
HitCounter	easylogging++.h	/^    HitCounter(void) :$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::HitCounter
HitCounter	easylogging++.h	/^class HitCounter {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base
Host	easylogging++.h	/^    User = 1<<7, Host = 1<<8, LogMessage = 1<<9, VerboseLevel = 1<<10, AppName = 1<<11, ThreadId = 1<<12,$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::FormatFlags
Hour	easylogging++.h	/^    Microsecond = 0, Millisecond = 1, Second = 2, Minute = 3, Hour = 4, Day = 5$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit
INFO	easylogging++.h	5723;"	d
INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION	protob/config.pb.cc	4;"	d	file:
INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION	protob/messages.pb.cc	4;"	d	file:
INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION	protob/storage.pb.cc	4;"	d	file:
INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION	protob/types.pb.cc	4;"	d	file:
ImmediateFlush	easylogging++.h	/^    ImmediateFlush = 16,$/;"	m	class:el::Level::ConfigurationType::LoggingFlag
Info	easylogging++.h	/^        Info = 128, $/;"	m	class:el::Level
InitAsDefaultInstance	protob/config.pb.cc	/^void Configuration::InitAsDefaultInstance() {$/;"	f	class:Configuration
InitAsDefaultInstance	protob/config.pb.cc	/^void DeviceDescriptor::InitAsDefaultInstance() {$/;"	f	class:DeviceDescriptor
InitAsDefaultInstance	protob/messages.pb.cc	/^void Address::InitAsDefaultInstance() {$/;"	f	class:Address
InitAsDefaultInstance	protob/messages.pb.cc	/^void ApplySettings::InitAsDefaultInstance() {$/;"	f	class:ApplySettings
InitAsDefaultInstance	protob/messages.pb.cc	/^void ButtonAck::InitAsDefaultInstance() {$/;"	f	class:ButtonAck
InitAsDefaultInstance	protob/messages.pb.cc	/^void ButtonRequest::InitAsDefaultInstance() {$/;"	f	class:ButtonRequest
InitAsDefaultInstance	protob/messages.pb.cc	/^void Cancel::InitAsDefaultInstance() {$/;"	f	class:Cancel
InitAsDefaultInstance	protob/messages.pb.cc	/^void ChangePin::InitAsDefaultInstance() {$/;"	f	class:ChangePin
InitAsDefaultInstance	protob/messages.pb.cc	/^void CipherKeyValue::InitAsDefaultInstance() {$/;"	f	class:CipherKeyValue
InitAsDefaultInstance	protob/messages.pb.cc	/^void ClearSession::InitAsDefaultInstance() {$/;"	f	class:ClearSession
InitAsDefaultInstance	protob/messages.pb.cc	/^void DebugLinkDecision::InitAsDefaultInstance() {$/;"	f	class:DebugLinkDecision
InitAsDefaultInstance	protob/messages.pb.cc	/^void DebugLinkGetState::InitAsDefaultInstance() {$/;"	f	class:DebugLinkGetState
InitAsDefaultInstance	protob/messages.pb.cc	/^void DebugLinkLog::InitAsDefaultInstance() {$/;"	f	class:DebugLinkLog
InitAsDefaultInstance	protob/messages.pb.cc	/^void DebugLinkState::InitAsDefaultInstance() {$/;"	f	class:DebugLinkState
InitAsDefaultInstance	protob/messages.pb.cc	/^void DebugLinkStop::InitAsDefaultInstance() {$/;"	f	class:DebugLinkStop
InitAsDefaultInstance	protob/messages.pb.cc	/^void DecryptMessage::InitAsDefaultInstance() {$/;"	f	class:DecryptMessage
InitAsDefaultInstance	protob/messages.pb.cc	/^void EncryptMessage::InitAsDefaultInstance() {$/;"	f	class:EncryptMessage
InitAsDefaultInstance	protob/messages.pb.cc	/^void Entropy::InitAsDefaultInstance() {$/;"	f	class:Entropy
InitAsDefaultInstance	protob/messages.pb.cc	/^void EntropyAck::InitAsDefaultInstance() {$/;"	f	class:EntropyAck
InitAsDefaultInstance	protob/messages.pb.cc	/^void EntropyRequest::InitAsDefaultInstance() {$/;"	f	class:EntropyRequest
InitAsDefaultInstance	protob/messages.pb.cc	/^void EstimateTxSize::InitAsDefaultInstance() {$/;"	f	class:EstimateTxSize
InitAsDefaultInstance	protob/messages.pb.cc	/^void Failure::InitAsDefaultInstance() {$/;"	f	class:Failure
InitAsDefaultInstance	protob/messages.pb.cc	/^void Features::InitAsDefaultInstance() {$/;"	f	class:Features
InitAsDefaultInstance	protob/messages.pb.cc	/^void FirmwareErase::InitAsDefaultInstance() {$/;"	f	class:FirmwareErase
InitAsDefaultInstance	protob/messages.pb.cc	/^void FirmwareUpload::InitAsDefaultInstance() {$/;"	f	class:FirmwareUpload
InitAsDefaultInstance	protob/messages.pb.cc	/^void GetAddress::InitAsDefaultInstance() {$/;"	f	class:GetAddress
InitAsDefaultInstance	protob/messages.pb.cc	/^void GetEntropy::InitAsDefaultInstance() {$/;"	f	class:GetEntropy
InitAsDefaultInstance	protob/messages.pb.cc	/^void GetPublicKey::InitAsDefaultInstance() {$/;"	f	class:GetPublicKey
InitAsDefaultInstance	protob/messages.pb.cc	/^void Initialize::InitAsDefaultInstance() {$/;"	f	class:Initialize
InitAsDefaultInstance	protob/messages.pb.cc	/^void LoadDevice::InitAsDefaultInstance() {$/;"	f	class:LoadDevice
InitAsDefaultInstance	protob/messages.pb.cc	/^void MessageSignature::InitAsDefaultInstance() {$/;"	f	class:MessageSignature
InitAsDefaultInstance	protob/messages.pb.cc	/^void PassphraseAck::InitAsDefaultInstance() {$/;"	f	class:PassphraseAck
InitAsDefaultInstance	protob/messages.pb.cc	/^void PassphraseRequest::InitAsDefaultInstance() {$/;"	f	class:PassphraseRequest
InitAsDefaultInstance	protob/messages.pb.cc	/^void PinMatrixAck::InitAsDefaultInstance() {$/;"	f	class:PinMatrixAck
InitAsDefaultInstance	protob/messages.pb.cc	/^void PinMatrixRequest::InitAsDefaultInstance() {$/;"	f	class:PinMatrixRequest
InitAsDefaultInstance	protob/messages.pb.cc	/^void Ping::InitAsDefaultInstance() {$/;"	f	class:Ping
InitAsDefaultInstance	protob/messages.pb.cc	/^void PublicKey::InitAsDefaultInstance() {$/;"	f	class:PublicKey
InitAsDefaultInstance	protob/messages.pb.cc	/^void RecoveryDevice::InitAsDefaultInstance() {$/;"	f	class:RecoveryDevice
InitAsDefaultInstance	protob/messages.pb.cc	/^void ResetDevice::InitAsDefaultInstance() {$/;"	f	class:ResetDevice
InitAsDefaultInstance	protob/messages.pb.cc	/^void SignMessage::InitAsDefaultInstance() {$/;"	f	class:SignMessage
InitAsDefaultInstance	protob/messages.pb.cc	/^void SignTx::InitAsDefaultInstance() {$/;"	f	class:SignTx
InitAsDefaultInstance	protob/messages.pb.cc	/^void SimpleSignTx::InitAsDefaultInstance() {$/;"	f	class:SimpleSignTx
InitAsDefaultInstance	protob/messages.pb.cc	/^void Success::InitAsDefaultInstance() {$/;"	f	class:Success
InitAsDefaultInstance	protob/messages.pb.cc	/^void TestScreen::InitAsDefaultInstance() {$/;"	f	class:TestScreen
InitAsDefaultInstance	protob/messages.pb.cc	/^void TxAck::InitAsDefaultInstance() {$/;"	f	class:TxAck
InitAsDefaultInstance	protob/messages.pb.cc	/^void TxRequest::InitAsDefaultInstance() {$/;"	f	class:TxRequest
InitAsDefaultInstance	protob/messages.pb.cc	/^void TxSize::InitAsDefaultInstance() {$/;"	f	class:TxSize
InitAsDefaultInstance	protob/messages.pb.cc	/^void VerifyMessage::InitAsDefaultInstance() {$/;"	f	class:VerifyMessage
InitAsDefaultInstance	protob/messages.pb.cc	/^void WipeDevice::InitAsDefaultInstance() {$/;"	f	class:WipeDevice
InitAsDefaultInstance	protob/messages.pb.cc	/^void WordAck::InitAsDefaultInstance() {$/;"	f	class:WordAck
InitAsDefaultInstance	protob/messages.pb.cc	/^void WordRequest::InitAsDefaultInstance() {$/;"	f	class:WordRequest
InitAsDefaultInstance	protob/storage.pb.cc	/^void Storage::InitAsDefaultInstance() {$/;"	f	class:Storage
InitAsDefaultInstance	protob/types.pb.cc	/^void CoinType::InitAsDefaultInstance() {$/;"	f	class:CoinType
InitAsDefaultInstance	protob/types.pb.cc	/^void HDNodeType::InitAsDefaultInstance() {$/;"	f	class:HDNodeType
InitAsDefaultInstance	protob/types.pb.cc	/^void MultisigRedeemScriptType::InitAsDefaultInstance() {$/;"	f	class:MultisigRedeemScriptType
InitAsDefaultInstance	protob/types.pb.cc	/^void TransactionType::InitAsDefaultInstance() {$/;"	f	class:TransactionType
InitAsDefaultInstance	protob/types.pb.cc	/^void TxInputType::InitAsDefaultInstance() {$/;"	f	class:TxInputType
InitAsDefaultInstance	protob/types.pb.cc	/^void TxOutputBinType::InitAsDefaultInstance() {$/;"	f	class:TxOutputBinType
InitAsDefaultInstance	protob/types.pb.cc	/^void TxOutputType::InitAsDefaultInstance() {$/;"	f	class:TxOutputType
InitAsDefaultInstance	protob/types.pb.cc	/^void TxRequestDetailsType::InitAsDefaultInstance() {$/;"	f	class:TxRequestDetailsType
InitAsDefaultInstance	protob/types.pb.cc	/^void TxRequestSerializedType::InitAsDefaultInstance() {$/;"	f	class:TxRequestSerializedType
Initialize	protob/messages.pb.cc	/^Initialize::Initialize()$/;"	f	class:Initialize
Initialize	protob/messages.pb.cc	/^Initialize::Initialize(const Initialize& from)$/;"	f	class:Initialize
Initialize	protob/messages.pb.h	/^class Initialize : public ::google::protobuf::Message {$/;"	c
Initialize_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* Initialize_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
Initialize_reflection_	protob/messages.pb.cc	/^  Initialize_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
InputScriptType	protob/types.pb.h	/^enum InputScriptType {$/;"	g
InputScriptType_ARRAYSIZE	protob/types.pb.h	/^const int InputScriptType_ARRAYSIZE = InputScriptType_MAX + 1;$/;"	v
InputScriptType_IsValid	protob/types.pb.cc	/^bool InputScriptType_IsValid(int value) {$/;"	f
InputScriptType_MAX	protob/types.pb.h	/^const InputScriptType InputScriptType_MAX = SPENDMULTISIG;$/;"	v
InputScriptType_MIN	protob/types.pb.h	/^const InputScriptType InputScriptType_MIN = SPENDADDRESS;$/;"	v
InputScriptType_Name	protob/types.pb.h	/^inline const ::std::string& InputScriptType_Name(InputScriptType value) {$/;"	f
InputScriptType_Parse	protob/types.pb.h	/^inline bool InputScriptType_Parse($/;"	f
InputScriptType_descriptor	protob/types.pb.cc	/^const ::google::protobuf::EnumDescriptor* InputScriptType_descriptor() {$/;"	f
InputScriptType_descriptor_	protob/types.pb.cc	/^const ::google::protobuf::EnumDescriptor* InputScriptType_descriptor_ = NULL;$/;"	m	namespace:__anon3	file:
IsInitialized	protob/config.pb.cc	/^bool Configuration::IsInitialized() const {$/;"	f	class:Configuration
IsInitialized	protob/config.pb.cc	/^bool DeviceDescriptor::IsInitialized() const {$/;"	f	class:DeviceDescriptor
IsInitialized	protob/messages.pb.cc	/^bool Address::IsInitialized() const {$/;"	f	class:Address
IsInitialized	protob/messages.pb.cc	/^bool ApplySettings::IsInitialized() const {$/;"	f	class:ApplySettings
IsInitialized	protob/messages.pb.cc	/^bool ButtonAck::IsInitialized() const {$/;"	f	class:ButtonAck
IsInitialized	protob/messages.pb.cc	/^bool ButtonRequest::IsInitialized() const {$/;"	f	class:ButtonRequest
IsInitialized	protob/messages.pb.cc	/^bool Cancel::IsInitialized() const {$/;"	f	class:Cancel
IsInitialized	protob/messages.pb.cc	/^bool ChangePin::IsInitialized() const {$/;"	f	class:ChangePin
IsInitialized	protob/messages.pb.cc	/^bool CipherKeyValue::IsInitialized() const {$/;"	f	class:CipherKeyValue
IsInitialized	protob/messages.pb.cc	/^bool ClearSession::IsInitialized() const {$/;"	f	class:ClearSession
IsInitialized	protob/messages.pb.cc	/^bool DebugLinkDecision::IsInitialized() const {$/;"	f	class:DebugLinkDecision
IsInitialized	protob/messages.pb.cc	/^bool DebugLinkGetState::IsInitialized() const {$/;"	f	class:DebugLinkGetState
IsInitialized	protob/messages.pb.cc	/^bool DebugLinkLog::IsInitialized() const {$/;"	f	class:DebugLinkLog
IsInitialized	protob/messages.pb.cc	/^bool DebugLinkState::IsInitialized() const {$/;"	f	class:DebugLinkState
IsInitialized	protob/messages.pb.cc	/^bool DebugLinkStop::IsInitialized() const {$/;"	f	class:DebugLinkStop
IsInitialized	protob/messages.pb.cc	/^bool DecryptMessage::IsInitialized() const {$/;"	f	class:DecryptMessage
IsInitialized	protob/messages.pb.cc	/^bool EncryptMessage::IsInitialized() const {$/;"	f	class:EncryptMessage
IsInitialized	protob/messages.pb.cc	/^bool Entropy::IsInitialized() const {$/;"	f	class:Entropy
IsInitialized	protob/messages.pb.cc	/^bool EntropyAck::IsInitialized() const {$/;"	f	class:EntropyAck
IsInitialized	protob/messages.pb.cc	/^bool EntropyRequest::IsInitialized() const {$/;"	f	class:EntropyRequest
IsInitialized	protob/messages.pb.cc	/^bool EstimateTxSize::IsInitialized() const {$/;"	f	class:EstimateTxSize
IsInitialized	protob/messages.pb.cc	/^bool Failure::IsInitialized() const {$/;"	f	class:Failure
IsInitialized	protob/messages.pb.cc	/^bool Features::IsInitialized() const {$/;"	f	class:Features
IsInitialized	protob/messages.pb.cc	/^bool FirmwareErase::IsInitialized() const {$/;"	f	class:FirmwareErase
IsInitialized	protob/messages.pb.cc	/^bool FirmwareUpload::IsInitialized() const {$/;"	f	class:FirmwareUpload
IsInitialized	protob/messages.pb.cc	/^bool GetAddress::IsInitialized() const {$/;"	f	class:GetAddress
IsInitialized	protob/messages.pb.cc	/^bool GetEntropy::IsInitialized() const {$/;"	f	class:GetEntropy
IsInitialized	protob/messages.pb.cc	/^bool GetPublicKey::IsInitialized() const {$/;"	f	class:GetPublicKey
IsInitialized	protob/messages.pb.cc	/^bool Initialize::IsInitialized() const {$/;"	f	class:Initialize
IsInitialized	protob/messages.pb.cc	/^bool LoadDevice::IsInitialized() const {$/;"	f	class:LoadDevice
IsInitialized	protob/messages.pb.cc	/^bool MessageSignature::IsInitialized() const {$/;"	f	class:MessageSignature
IsInitialized	protob/messages.pb.cc	/^bool PassphraseAck::IsInitialized() const {$/;"	f	class:PassphraseAck
IsInitialized	protob/messages.pb.cc	/^bool PassphraseRequest::IsInitialized() const {$/;"	f	class:PassphraseRequest
IsInitialized	protob/messages.pb.cc	/^bool PinMatrixAck::IsInitialized() const {$/;"	f	class:PinMatrixAck
IsInitialized	protob/messages.pb.cc	/^bool PinMatrixRequest::IsInitialized() const {$/;"	f	class:PinMatrixRequest
IsInitialized	protob/messages.pb.cc	/^bool Ping::IsInitialized() const {$/;"	f	class:Ping
IsInitialized	protob/messages.pb.cc	/^bool PublicKey::IsInitialized() const {$/;"	f	class:PublicKey
IsInitialized	protob/messages.pb.cc	/^bool RecoveryDevice::IsInitialized() const {$/;"	f	class:RecoveryDevice
IsInitialized	protob/messages.pb.cc	/^bool ResetDevice::IsInitialized() const {$/;"	f	class:ResetDevice
IsInitialized	protob/messages.pb.cc	/^bool SignMessage::IsInitialized() const {$/;"	f	class:SignMessage
IsInitialized	protob/messages.pb.cc	/^bool SignTx::IsInitialized() const {$/;"	f	class:SignTx
IsInitialized	protob/messages.pb.cc	/^bool SimpleSignTx::IsInitialized() const {$/;"	f	class:SimpleSignTx
IsInitialized	protob/messages.pb.cc	/^bool Success::IsInitialized() const {$/;"	f	class:Success
IsInitialized	protob/messages.pb.cc	/^bool TestScreen::IsInitialized() const {$/;"	f	class:TestScreen
IsInitialized	protob/messages.pb.cc	/^bool TxAck::IsInitialized() const {$/;"	f	class:TxAck
IsInitialized	protob/messages.pb.cc	/^bool TxRequest::IsInitialized() const {$/;"	f	class:TxRequest
IsInitialized	protob/messages.pb.cc	/^bool TxSize::IsInitialized() const {$/;"	f	class:TxSize
IsInitialized	protob/messages.pb.cc	/^bool VerifyMessage::IsInitialized() const {$/;"	f	class:VerifyMessage
IsInitialized	protob/messages.pb.cc	/^bool WipeDevice::IsInitialized() const {$/;"	f	class:WipeDevice
IsInitialized	protob/messages.pb.cc	/^bool WordAck::IsInitialized() const {$/;"	f	class:WordAck
IsInitialized	protob/messages.pb.cc	/^bool WordRequest::IsInitialized() const {$/;"	f	class:WordRequest
IsInitialized	protob/storage.pb.cc	/^bool Storage::IsInitialized() const {$/;"	f	class:Storage
IsInitialized	protob/types.pb.cc	/^bool CoinType::IsInitialized() const {$/;"	f	class:CoinType
IsInitialized	protob/types.pb.cc	/^bool HDNodeType::IsInitialized() const {$/;"	f	class:HDNodeType
IsInitialized	protob/types.pb.cc	/^bool MultisigRedeemScriptType::IsInitialized() const {$/;"	f	class:MultisigRedeemScriptType
IsInitialized	protob/types.pb.cc	/^bool TransactionType::IsInitialized() const {$/;"	f	class:TransactionType
IsInitialized	protob/types.pb.cc	/^bool TxInputType::IsInitialized() const {$/;"	f	class:TxInputType
IsInitialized	protob/types.pb.cc	/^bool TxOutputBinType::IsInitialized() const {$/;"	f	class:TxOutputBinType
IsInitialized	protob/types.pb.cc	/^bool TxOutputType::IsInitialized() const {$/;"	f	class:TxOutputType
IsInitialized	protob/types.pb.cc	/^bool TxRequestDetailsType::IsInitialized() const {$/;"	f	class:TxRequestDetailsType
IsInitialized	protob/types.pb.cc	/^bool TxRequestSerializedType::IsInitialized() const {$/;"	f	class:TxRequestSerializedType
IterableContainer	easylogging++.h	/^    IterableContainer(void) {}$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::workarounds::IterableContainer
IterableContainer	easylogging++.h	/^class IterableContainer {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::workarounds
IterablePriorityQueue	easylogging++.h	/^    IterablePriorityQueue(std::priority_queue<T, Container, Comparator> queue_) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::workarounds::IterablePriorityQueue
IterablePriorityQueue	easylogging++.h	/^class IterablePriorityQueue : public IterableContainer<T, Container>, public std::priority_queue<T, Container, Comparator> {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::workarounds
IterableQueue	easylogging++.h	/^    IterableQueue(std::queue<T, Container> queue_) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::workarounds::IterableQueue
IterableQueue	easylogging++.h	/^class IterableQueue : public IterableContainer<T, Container>, public std::queue<T, Container> {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::workarounds
IterableStack	easylogging++.h	/^    IterableStack(std::stack<T, Container> stack_) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::workarounds::IterableStack
IterableStack	easylogging++.h	/^class IterableStack : public IterableContainer<T, Container>, public std::stack<T, Container> {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::workarounds
LOG	easylogging++.h	6017;"	d
LOG	easylogging++.h	6036;"	d
LOGGER_LEVEL_WRITERS	easylogging++.h	4876;"	d
LOGGER_LEVEL_WRITERS	easylogging++.h	4925;"	d
LOGGER_LEVEL_WRITERS_DISABLED	easylogging++.h	4885;"	d
LOGGER_LEVEL_WRITERS_DISABLED	easylogging++.h	4926;"	d
LOGGER_LEVEL_WRITERS_SIGNATURES	easylogging++.h	3458;"	d
LOGGER_LEVEL_WRITERS_SIGNATURES	easylogging++.h	3476;"	d
LOG_AFTER_N	easylogging++.h	6023;"	d
LOG_AFTER_N	easylogging++.h	6044;"	d
LOG_EVERY_N	easylogging++.h	6021;"	d
LOG_EVERY_N	easylogging++.h	6042;"	d
LOG_IF	easylogging++.h	6019;"	d
LOG_IF	easylogging++.h	6039;"	d
LOG_N_TIMES	easylogging++.h	6025;"	d
LOG_N_TIMES	easylogging++.h	6046;"	d
Level	easylogging++.h	/^    Level = 1<<13, FileBase = 1<<14, LevelShort = 1<<15,$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::FormatFlags
Level	easylogging++.h	/^enum class Level : base::type::EnumType {$/;"	c	namespace:el
LevelHelper	easylogging++.h	/^class LevelHelper : base::StaticClass {$/;"	c	class:el::Level
LevelShort	easylogging++.h	/^    Level = 1<<13, FileBase = 1<<14, LevelShort = 1<<15,$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::FormatFlags
Line	easylogging++.h	/^    DateTime = 1<<1, LoggerId = 1<<2, File = 1<<3, Line = 1<<4, Location = 1<<5, Function = 1<<6,$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::FormatFlags
LoadDevice	protob/messages.pb.cc	/^LoadDevice::LoadDevice()$/;"	f	class:LoadDevice
LoadDevice	protob/messages.pb.cc	/^LoadDevice::LoadDevice(const LoadDevice& from)$/;"	f	class:LoadDevice
LoadDevice	protob/messages.pb.h	/^class LoadDevice : public ::google::protobuf::Message {$/;"	c
LoadDevice_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* LoadDevice_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
LoadDevice_reflection_	protob/messages.pb.cc	/^  LoadDevice_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
Location	easylogging++.h	/^    DateTime = 1<<1, LoggerId = 1<<2, File = 1<<3, Line = 1<<4, Location = 1<<5, Function = 1<<6,$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::FormatFlags
LogBuilder	easylogging++.h	/^class LogBuilder : base::NoCopy {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base
LogBuilderPtr	easylogging++.h	/^typedef std::shared_ptr<LogBuilder> LogBuilderPtr;$/;"	t	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base
LogDetailedCrashReason	easylogging++.h	/^    LogDetailedCrashReason = 4,$/;"	m	class:el::Level::ConfigurationType::LoggingFlag
LogDispatchCallback	easylogging++.h	/^class LogDispatchCallback : public Callback<LogDispatchData> {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base
LogDispatchCallbackPtr	easylogging++.h	/^typedef std::shared_ptr<LogDispatchCallback> LogDispatchCallbackPtr;$/;"	t	namespace:el::base::type
LogDispatchData	easylogging++.h	/^    LogDispatchData() : m_logMessage(nullptr), m_dispatchAction(base::DispatchAction::None) {}$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogDispatchData
LogDispatchData	easylogging++.h	/^class LogDispatchData {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base
LogDispatcher	easylogging++.h	/^    LogDispatcher(bool proceed, LogMessage&& logMessage, base::DispatchAction dispatchAction) :$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::LogDispatcher
LogDispatcher	easylogging++.h	/^class LogDispatcher : base::NoCopy {$/;"	c	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder
LogFlushThreshold	easylogging++.h	/^    LogFlushThreshold = 256,$/;"	m	class:el::Level::ConfigurationType
LogFormat	easylogging++.h	/^    LogFormat(Level level, const base::type::string_t& format)$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogFormat
LogFormat	easylogging++.h	/^    LogFormat(LogFormat&& logFormat) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogFormat
LogFormat	easylogging++.h	/^    LogFormat(const LogFormat& logFormat) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogFormat
LogFormat	easylogging++.h	/^    LogFormat(void) :$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogFormat
LogFormat	easylogging++.h	/^class LogFormat : public Loggable {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base
LogMessage	easylogging++.h	/^    LogMessage(Level level, const std::string& file, unsigned long int line, const std::string& func,  \/\/ NOLINT$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogMessage
LogMessage	easylogging++.h	/^    User = 1<<7, Host = 1<<8, LogMessage = 1<<9, VerboseLevel = 1<<10, AppName = 1<<11, ThreadId = 1<<12,$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::FormatFlags
LogMessage	easylogging++.h	/^class LogMessage {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base
LogStreamsReferenceMap	easylogging++.h	/^typedef std::map<std::string, FileStreamPtr> LogStreamsReferenceMap;$/;"	t	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base
Loggable	easylogging++.h	/^class Loggable {$/;"	c	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File
Logger	easylogging++.h	/^    Logger(const Logger& logger) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
Logger	easylogging++.h	/^    Logger(const std::string& id, base::LogStreamsReferenceMap* logStreamsReference) :$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
Logger	easylogging++.h	/^    Logger(const std::string& id, const Configurations& configurations, base::LogStreamsReferenceMap* logStreamsReference) :$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
Logger	easylogging++.h	/^class Logger : public base::threading::ThreadSafe, public Loggable {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base
LoggerId	easylogging++.h	/^    DateTime = 1<<1, LoggerId = 1<<2, File = 1<<3, Line = 1<<4, Location = 1<<5, Function = 1<<6,$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::FormatFlags
Loggers	easylogging++.h	/^class Loggers : base::StaticClass {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base
LoggingFlag	easylogging++.h	/^enum class LoggingFlag : base::type::EnumType {$/;"	c	class:el::Level::ConfigurationType
MAKE_CONTAINER_ELPP_FRIENDLY	easylogging++.h	4556;"	d
MAKE_LOGGABLE	easylogging++.h	5341;"	d
MaxLogFileSize	easylogging++.h	/^    MaxLogFileSize = 128,$/;"	m	class:el::Level::ConfigurationType
MergeFrom	protob/config.pb.cc	/^void Configuration::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:Configuration
MergeFrom	protob/config.pb.cc	/^void Configuration::MergeFrom(const Configuration& from) {$/;"	f	class:Configuration
MergeFrom	protob/config.pb.cc	/^void DeviceDescriptor::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:DeviceDescriptor
MergeFrom	protob/config.pb.cc	/^void DeviceDescriptor::MergeFrom(const DeviceDescriptor& from) {$/;"	f	class:DeviceDescriptor
MergeFrom	protob/messages.pb.cc	/^void Address::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:Address
MergeFrom	protob/messages.pb.cc	/^void Address::MergeFrom(const Address& from) {$/;"	f	class:Address
MergeFrom	protob/messages.pb.cc	/^void ApplySettings::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:ApplySettings
MergeFrom	protob/messages.pb.cc	/^void ApplySettings::MergeFrom(const ApplySettings& from) {$/;"	f	class:ApplySettings
MergeFrom	protob/messages.pb.cc	/^void ButtonAck::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:ButtonAck
MergeFrom	protob/messages.pb.cc	/^void ButtonAck::MergeFrom(const ButtonAck& from) {$/;"	f	class:ButtonAck
MergeFrom	protob/messages.pb.cc	/^void ButtonRequest::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:ButtonRequest
MergeFrom	protob/messages.pb.cc	/^void ButtonRequest::MergeFrom(const ButtonRequest& from) {$/;"	f	class:ButtonRequest
MergeFrom	protob/messages.pb.cc	/^void Cancel::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:Cancel
MergeFrom	protob/messages.pb.cc	/^void Cancel::MergeFrom(const Cancel& from) {$/;"	f	class:Cancel
MergeFrom	protob/messages.pb.cc	/^void ChangePin::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:ChangePin
MergeFrom	protob/messages.pb.cc	/^void ChangePin::MergeFrom(const ChangePin& from) {$/;"	f	class:ChangePin
MergeFrom	protob/messages.pb.cc	/^void CipherKeyValue::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:CipherKeyValue
MergeFrom	protob/messages.pb.cc	/^void CipherKeyValue::MergeFrom(const CipherKeyValue& from) {$/;"	f	class:CipherKeyValue
MergeFrom	protob/messages.pb.cc	/^void ClearSession::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:ClearSession
MergeFrom	protob/messages.pb.cc	/^void ClearSession::MergeFrom(const ClearSession& from) {$/;"	f	class:ClearSession
MergeFrom	protob/messages.pb.cc	/^void DebugLinkDecision::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:DebugLinkDecision
MergeFrom	protob/messages.pb.cc	/^void DebugLinkDecision::MergeFrom(const DebugLinkDecision& from) {$/;"	f	class:DebugLinkDecision
MergeFrom	protob/messages.pb.cc	/^void DebugLinkGetState::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:DebugLinkGetState
MergeFrom	protob/messages.pb.cc	/^void DebugLinkGetState::MergeFrom(const DebugLinkGetState& from) {$/;"	f	class:DebugLinkGetState
MergeFrom	protob/messages.pb.cc	/^void DebugLinkLog::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:DebugLinkLog
MergeFrom	protob/messages.pb.cc	/^void DebugLinkLog::MergeFrom(const DebugLinkLog& from) {$/;"	f	class:DebugLinkLog
MergeFrom	protob/messages.pb.cc	/^void DebugLinkState::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:DebugLinkState
MergeFrom	protob/messages.pb.cc	/^void DebugLinkState::MergeFrom(const DebugLinkState& from) {$/;"	f	class:DebugLinkState
MergeFrom	protob/messages.pb.cc	/^void DebugLinkStop::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:DebugLinkStop
MergeFrom	protob/messages.pb.cc	/^void DebugLinkStop::MergeFrom(const DebugLinkStop& from) {$/;"	f	class:DebugLinkStop
MergeFrom	protob/messages.pb.cc	/^void DecryptMessage::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:DecryptMessage
MergeFrom	protob/messages.pb.cc	/^void DecryptMessage::MergeFrom(const DecryptMessage& from) {$/;"	f	class:DecryptMessage
MergeFrom	protob/messages.pb.cc	/^void EncryptMessage::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:EncryptMessage
MergeFrom	protob/messages.pb.cc	/^void EncryptMessage::MergeFrom(const EncryptMessage& from) {$/;"	f	class:EncryptMessage
MergeFrom	protob/messages.pb.cc	/^void Entropy::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:Entropy
MergeFrom	protob/messages.pb.cc	/^void Entropy::MergeFrom(const Entropy& from) {$/;"	f	class:Entropy
MergeFrom	protob/messages.pb.cc	/^void EntropyAck::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:EntropyAck
MergeFrom	protob/messages.pb.cc	/^void EntropyAck::MergeFrom(const EntropyAck& from) {$/;"	f	class:EntropyAck
MergeFrom	protob/messages.pb.cc	/^void EntropyRequest::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:EntropyRequest
MergeFrom	protob/messages.pb.cc	/^void EntropyRequest::MergeFrom(const EntropyRequest& from) {$/;"	f	class:EntropyRequest
MergeFrom	protob/messages.pb.cc	/^void EstimateTxSize::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:EstimateTxSize
MergeFrom	protob/messages.pb.cc	/^void EstimateTxSize::MergeFrom(const EstimateTxSize& from) {$/;"	f	class:EstimateTxSize
MergeFrom	protob/messages.pb.cc	/^void Failure::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:Failure
MergeFrom	protob/messages.pb.cc	/^void Failure::MergeFrom(const Failure& from) {$/;"	f	class:Failure
MergeFrom	protob/messages.pb.cc	/^void Features::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:Features
MergeFrom	protob/messages.pb.cc	/^void Features::MergeFrom(const Features& from) {$/;"	f	class:Features
MergeFrom	protob/messages.pb.cc	/^void FirmwareErase::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:FirmwareErase
MergeFrom	protob/messages.pb.cc	/^void FirmwareErase::MergeFrom(const FirmwareErase& from) {$/;"	f	class:FirmwareErase
MergeFrom	protob/messages.pb.cc	/^void FirmwareUpload::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:FirmwareUpload
MergeFrom	protob/messages.pb.cc	/^void FirmwareUpload::MergeFrom(const FirmwareUpload& from) {$/;"	f	class:FirmwareUpload
MergeFrom	protob/messages.pb.cc	/^void GetAddress::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:GetAddress
MergeFrom	protob/messages.pb.cc	/^void GetAddress::MergeFrom(const GetAddress& from) {$/;"	f	class:GetAddress
MergeFrom	protob/messages.pb.cc	/^void GetEntropy::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:GetEntropy
MergeFrom	protob/messages.pb.cc	/^void GetEntropy::MergeFrom(const GetEntropy& from) {$/;"	f	class:GetEntropy
MergeFrom	protob/messages.pb.cc	/^void GetPublicKey::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:GetPublicKey
MergeFrom	protob/messages.pb.cc	/^void GetPublicKey::MergeFrom(const GetPublicKey& from) {$/;"	f	class:GetPublicKey
MergeFrom	protob/messages.pb.cc	/^void Initialize::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:Initialize
MergeFrom	protob/messages.pb.cc	/^void Initialize::MergeFrom(const Initialize& from) {$/;"	f	class:Initialize
MergeFrom	protob/messages.pb.cc	/^void LoadDevice::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:LoadDevice
MergeFrom	protob/messages.pb.cc	/^void LoadDevice::MergeFrom(const LoadDevice& from) {$/;"	f	class:LoadDevice
MergeFrom	protob/messages.pb.cc	/^void MessageSignature::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:MessageSignature
MergeFrom	protob/messages.pb.cc	/^void MessageSignature::MergeFrom(const MessageSignature& from) {$/;"	f	class:MessageSignature
MergeFrom	protob/messages.pb.cc	/^void PassphraseAck::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:PassphraseAck
MergeFrom	protob/messages.pb.cc	/^void PassphraseAck::MergeFrom(const PassphraseAck& from) {$/;"	f	class:PassphraseAck
MergeFrom	protob/messages.pb.cc	/^void PassphraseRequest::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:PassphraseRequest
MergeFrom	protob/messages.pb.cc	/^void PassphraseRequest::MergeFrom(const PassphraseRequest& from) {$/;"	f	class:PassphraseRequest
MergeFrom	protob/messages.pb.cc	/^void PinMatrixAck::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:PinMatrixAck
MergeFrom	protob/messages.pb.cc	/^void PinMatrixAck::MergeFrom(const PinMatrixAck& from) {$/;"	f	class:PinMatrixAck
MergeFrom	protob/messages.pb.cc	/^void PinMatrixRequest::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:PinMatrixRequest
MergeFrom	protob/messages.pb.cc	/^void PinMatrixRequest::MergeFrom(const PinMatrixRequest& from) {$/;"	f	class:PinMatrixRequest
MergeFrom	protob/messages.pb.cc	/^void Ping::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:Ping
MergeFrom	protob/messages.pb.cc	/^void Ping::MergeFrom(const Ping& from) {$/;"	f	class:Ping
MergeFrom	protob/messages.pb.cc	/^void PublicKey::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:PublicKey
MergeFrom	protob/messages.pb.cc	/^void PublicKey::MergeFrom(const PublicKey& from) {$/;"	f	class:PublicKey
MergeFrom	protob/messages.pb.cc	/^void RecoveryDevice::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:RecoveryDevice
MergeFrom	protob/messages.pb.cc	/^void RecoveryDevice::MergeFrom(const RecoveryDevice& from) {$/;"	f	class:RecoveryDevice
MergeFrom	protob/messages.pb.cc	/^void ResetDevice::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:ResetDevice
MergeFrom	protob/messages.pb.cc	/^void ResetDevice::MergeFrom(const ResetDevice& from) {$/;"	f	class:ResetDevice
MergeFrom	protob/messages.pb.cc	/^void SignMessage::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:SignMessage
MergeFrom	protob/messages.pb.cc	/^void SignMessage::MergeFrom(const SignMessage& from) {$/;"	f	class:SignMessage
MergeFrom	protob/messages.pb.cc	/^void SignTx::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:SignTx
MergeFrom	protob/messages.pb.cc	/^void SignTx::MergeFrom(const SignTx& from) {$/;"	f	class:SignTx
MergeFrom	protob/messages.pb.cc	/^void SimpleSignTx::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:SimpleSignTx
MergeFrom	protob/messages.pb.cc	/^void SimpleSignTx::MergeFrom(const SimpleSignTx& from) {$/;"	f	class:SimpleSignTx
MergeFrom	protob/messages.pb.cc	/^void Success::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:Success
MergeFrom	protob/messages.pb.cc	/^void Success::MergeFrom(const Success& from) {$/;"	f	class:Success
MergeFrom	protob/messages.pb.cc	/^void TestScreen::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:TestScreen
MergeFrom	protob/messages.pb.cc	/^void TestScreen::MergeFrom(const TestScreen& from) {$/;"	f	class:TestScreen
MergeFrom	protob/messages.pb.cc	/^void TxAck::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:TxAck
MergeFrom	protob/messages.pb.cc	/^void TxAck::MergeFrom(const TxAck& from) {$/;"	f	class:TxAck
MergeFrom	protob/messages.pb.cc	/^void TxRequest::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:TxRequest
MergeFrom	protob/messages.pb.cc	/^void TxRequest::MergeFrom(const TxRequest& from) {$/;"	f	class:TxRequest
MergeFrom	protob/messages.pb.cc	/^void TxSize::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:TxSize
MergeFrom	protob/messages.pb.cc	/^void TxSize::MergeFrom(const TxSize& from) {$/;"	f	class:TxSize
MergeFrom	protob/messages.pb.cc	/^void VerifyMessage::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:VerifyMessage
MergeFrom	protob/messages.pb.cc	/^void VerifyMessage::MergeFrom(const VerifyMessage& from) {$/;"	f	class:VerifyMessage
MergeFrom	protob/messages.pb.cc	/^void WipeDevice::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:WipeDevice
MergeFrom	protob/messages.pb.cc	/^void WipeDevice::MergeFrom(const WipeDevice& from) {$/;"	f	class:WipeDevice
MergeFrom	protob/messages.pb.cc	/^void WordAck::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:WordAck
MergeFrom	protob/messages.pb.cc	/^void WordAck::MergeFrom(const WordAck& from) {$/;"	f	class:WordAck
MergeFrom	protob/messages.pb.cc	/^void WordRequest::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:WordRequest
MergeFrom	protob/messages.pb.cc	/^void WordRequest::MergeFrom(const WordRequest& from) {$/;"	f	class:WordRequest
MergeFrom	protob/storage.pb.cc	/^void Storage::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:Storage
MergeFrom	protob/storage.pb.cc	/^void Storage::MergeFrom(const Storage& from) {$/;"	f	class:Storage
MergeFrom	protob/types.pb.cc	/^void CoinType::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:CoinType
MergeFrom	protob/types.pb.cc	/^void CoinType::MergeFrom(const CoinType& from) {$/;"	f	class:CoinType
MergeFrom	protob/types.pb.cc	/^void HDNodeType::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:HDNodeType
MergeFrom	protob/types.pb.cc	/^void HDNodeType::MergeFrom(const HDNodeType& from) {$/;"	f	class:HDNodeType
MergeFrom	protob/types.pb.cc	/^void MultisigRedeemScriptType::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:MultisigRedeemScriptType
MergeFrom	protob/types.pb.cc	/^void MultisigRedeemScriptType::MergeFrom(const MultisigRedeemScriptType& from) {$/;"	f	class:MultisigRedeemScriptType
MergeFrom	protob/types.pb.cc	/^void TransactionType::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:TransactionType
MergeFrom	protob/types.pb.cc	/^void TransactionType::MergeFrom(const TransactionType& from) {$/;"	f	class:TransactionType
MergeFrom	protob/types.pb.cc	/^void TxInputType::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:TxInputType
MergeFrom	protob/types.pb.cc	/^void TxInputType::MergeFrom(const TxInputType& from) {$/;"	f	class:TxInputType
MergeFrom	protob/types.pb.cc	/^void TxOutputBinType::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:TxOutputBinType
MergeFrom	protob/types.pb.cc	/^void TxOutputBinType::MergeFrom(const TxOutputBinType& from) {$/;"	f	class:TxOutputBinType
MergeFrom	protob/types.pb.cc	/^void TxOutputType::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:TxOutputType
MergeFrom	protob/types.pb.cc	/^void TxOutputType::MergeFrom(const TxOutputType& from) {$/;"	f	class:TxOutputType
MergeFrom	protob/types.pb.cc	/^void TxRequestDetailsType::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:TxRequestDetailsType
MergeFrom	protob/types.pb.cc	/^void TxRequestDetailsType::MergeFrom(const TxRequestDetailsType& from) {$/;"	f	class:TxRequestDetailsType
MergeFrom	protob/types.pb.cc	/^void TxRequestSerializedType::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:TxRequestSerializedType
MergeFrom	protob/types.pb.cc	/^void TxRequestSerializedType::MergeFrom(const TxRequestSerializedType& from) {$/;"	f	class:TxRequestSerializedType
MergePartialFromCodedStream	protob/config.pb.cc	/^bool Configuration::MergePartialFromCodedStream($/;"	f	class:Configuration
MergePartialFromCodedStream	protob/config.pb.cc	/^bool DeviceDescriptor::MergePartialFromCodedStream($/;"	f	class:DeviceDescriptor
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool Address::MergePartialFromCodedStream($/;"	f	class:Address
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool ApplySettings::MergePartialFromCodedStream($/;"	f	class:ApplySettings
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool ButtonAck::MergePartialFromCodedStream($/;"	f	class:ButtonAck
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool ButtonRequest::MergePartialFromCodedStream($/;"	f	class:ButtonRequest
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool Cancel::MergePartialFromCodedStream($/;"	f	class:Cancel
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool ChangePin::MergePartialFromCodedStream($/;"	f	class:ChangePin
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool CipherKeyValue::MergePartialFromCodedStream($/;"	f	class:CipherKeyValue
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool ClearSession::MergePartialFromCodedStream($/;"	f	class:ClearSession
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool DebugLinkDecision::MergePartialFromCodedStream($/;"	f	class:DebugLinkDecision
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool DebugLinkGetState::MergePartialFromCodedStream($/;"	f	class:DebugLinkGetState
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool DebugLinkLog::MergePartialFromCodedStream($/;"	f	class:DebugLinkLog
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool DebugLinkState::MergePartialFromCodedStream($/;"	f	class:DebugLinkState
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool DebugLinkStop::MergePartialFromCodedStream($/;"	f	class:DebugLinkStop
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool DecryptMessage::MergePartialFromCodedStream($/;"	f	class:DecryptMessage
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool EncryptMessage::MergePartialFromCodedStream($/;"	f	class:EncryptMessage
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool Entropy::MergePartialFromCodedStream($/;"	f	class:Entropy
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool EntropyAck::MergePartialFromCodedStream($/;"	f	class:EntropyAck
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool EntropyRequest::MergePartialFromCodedStream($/;"	f	class:EntropyRequest
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool EstimateTxSize::MergePartialFromCodedStream($/;"	f	class:EstimateTxSize
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool Failure::MergePartialFromCodedStream($/;"	f	class:Failure
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool Features::MergePartialFromCodedStream($/;"	f	class:Features
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool FirmwareErase::MergePartialFromCodedStream($/;"	f	class:FirmwareErase
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool FirmwareUpload::MergePartialFromCodedStream($/;"	f	class:FirmwareUpload
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool GetAddress::MergePartialFromCodedStream($/;"	f	class:GetAddress
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool GetEntropy::MergePartialFromCodedStream($/;"	f	class:GetEntropy
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool GetPublicKey::MergePartialFromCodedStream($/;"	f	class:GetPublicKey
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool Initialize::MergePartialFromCodedStream($/;"	f	class:Initialize
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool LoadDevice::MergePartialFromCodedStream($/;"	f	class:LoadDevice
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool MessageSignature::MergePartialFromCodedStream($/;"	f	class:MessageSignature
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool PassphraseAck::MergePartialFromCodedStream($/;"	f	class:PassphraseAck
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool PassphraseRequest::MergePartialFromCodedStream($/;"	f	class:PassphraseRequest
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool PinMatrixAck::MergePartialFromCodedStream($/;"	f	class:PinMatrixAck
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool PinMatrixRequest::MergePartialFromCodedStream($/;"	f	class:PinMatrixRequest
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool Ping::MergePartialFromCodedStream($/;"	f	class:Ping
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool PublicKey::MergePartialFromCodedStream($/;"	f	class:PublicKey
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool RecoveryDevice::MergePartialFromCodedStream($/;"	f	class:RecoveryDevice
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool ResetDevice::MergePartialFromCodedStream($/;"	f	class:ResetDevice
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool SignMessage::MergePartialFromCodedStream($/;"	f	class:SignMessage
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool SignTx::MergePartialFromCodedStream($/;"	f	class:SignTx
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool SimpleSignTx::MergePartialFromCodedStream($/;"	f	class:SimpleSignTx
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool Success::MergePartialFromCodedStream($/;"	f	class:Success
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool TestScreen::MergePartialFromCodedStream($/;"	f	class:TestScreen
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool TxAck::MergePartialFromCodedStream($/;"	f	class:TxAck
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool TxRequest::MergePartialFromCodedStream($/;"	f	class:TxRequest
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool TxSize::MergePartialFromCodedStream($/;"	f	class:TxSize
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool VerifyMessage::MergePartialFromCodedStream($/;"	f	class:VerifyMessage
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool WipeDevice::MergePartialFromCodedStream($/;"	f	class:WipeDevice
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool WordAck::MergePartialFromCodedStream($/;"	f	class:WordAck
MergePartialFromCodedStream	protob/messages.pb.cc	/^bool WordRequest::MergePartialFromCodedStream($/;"	f	class:WordRequest
MergePartialFromCodedStream	protob/storage.pb.cc	/^bool Storage::MergePartialFromCodedStream($/;"	f	class:Storage
MergePartialFromCodedStream	protob/types.pb.cc	/^bool CoinType::MergePartialFromCodedStream($/;"	f	class:CoinType
MergePartialFromCodedStream	protob/types.pb.cc	/^bool HDNodeType::MergePartialFromCodedStream($/;"	f	class:HDNodeType
MergePartialFromCodedStream	protob/types.pb.cc	/^bool MultisigRedeemScriptType::MergePartialFromCodedStream($/;"	f	class:MultisigRedeemScriptType
MergePartialFromCodedStream	protob/types.pb.cc	/^bool TransactionType::MergePartialFromCodedStream($/;"	f	class:TransactionType
MergePartialFromCodedStream	protob/types.pb.cc	/^bool TxInputType::MergePartialFromCodedStream($/;"	f	class:TxInputType
MergePartialFromCodedStream	protob/types.pb.cc	/^bool TxOutputBinType::MergePartialFromCodedStream($/;"	f	class:TxOutputBinType
MergePartialFromCodedStream	protob/types.pb.cc	/^bool TxOutputType::MergePartialFromCodedStream($/;"	f	class:TxOutputType
MergePartialFromCodedStream	protob/types.pb.cc	/^bool TxRequestDetailsType::MergePartialFromCodedStream($/;"	f	class:TxRequestDetailsType
MergePartialFromCodedStream	protob/types.pb.cc	/^bool TxRequestSerializedType::MergePartialFromCodedStream($/;"	f	class:TxRequestSerializedType
MessageBuilder	easylogging++.h	/^    MessageBuilder(void) : m_logger(nullptr), m_containerLogSeperator(ELPP_LITERAL("")) {}$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::MessageBuilder
MessageBuilder	easylogging++.h	/^class MessageBuilder {$/;"	c	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder
MessageSignature	protob/messages.pb.cc	/^MessageSignature::MessageSignature()$/;"	f	class:MessageSignature
MessageSignature	protob/messages.pb.cc	/^MessageSignature::MessageSignature(const MessageSignature& from)$/;"	f	class:MessageSignature
MessageSignature	protob/messages.pb.h	/^class MessageSignature : public ::google::protobuf::Message {$/;"	c
MessageSignature_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* MessageSignature_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
MessageSignature_reflection_	protob/messages.pb.cc	/^  MessageSignature_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
MessageType	protob/messages.pb.h	/^enum MessageType {$/;"	g
MessageType_ARRAYSIZE	protob/messages.pb.h	/^const int MessageType_ARRAYSIZE = MessageType_MAX + 1;$/;"	v
MessageType_Address	protob/messages.pb.h	/^  MessageType_Address = 30,$/;"	e	enum:MessageType
MessageType_ApplySettings	protob/messages.pb.h	/^  MessageType_ApplySettings = 25,$/;"	e	enum:MessageType
MessageType_ButtonAck	protob/messages.pb.h	/^  MessageType_ButtonAck = 27,$/;"	e	enum:MessageType
MessageType_ButtonRequest	protob/messages.pb.h	/^  MessageType_ButtonRequest = 26,$/;"	e	enum:MessageType
MessageType_Cancel	protob/messages.pb.h	/^  MessageType_Cancel = 20,$/;"	e	enum:MessageType
MessageType_ChangePin	protob/messages.pb.h	/^  MessageType_ChangePin = 4,$/;"	e	enum:MessageType
MessageType_CipherKeyValue	protob/messages.pb.h	/^  MessageType_CipherKeyValue = 23,$/;"	e	enum:MessageType
MessageType_ClearSession	protob/messages.pb.h	/^  MessageType_ClearSession = 24,$/;"	e	enum:MessageType
MessageType_DebugLinkDecision	protob/messages.pb.h	/^  MessageType_DebugLinkDecision = 100,$/;"	e	enum:MessageType
MessageType_DebugLinkGetState	protob/messages.pb.h	/^  MessageType_DebugLinkGetState = 101,$/;"	e	enum:MessageType
MessageType_DebugLinkLog	protob/messages.pb.h	/^  MessageType_DebugLinkLog = 104$/;"	e	enum:MessageType
MessageType_DebugLinkState	protob/messages.pb.h	/^  MessageType_DebugLinkState = 102,$/;"	e	enum:MessageType
MessageType_DebugLinkStop	protob/messages.pb.h	/^  MessageType_DebugLinkStop = 103,$/;"	e	enum:MessageType
MessageType_DecryptMessage	protob/messages.pb.h	/^  MessageType_DecryptMessage = 49,$/;"	e	enum:MessageType
MessageType_EncryptMessage	protob/messages.pb.h	/^  MessageType_EncryptMessage = 48,$/;"	e	enum:MessageType
MessageType_Entropy	protob/messages.pb.h	/^  MessageType_Entropy = 10,$/;"	e	enum:MessageType
MessageType_EntropyAck	protob/messages.pb.h	/^  MessageType_EntropyAck = 36,$/;"	e	enum:MessageType
MessageType_EntropyRequest	protob/messages.pb.h	/^  MessageType_EntropyRequest = 35,$/;"	e	enum:MessageType
MessageType_EstimateTxSize	protob/messages.pb.h	/^  MessageType_EstimateTxSize = 43,$/;"	e	enum:MessageType
MessageType_Failure	protob/messages.pb.h	/^  MessageType_Failure = 3,$/;"	e	enum:MessageType
MessageType_Features	protob/messages.pb.h	/^  MessageType_Features = 17,$/;"	e	enum:MessageType
MessageType_FirmwareErase	protob/messages.pb.h	/^  MessageType_FirmwareErase = 6,$/;"	e	enum:MessageType
MessageType_FirmwareUpload	protob/messages.pb.h	/^  MessageType_FirmwareUpload = 7,$/;"	e	enum:MessageType
MessageType_GetAddress	protob/messages.pb.h	/^  MessageType_GetAddress = 29,$/;"	e	enum:MessageType
MessageType_GetEntropy	protob/messages.pb.h	/^  MessageType_GetEntropy = 9,$/;"	e	enum:MessageType
MessageType_GetPublicKey	protob/messages.pb.h	/^  MessageType_GetPublicKey = 11,$/;"	e	enum:MessageType
MessageType_Initialize	protob/messages.pb.h	/^  MessageType_Initialize = 0,$/;"	e	enum:MessageType
MessageType_IsValid	protob/messages.pb.cc	/^bool MessageType_IsValid(int value) {$/;"	f
MessageType_LoadDevice	protob/messages.pb.h	/^  MessageType_LoadDevice = 13,$/;"	e	enum:MessageType
MessageType_MAX	protob/messages.pb.h	/^const MessageType MessageType_MAX = MessageType_DebugLinkLog;$/;"	v
MessageType_MIN	protob/messages.pb.h	/^const MessageType MessageType_MIN = MessageType_Initialize;$/;"	v
MessageType_MessageSignature	protob/messages.pb.h	/^  MessageType_MessageSignature = 40,$/;"	e	enum:MessageType
MessageType_Name	protob/messages.pb.h	/^inline const ::std::string& MessageType_Name(MessageType value) {$/;"	f
MessageType_Parse	protob/messages.pb.h	/^inline bool MessageType_Parse($/;"	f
MessageType_PassphraseAck	protob/messages.pb.h	/^  MessageType_PassphraseAck = 42,$/;"	e	enum:MessageType
MessageType_PassphraseRequest	protob/messages.pb.h	/^  MessageType_PassphraseRequest = 41,$/;"	e	enum:MessageType
MessageType_PinMatrixAck	protob/messages.pb.h	/^  MessageType_PinMatrixAck = 19,$/;"	e	enum:MessageType
MessageType_PinMatrixRequest	protob/messages.pb.h	/^  MessageType_PinMatrixRequest = 18,$/;"	e	enum:MessageType
MessageType_Ping	protob/messages.pb.h	/^  MessageType_Ping = 1,$/;"	e	enum:MessageType
MessageType_PublicKey	protob/messages.pb.h	/^  MessageType_PublicKey = 12,$/;"	e	enum:MessageType
MessageType_RecoveryDevice	protob/messages.pb.h	/^  MessageType_RecoveryDevice = 45,$/;"	e	enum:MessageType
MessageType_ResetDevice	protob/messages.pb.h	/^  MessageType_ResetDevice = 14,$/;"	e	enum:MessageType
MessageType_SignMessage	protob/messages.pb.h	/^  MessageType_SignMessage = 38,$/;"	e	enum:MessageType
MessageType_SignTx	protob/messages.pb.h	/^  MessageType_SignTx = 15,$/;"	e	enum:MessageType
MessageType_SimpleSignTx	protob/messages.pb.h	/^  MessageType_SimpleSignTx = 16,$/;"	e	enum:MessageType
MessageType_Success	protob/messages.pb.h	/^  MessageType_Success = 2,$/;"	e	enum:MessageType
MessageType_TestScreen	protob/messages.pb.h	/^  MessageType_TestScreen = 50,$/;"	e	enum:MessageType
MessageType_TxAck	protob/messages.pb.h	/^  MessageType_TxAck = 22,$/;"	e	enum:MessageType
MessageType_TxRequest	protob/messages.pb.h	/^  MessageType_TxRequest = 21,$/;"	e	enum:MessageType
MessageType_TxSize	protob/messages.pb.h	/^  MessageType_TxSize = 44,$/;"	e	enum:MessageType
MessageType_VerifyMessage	protob/messages.pb.h	/^  MessageType_VerifyMessage = 39,$/;"	e	enum:MessageType
MessageType_WipeDevice	protob/messages.pb.h	/^  MessageType_WipeDevice = 5,$/;"	e	enum:MessageType
MessageType_WordAck	protob/messages.pb.h	/^  MessageType_WordAck = 47,$/;"	e	enum:MessageType
MessageType_WordRequest	protob/messages.pb.h	/^  MessageType_WordRequest = 46,$/;"	e	enum:MessageType
MessageType_descriptor	protob/messages.pb.cc	/^const ::google::protobuf::EnumDescriptor* MessageType_descriptor() {$/;"	f
MessageType_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::EnumDescriptor* MessageType_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
Microsecond	easylogging++.h	/^    Microsecond = 0, Millisecond = 1, Second = 2, Minute = 3, Hour = 4, Day = 5$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit
Millisecond	easylogging++.h	/^    Microsecond = 0, Millisecond = 1, Second = 2, Minute = 3, Hour = 4, Day = 5$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit
MillisecondsWidth	easylogging++.h	/^    MillisecondsWidth = 32,$/;"	m	class:el::Level::ConfigurationType
MillisecondsWidth	easylogging++.h	/^    MillisecondsWidth(void) { init(base::consts::kDefaultMillisecondsWidth); }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::MillisecondsWidth
MillisecondsWidth	easylogging++.h	/^    explicit MillisecondsWidth(int width) { init(width); }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::MillisecondsWidth
MillisecondsWidth	easylogging++.h	/^class MillisecondsWidth {$/;"	c	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit
Minute	easylogging++.h	/^    Microsecond = 0, Millisecond = 1, Second = 2, Minute = 3, Hour = 4, Day = 5$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit
MultiLoggerSupport	easylogging++.h	/^    MultiLoggerSupport = 128,$/;"	m	class:el::Level::ConfigurationType::LoggingFlag
MultisigRedeemScriptType	protob/types.pb.cc	/^MultisigRedeemScriptType::MultisigRedeemScriptType()$/;"	f	class:MultisigRedeemScriptType
MultisigRedeemScriptType	protob/types.pb.cc	/^MultisigRedeemScriptType::MultisigRedeemScriptType(const MultisigRedeemScriptType& from)$/;"	f	class:MultisigRedeemScriptType
MultisigRedeemScriptType	protob/types.pb.h	/^class MultisigRedeemScriptType : public ::google::protobuf::Message {$/;"	c
MultisigRedeemScriptType_descriptor_	protob/types.pb.cc	/^const ::google::protobuf::Descriptor* MultisigRedeemScriptType_descriptor_ = NULL;$/;"	m	namespace:__anon3	file:
MultisigRedeemScriptType_reflection_	protob/types.pb.cc	/^  MultisigRedeemScriptType_reflection_ = NULL;$/;"	m	namespace:__anon3	file:
Mutex	easylogging++.h	/^    Mutex(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::threading::internal::Mutex
Mutex	easylogging++.h	/^class Mutex {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::threading::internal
Mutex	easylogging++.h	/^typedef base::threading::internal::Mutex Mutex;$/;"	t	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::threading
NAME	Makefile	/^NAME  = firmware$/;"	m
New	protob/config.pb.cc	/^Configuration* Configuration::New() const {$/;"	f	class:Configuration
New	protob/config.pb.cc	/^DeviceDescriptor* DeviceDescriptor::New() const {$/;"	f	class:DeviceDescriptor
New	protob/messages.pb.cc	/^Address* Address::New() const {$/;"	f	class:Address
New	protob/messages.pb.cc	/^ApplySettings* ApplySettings::New() const {$/;"	f	class:ApplySettings
New	protob/messages.pb.cc	/^ButtonAck* ButtonAck::New() const {$/;"	f	class:ButtonAck
New	protob/messages.pb.cc	/^ButtonRequest* ButtonRequest::New() const {$/;"	f	class:ButtonRequest
New	protob/messages.pb.cc	/^Cancel* Cancel::New() const {$/;"	f	class:Cancel
New	protob/messages.pb.cc	/^ChangePin* ChangePin::New() const {$/;"	f	class:ChangePin
New	protob/messages.pb.cc	/^CipherKeyValue* CipherKeyValue::New() const {$/;"	f	class:CipherKeyValue
New	protob/messages.pb.cc	/^ClearSession* ClearSession::New() const {$/;"	f	class:ClearSession
New	protob/messages.pb.cc	/^DebugLinkDecision* DebugLinkDecision::New() const {$/;"	f	class:DebugLinkDecision
New	protob/messages.pb.cc	/^DebugLinkGetState* DebugLinkGetState::New() const {$/;"	f	class:DebugLinkGetState
New	protob/messages.pb.cc	/^DebugLinkLog* DebugLinkLog::New() const {$/;"	f	class:DebugLinkLog
New	protob/messages.pb.cc	/^DebugLinkState* DebugLinkState::New() const {$/;"	f	class:DebugLinkState
New	protob/messages.pb.cc	/^DebugLinkStop* DebugLinkStop::New() const {$/;"	f	class:DebugLinkStop
New	protob/messages.pb.cc	/^DecryptMessage* DecryptMessage::New() const {$/;"	f	class:DecryptMessage
New	protob/messages.pb.cc	/^EncryptMessage* EncryptMessage::New() const {$/;"	f	class:EncryptMessage
New	protob/messages.pb.cc	/^Entropy* Entropy::New() const {$/;"	f	class:Entropy
New	protob/messages.pb.cc	/^EntropyAck* EntropyAck::New() const {$/;"	f	class:EntropyAck
New	protob/messages.pb.cc	/^EntropyRequest* EntropyRequest::New() const {$/;"	f	class:EntropyRequest
New	protob/messages.pb.cc	/^EstimateTxSize* EstimateTxSize::New() const {$/;"	f	class:EstimateTxSize
New	protob/messages.pb.cc	/^Failure* Failure::New() const {$/;"	f	class:Failure
New	protob/messages.pb.cc	/^Features* Features::New() const {$/;"	f	class:Features
New	protob/messages.pb.cc	/^FirmwareErase* FirmwareErase::New() const {$/;"	f	class:FirmwareErase
New	protob/messages.pb.cc	/^FirmwareUpload* FirmwareUpload::New() const {$/;"	f	class:FirmwareUpload
New	protob/messages.pb.cc	/^GetAddress* GetAddress::New() const {$/;"	f	class:GetAddress
New	protob/messages.pb.cc	/^GetEntropy* GetEntropy::New() const {$/;"	f	class:GetEntropy
New	protob/messages.pb.cc	/^GetPublicKey* GetPublicKey::New() const {$/;"	f	class:GetPublicKey
New	protob/messages.pb.cc	/^Initialize* Initialize::New() const {$/;"	f	class:Initialize
New	protob/messages.pb.cc	/^LoadDevice* LoadDevice::New() const {$/;"	f	class:LoadDevice
New	protob/messages.pb.cc	/^MessageSignature* MessageSignature::New() const {$/;"	f	class:MessageSignature
New	protob/messages.pb.cc	/^PassphraseAck* PassphraseAck::New() const {$/;"	f	class:PassphraseAck
New	protob/messages.pb.cc	/^PassphraseRequest* PassphraseRequest::New() const {$/;"	f	class:PassphraseRequest
New	protob/messages.pb.cc	/^PinMatrixAck* PinMatrixAck::New() const {$/;"	f	class:PinMatrixAck
New	protob/messages.pb.cc	/^PinMatrixRequest* PinMatrixRequest::New() const {$/;"	f	class:PinMatrixRequest
New	protob/messages.pb.cc	/^Ping* Ping::New() const {$/;"	f	class:Ping
New	protob/messages.pb.cc	/^PublicKey* PublicKey::New() const {$/;"	f	class:PublicKey
New	protob/messages.pb.cc	/^RecoveryDevice* RecoveryDevice::New() const {$/;"	f	class:RecoveryDevice
New	protob/messages.pb.cc	/^ResetDevice* ResetDevice::New() const {$/;"	f	class:ResetDevice
New	protob/messages.pb.cc	/^SignMessage* SignMessage::New() const {$/;"	f	class:SignMessage
New	protob/messages.pb.cc	/^SignTx* SignTx::New() const {$/;"	f	class:SignTx
New	protob/messages.pb.cc	/^SimpleSignTx* SimpleSignTx::New() const {$/;"	f	class:SimpleSignTx
New	protob/messages.pb.cc	/^Success* Success::New() const {$/;"	f	class:Success
New	protob/messages.pb.cc	/^TestScreen* TestScreen::New() const {$/;"	f	class:TestScreen
New	protob/messages.pb.cc	/^TxAck* TxAck::New() const {$/;"	f	class:TxAck
New	protob/messages.pb.cc	/^TxRequest* TxRequest::New() const {$/;"	f	class:TxRequest
New	protob/messages.pb.cc	/^TxSize* TxSize::New() const {$/;"	f	class:TxSize
New	protob/messages.pb.cc	/^VerifyMessage* VerifyMessage::New() const {$/;"	f	class:VerifyMessage
New	protob/messages.pb.cc	/^WipeDevice* WipeDevice::New() const {$/;"	f	class:WipeDevice
New	protob/messages.pb.cc	/^WordAck* WordAck::New() const {$/;"	f	class:WordAck
New	protob/messages.pb.cc	/^WordRequest* WordRequest::New() const {$/;"	f	class:WordRequest
New	protob/storage.pb.cc	/^Storage* Storage::New() const {$/;"	f	class:Storage
New	protob/types.pb.cc	/^CoinType* CoinType::New() const {$/;"	f	class:CoinType
New	protob/types.pb.cc	/^HDNodeType* HDNodeType::New() const {$/;"	f	class:HDNodeType
New	protob/types.pb.cc	/^MultisigRedeemScriptType* MultisigRedeemScriptType::New() const {$/;"	f	class:MultisigRedeemScriptType
New	protob/types.pb.cc	/^TransactionType* TransactionType::New() const {$/;"	f	class:TransactionType
New	protob/types.pb.cc	/^TxInputType* TxInputType::New() const {$/;"	f	class:TxInputType
New	protob/types.pb.cc	/^TxOutputBinType* TxOutputBinType::New() const {$/;"	f	class:TxOutputBinType
New	protob/types.pb.cc	/^TxOutputType* TxOutputType::New() const {$/;"	f	class:TxOutputType
New	protob/types.pb.cc	/^TxRequestDetailsType* TxRequestDetailsType::New() const {$/;"	f	class:TxRequestDetailsType
New	protob/types.pb.cc	/^TxRequestSerializedType* TxRequestSerializedType::New() const {$/;"	f	class:TxRequestSerializedType
NewLineForContainer	easylogging++.h	/^    NewLineForContainer = 1,$/;"	m	class:el::Level::ConfigurationType::LoggingFlag
NoCopy	easylogging++.h	/^    NoCopy(void) {}$/;"	f	class:el::base::NoCopy
NoCopy	easylogging++.h	/^class NoCopy {$/;"	c	namespace:el::base
None	easylogging++.h	/^    None = 1, NormalLog = 2, SysLog = 4$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::DispatchAction
NormalLog	easylogging++.h	/^    None = 1, NormalLog = 2, SysLog = 4$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::DispatchAction
Not	easylogging++.h	/^static inline base::type::EnumType Not(Enum e, base::type::EnumType flag) {$/;"	f	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::bitwise
NullWriter	easylogging++.h	/^    NullWriter(void) {}$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::NullWriter
NullWriter	easylogging++.h	/^class NullWriter : base::NoCopy {$/;"	c	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder
OS	easylogging++.h	/^class OS : base::StaticClass {$/;"	c	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File
OStreamMani	easylogging++.h	/^    inline MessageBuilder& operator<<(std::ostream& (*OStreamMani)(std::ostream&)) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::MessageBuilder
Or	easylogging++.h	/^static inline base::type::EnumType Or(Enum e, base::type::EnumType flag) {$/;"	f	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::bitwise
OutputScriptType	protob/types.pb.h	/^enum OutputScriptType {$/;"	g
OutputScriptType_ARRAYSIZE	protob/types.pb.h	/^const int OutputScriptType_ARRAYSIZE = OutputScriptType_MAX + 1;$/;"	v
OutputScriptType_IsValid	protob/types.pb.cc	/^bool OutputScriptType_IsValid(int value) {$/;"	f
OutputScriptType_MAX	protob/types.pb.h	/^const OutputScriptType OutputScriptType_MAX = PAYTOSCRIPTHASH;$/;"	v
OutputScriptType_MIN	protob/types.pb.h	/^const OutputScriptType OutputScriptType_MIN = PAYTOADDRESS;$/;"	v
OutputScriptType_Name	protob/types.pb.h	/^inline const ::std::string& OutputScriptType_Name(OutputScriptType value) {$/;"	f
OutputScriptType_Parse	protob/types.pb.h	/^inline bool OutputScriptType_Parse($/;"	f
OutputScriptType_descriptor	protob/types.pb.cc	/^const ::google::protobuf::EnumDescriptor* OutputScriptType_descriptor() {$/;"	f
OutputScriptType_descriptor_	protob/types.pb.cc	/^const ::google::protobuf::EnumDescriptor* OutputScriptType_descriptor_ = NULL;$/;"	m	namespace:__anon3	file:
PAYTOADDRESS	protob/types.pb.h	/^  PAYTOADDRESS = 0,$/;"	e	enum:OutputScriptType
PAYTOSCRIPTHASH	protob/types.pb.h	/^  PAYTOSCRIPTHASH = 1$/;"	e	enum:OutputScriptType
PCHECK	easylogging++.h	6207;"	d
PCHECK	easylogging++.h	6220;"	d
PERFORMANCE_CHECKPOINT	easylogging++.h	5712;"	d
PERFORMANCE_CHECKPOINT	easylogging++.h	5714;"	d
PERFORMANCE_CHECKPOINT_WITH_ID	easylogging++.h	5713;"	d
PERFORMANCE_CHECKPOINT_WITH_ID	easylogging++.h	5715;"	d
PErrorWriter	easylogging++.h	/^    PErrorWriter(Level level, const char* file, unsigned long int line,  \/\/ NOLINT$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::Writer::PErrorWriter
PErrorWriter	easylogging++.h	/^class PErrorWriter : public base::Writer {$/;"	c	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::Writer
PLOG	easylogging++.h	6051;"	d
PLOG	easylogging++.h	6065;"	d
PLOG_IF	easylogging++.h	6052;"	d
PLOG_IF	easylogging++.h	6066;"	d
PROTOBUF_config_2eproto__INCLUDED	protob/config.pb.h	5;"	d
PROTOBUF_messages_2eproto__INCLUDED	protob/messages.pb.h	5;"	d
PROTOBUF_storage_2eproto__INCLUDED	protob/storage.pb.h	5;"	d
PROTOBUF_types_2eproto__INCLUDED	protob/types.pb.h	5;"	d
Parser	easylogging++.h	/^    class Parser : base::StaticClass {$/;"	c	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations
PassphraseAck	protob/messages.pb.cc	/^PassphraseAck::PassphraseAck()$/;"	f	class:PassphraseAck
PassphraseAck	protob/messages.pb.cc	/^PassphraseAck::PassphraseAck(const PassphraseAck& from)$/;"	f	class:PassphraseAck
PassphraseAck	protob/messages.pb.h	/^class PassphraseAck : public ::google::protobuf::Message {$/;"	c
PassphraseAck_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* PassphraseAck_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
PassphraseAck_reflection_	protob/messages.pb.cc	/^  PassphraseAck_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
PassphraseRequest	protob/messages.pb.cc	/^PassphraseRequest::PassphraseRequest()$/;"	f	class:PassphraseRequest
PassphraseRequest	protob/messages.pb.cc	/^PassphraseRequest::PassphraseRequest(const PassphraseRequest& from)$/;"	f	class:PassphraseRequest
PassphraseRequest	protob/messages.pb.h	/^class PassphraseRequest : public ::google::protobuf::Message {$/;"	c
PassphraseRequest_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* PassphraseRequest_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
PassphraseRequest_reflection_	protob/messages.pb.cc	/^  PassphraseRequest_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
PerformanceTracker	easylogging++.h	/^    PerformanceTracker(const std::string& blockName,$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::PerformanceTracker
PerformanceTracker	easylogging++.h	/^class PerformanceTracker : public base::threading::ThreadSafe, public Loggable {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base
PerformanceTracking	easylogging++.h	/^    PerformanceTracking = 64,$/;"	m	class:el::Level::ConfigurationType
PerformanceTrackingCallback	easylogging++.h	/^class PerformanceTrackingCallback : public Callback<PerformanceTrackingData> {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base
PerformanceTrackingCallbackPtr	easylogging++.h	/^typedef std::shared_ptr<PerformanceTrackingCallback> PerformanceTrackingCallbackPtr;$/;"	t	namespace:el::base::type
PerformanceTrackingData	easylogging++.h	/^    explicit PerformanceTrackingData(DataType dataType) : m_performanceTracker(nullptr), m_dataType(dataType) {}$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::DataType
PerformanceTrackingData	easylogging++.h	/^class PerformanceTrackingData {$/;"	c	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder
PinMatrixAck	protob/messages.pb.cc	/^PinMatrixAck::PinMatrixAck()$/;"	f	class:PinMatrixAck
PinMatrixAck	protob/messages.pb.cc	/^PinMatrixAck::PinMatrixAck(const PinMatrixAck& from)$/;"	f	class:PinMatrixAck
PinMatrixAck	protob/messages.pb.h	/^class PinMatrixAck : public ::google::protobuf::Message {$/;"	c
PinMatrixAck_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* PinMatrixAck_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
PinMatrixAck_reflection_	protob/messages.pb.cc	/^  PinMatrixAck_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
PinMatrixRequest	protob/messages.pb.cc	/^PinMatrixRequest::PinMatrixRequest()$/;"	f	class:PinMatrixRequest
PinMatrixRequest	protob/messages.pb.cc	/^PinMatrixRequest::PinMatrixRequest(const PinMatrixRequest& from)$/;"	f	class:PinMatrixRequest
PinMatrixRequest	protob/messages.pb.h	/^class PinMatrixRequest : public ::google::protobuf::Message {$/;"	c
PinMatrixRequestType	protob/types.pb.h	/^enum PinMatrixRequestType {$/;"	g
PinMatrixRequestType_ARRAYSIZE	protob/types.pb.h	/^const int PinMatrixRequestType_ARRAYSIZE = PinMatrixRequestType_MAX + 1;$/;"	v
PinMatrixRequestType_Current	protob/types.pb.h	/^  PinMatrixRequestType_Current = 1,$/;"	e	enum:PinMatrixRequestType
PinMatrixRequestType_IsValid	protob/types.pb.cc	/^bool PinMatrixRequestType_IsValid(int value) {$/;"	f
PinMatrixRequestType_MAX	protob/types.pb.h	/^const PinMatrixRequestType PinMatrixRequestType_MAX = PinMatrixRequestType_NewSecond;$/;"	v
PinMatrixRequestType_MIN	protob/types.pb.h	/^const PinMatrixRequestType PinMatrixRequestType_MIN = PinMatrixRequestType_Current;$/;"	v
PinMatrixRequestType_Name	protob/types.pb.h	/^inline const ::std::string& PinMatrixRequestType_Name(PinMatrixRequestType value) {$/;"	f
PinMatrixRequestType_NewFirst	protob/types.pb.h	/^  PinMatrixRequestType_NewFirst = 2,$/;"	e	enum:PinMatrixRequestType
PinMatrixRequestType_NewSecond	protob/types.pb.h	/^  PinMatrixRequestType_NewSecond = 3$/;"	e	enum:PinMatrixRequestType
PinMatrixRequestType_Parse	protob/types.pb.h	/^inline bool PinMatrixRequestType_Parse($/;"	f
PinMatrixRequestType_descriptor	protob/types.pb.cc	/^const ::google::protobuf::EnumDescriptor* PinMatrixRequestType_descriptor() {$/;"	f
PinMatrixRequestType_descriptor_	protob/types.pb.cc	/^const ::google::protobuf::EnumDescriptor* PinMatrixRequestType_descriptor_ = NULL;$/;"	m	namespace:__anon3	file:
PinMatrixRequest_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* PinMatrixRequest_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
PinMatrixRequest_reflection_	protob/messages.pb.cc	/^  PinMatrixRequest_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
Ping	protob/messages.pb.cc	/^Ping::Ping()$/;"	f	class:Ping
Ping	protob/messages.pb.cc	/^Ping::Ping(const Ping& from)$/;"	f	class:Ping
Ping	protob/messages.pb.h	/^class Ping : public ::google::protobuf::Message {$/;"	c
Ping_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* Ping_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
Ping_reflection_	protob/messages.pb.cc	/^  Ping_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
PreRollOutCallback	easylogging++.h	/^typedef std::function<void(const char*, std::size_t)> PreRollOutCallback;$/;"	t	class:el::Level::ConfigurationType::LoggingFlag
Predicate	easylogging++.h	/^        Predicate(Level level, ConfigurationType configurationType) :$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configuration::Predicate
Predicate	easylogging++.h	/^        Predicate(const char* filename, unsigned long int lineNumber)  \/\/ NOLINT$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::HitCounter::Predicate
Predicate	easylogging++.h	/^    class Predicate {$/;"	c	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configuration
Predicate	easylogging++.h	/^    class Predicate {$/;"	c	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::HitCounter
PublicKey	protob/messages.pb.cc	/^PublicKey::PublicKey()$/;"	f	class:PublicKey
PublicKey	protob/messages.pb.cc	/^PublicKey::PublicKey(const PublicKey& from)$/;"	f	class:PublicKey
PublicKey	protob/messages.pb.h	/^class PublicKey : public ::google::protobuf::Message {$/;"	c
PublicKey_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* PublicKey_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
PublicKey_reflection_	protob/messages.pb.cc	/^  PublicKey_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
RecoveryDevice	protob/messages.pb.cc	/^RecoveryDevice::RecoveryDevice()$/;"	f	class:RecoveryDevice
RecoveryDevice	protob/messages.pb.cc	/^RecoveryDevice::RecoveryDevice(const RecoveryDevice& from)$/;"	f	class:RecoveryDevice
RecoveryDevice	protob/messages.pb.h	/^class RecoveryDevice : public ::google::protobuf::Message {$/;"	c
RecoveryDevice_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* RecoveryDevice_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
RecoveryDevice_reflection_	protob/messages.pb.cc	/^  RecoveryDevice_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
RegisteredHitCounters	easylogging++.h	/^class RegisteredHitCounters : public base::utils::RegistryWithPred<base::HitCounter, base::HitCounter::Predicate> {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base
RegisteredLoggers	easylogging++.h	/^    explicit RegisteredLoggers(const LogBuilderPtr& defaultLogBuilder) :$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::RegisteredLoggers
RegisteredLoggers	easylogging++.h	/^class RegisteredLoggers : public base::utils::Registry<Logger, std::string> {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base
Registry	easylogging++.h	/^    Registry(const Registry& sr) : AbstractRegistry<T_Ptr, std::vector<T_Ptr*>>() {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::Registry
Registry	easylogging++.h	/^    Registry(void) {}$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::Registry
Registry	easylogging++.h	/^class Registry : public AbstractRegistry<T_Ptr, std::map<T_Key, T_Ptr*>> {$/;"	c	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime
RegistryWithPred	easylogging++.h	/^    RegistryWithPred(const RegistryWithPred& sr) : AbstractRegistry<T_Ptr, std::vector<T_Ptr*>>() {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::RegistryWithPred
RegistryWithPred	easylogging++.h	/^    RegistryWithPred(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::RegistryWithPred
RegistryWithPred	easylogging++.h	/^class RegistryWithPred : public AbstractRegistry<T_Ptr, std::vector<T_Ptr*>> {$/;"	c	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime
RequestType	protob/types.pb.h	/^enum RequestType {$/;"	g
RequestType_ARRAYSIZE	protob/types.pb.h	/^const int RequestType_ARRAYSIZE = RequestType_MAX + 1;$/;"	v
RequestType_IsValid	protob/types.pb.cc	/^bool RequestType_IsValid(int value) {$/;"	f
RequestType_MAX	protob/types.pb.h	/^const RequestType RequestType_MAX = TXFINISHED;$/;"	v
RequestType_MIN	protob/types.pb.h	/^const RequestType RequestType_MIN = TXINPUT;$/;"	v
RequestType_Name	protob/types.pb.h	/^inline const ::std::string& RequestType_Name(RequestType value) {$/;"	f
RequestType_Parse	protob/types.pb.h	/^inline bool RequestType_Parse($/;"	f
RequestType_descriptor	protob/types.pb.cc	/^const ::google::protobuf::EnumDescriptor* RequestType_descriptor() {$/;"	f
RequestType_descriptor_	protob/types.pb.cc	/^const ::google::protobuf::EnumDescriptor* RequestType_descriptor_ = NULL;$/;"	m	namespace:__anon3	file:
ResetDevice	protob/messages.pb.cc	/^ResetDevice::ResetDevice()$/;"	f	class:ResetDevice
ResetDevice	protob/messages.pb.cc	/^ResetDevice::ResetDevice(const ResetDevice& from)$/;"	f	class:ResetDevice
ResetDevice	protob/messages.pb.h	/^class ResetDevice : public ::google::protobuf::Message {$/;"	c
ResetDevice_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* ResetDevice_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
ResetDevice_reflection_	protob/messages.pb.cc	/^  ResetDevice_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
SPENDADDRESS	protob/types.pb.h	/^  SPENDADDRESS = 0,$/;"	e	enum:InputScriptType
SPENDMULTISIG	protob/types.pb.h	/^  SPENDMULTISIG = 1$/;"	e	enum:InputScriptType
STRCAT	easylogging++.h	188;"	d
STRCAT	easylogging++.h	193;"	d
STRCAT	easylogging++.h	198;"	d
STRCPY	easylogging++.h	189;"	d
STRCPY	easylogging++.h	194;"	d
STRCPY	easylogging++.h	199;"	d
STRERROR	easylogging++.h	187;"	d
STRERROR	easylogging++.h	192;"	d
STRERROR	easylogging++.h	197;"	d
STRTOK	easylogging++.h	186;"	d
STRTOK	easylogging++.h	191;"	d
STRTOK	easylogging++.h	196;"	d
SYSLOG	easylogging++.h	6075;"	d
SYSLOG	easylogging++.h	6098;"	d
SYSLOG_AFTER_N	easylogging++.h	6078;"	d
SYSLOG_AFTER_N	easylogging++.h	6101;"	d
SYSLOG_EVERY_N	easylogging++.h	6077;"	d
SYSLOG_EVERY_N	easylogging++.h	6100;"	d
SYSLOG_IF	easylogging++.h	6076;"	d
SYSLOG_IF	easylogging++.h	6099;"	d
SYSLOG_N_TIMES	easylogging++.h	6079;"	d
SYSLOG_N_TIMES	easylogging++.h	6102;"	d
ScopedAddFlag	easylogging++.h	/^        ScopedAddFlag(LoggingFlag flag) : m_flag(flag) { Loggers::addFlag(m_flag); }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Loggers::ScopedAddFlag
ScopedAddFlag	easylogging++.h	/^    class ScopedAddFlag {$/;"	c	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Loggers
ScopedLock	easylogging++.h	/^    explicit ScopedLock(M& mutex) {  \/\/ NOLINT$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::threading::internal::ScopedLock
ScopedLock	easylogging++.h	/^class ScopedLock : base::NoCopy {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::threading::internal
ScopedLock	easylogging++.h	/^typedef base::threading::internal::ScopedLock<base::threading::Mutex> ScopedLock;$/;"	t	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::threading
ScopedRemoveFlag	easylogging++.h	/^        ScopedRemoveFlag(LoggingFlag flag) : m_flag(flag) { Loggers::removeFlag(m_flag); }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Loggers::ScopedRemoveFlag
ScopedRemoveFlag	easylogging++.h	/^    class ScopedRemoveFlag {$/;"	c	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Loggers
Second	easylogging++.h	/^    Microsecond = 0, Millisecond = 1, Second = 2, Minute = 3, Hour = 4, Day = 5$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit
SerializeWithCachedSizes	protob/config.pb.cc	/^void Configuration::SerializeWithCachedSizes($/;"	f	class:Configuration
SerializeWithCachedSizes	protob/config.pb.cc	/^void DeviceDescriptor::SerializeWithCachedSizes($/;"	f	class:DeviceDescriptor
SerializeWithCachedSizes	protob/messages.pb.cc	/^void Address::SerializeWithCachedSizes($/;"	f	class:Address
SerializeWithCachedSizes	protob/messages.pb.cc	/^void ApplySettings::SerializeWithCachedSizes($/;"	f	class:ApplySettings
SerializeWithCachedSizes	protob/messages.pb.cc	/^void ButtonAck::SerializeWithCachedSizes($/;"	f	class:ButtonAck
SerializeWithCachedSizes	protob/messages.pb.cc	/^void ButtonRequest::SerializeWithCachedSizes($/;"	f	class:ButtonRequest
SerializeWithCachedSizes	protob/messages.pb.cc	/^void Cancel::SerializeWithCachedSizes($/;"	f	class:Cancel
SerializeWithCachedSizes	protob/messages.pb.cc	/^void ChangePin::SerializeWithCachedSizes($/;"	f	class:ChangePin
SerializeWithCachedSizes	protob/messages.pb.cc	/^void CipherKeyValue::SerializeWithCachedSizes($/;"	f	class:CipherKeyValue
SerializeWithCachedSizes	protob/messages.pb.cc	/^void ClearSession::SerializeWithCachedSizes($/;"	f	class:ClearSession
SerializeWithCachedSizes	protob/messages.pb.cc	/^void DebugLinkDecision::SerializeWithCachedSizes($/;"	f	class:DebugLinkDecision
SerializeWithCachedSizes	protob/messages.pb.cc	/^void DebugLinkGetState::SerializeWithCachedSizes($/;"	f	class:DebugLinkGetState
SerializeWithCachedSizes	protob/messages.pb.cc	/^void DebugLinkLog::SerializeWithCachedSizes($/;"	f	class:DebugLinkLog
SerializeWithCachedSizes	protob/messages.pb.cc	/^void DebugLinkState::SerializeWithCachedSizes($/;"	f	class:DebugLinkState
SerializeWithCachedSizes	protob/messages.pb.cc	/^void DebugLinkStop::SerializeWithCachedSizes($/;"	f	class:DebugLinkStop
SerializeWithCachedSizes	protob/messages.pb.cc	/^void DecryptMessage::SerializeWithCachedSizes($/;"	f	class:DecryptMessage
SerializeWithCachedSizes	protob/messages.pb.cc	/^void EncryptMessage::SerializeWithCachedSizes($/;"	f	class:EncryptMessage
SerializeWithCachedSizes	protob/messages.pb.cc	/^void Entropy::SerializeWithCachedSizes($/;"	f	class:Entropy
SerializeWithCachedSizes	protob/messages.pb.cc	/^void EntropyAck::SerializeWithCachedSizes($/;"	f	class:EntropyAck
SerializeWithCachedSizes	protob/messages.pb.cc	/^void EntropyRequest::SerializeWithCachedSizes($/;"	f	class:EntropyRequest
SerializeWithCachedSizes	protob/messages.pb.cc	/^void EstimateTxSize::SerializeWithCachedSizes($/;"	f	class:EstimateTxSize
SerializeWithCachedSizes	protob/messages.pb.cc	/^void Failure::SerializeWithCachedSizes($/;"	f	class:Failure
SerializeWithCachedSizes	protob/messages.pb.cc	/^void Features::SerializeWithCachedSizes($/;"	f	class:Features
SerializeWithCachedSizes	protob/messages.pb.cc	/^void FirmwareErase::SerializeWithCachedSizes($/;"	f	class:FirmwareErase
SerializeWithCachedSizes	protob/messages.pb.cc	/^void FirmwareUpload::SerializeWithCachedSizes($/;"	f	class:FirmwareUpload
SerializeWithCachedSizes	protob/messages.pb.cc	/^void GetAddress::SerializeWithCachedSizes($/;"	f	class:GetAddress
SerializeWithCachedSizes	protob/messages.pb.cc	/^void GetEntropy::SerializeWithCachedSizes($/;"	f	class:GetEntropy
SerializeWithCachedSizes	protob/messages.pb.cc	/^void GetPublicKey::SerializeWithCachedSizes($/;"	f	class:GetPublicKey
SerializeWithCachedSizes	protob/messages.pb.cc	/^void Initialize::SerializeWithCachedSizes($/;"	f	class:Initialize
SerializeWithCachedSizes	protob/messages.pb.cc	/^void LoadDevice::SerializeWithCachedSizes($/;"	f	class:LoadDevice
SerializeWithCachedSizes	protob/messages.pb.cc	/^void MessageSignature::SerializeWithCachedSizes($/;"	f	class:MessageSignature
SerializeWithCachedSizes	protob/messages.pb.cc	/^void PassphraseAck::SerializeWithCachedSizes($/;"	f	class:PassphraseAck
SerializeWithCachedSizes	protob/messages.pb.cc	/^void PassphraseRequest::SerializeWithCachedSizes($/;"	f	class:PassphraseRequest
SerializeWithCachedSizes	protob/messages.pb.cc	/^void PinMatrixAck::SerializeWithCachedSizes($/;"	f	class:PinMatrixAck
SerializeWithCachedSizes	protob/messages.pb.cc	/^void PinMatrixRequest::SerializeWithCachedSizes($/;"	f	class:PinMatrixRequest
SerializeWithCachedSizes	protob/messages.pb.cc	/^void Ping::SerializeWithCachedSizes($/;"	f	class:Ping
SerializeWithCachedSizes	protob/messages.pb.cc	/^void PublicKey::SerializeWithCachedSizes($/;"	f	class:PublicKey
SerializeWithCachedSizes	protob/messages.pb.cc	/^void RecoveryDevice::SerializeWithCachedSizes($/;"	f	class:RecoveryDevice
SerializeWithCachedSizes	protob/messages.pb.cc	/^void ResetDevice::SerializeWithCachedSizes($/;"	f	class:ResetDevice
SerializeWithCachedSizes	protob/messages.pb.cc	/^void SignMessage::SerializeWithCachedSizes($/;"	f	class:SignMessage
SerializeWithCachedSizes	protob/messages.pb.cc	/^void SignTx::SerializeWithCachedSizes($/;"	f	class:SignTx
SerializeWithCachedSizes	protob/messages.pb.cc	/^void SimpleSignTx::SerializeWithCachedSizes($/;"	f	class:SimpleSignTx
SerializeWithCachedSizes	protob/messages.pb.cc	/^void Success::SerializeWithCachedSizes($/;"	f	class:Success
SerializeWithCachedSizes	protob/messages.pb.cc	/^void TestScreen::SerializeWithCachedSizes($/;"	f	class:TestScreen
SerializeWithCachedSizes	protob/messages.pb.cc	/^void TxAck::SerializeWithCachedSizes($/;"	f	class:TxAck
SerializeWithCachedSizes	protob/messages.pb.cc	/^void TxRequest::SerializeWithCachedSizes($/;"	f	class:TxRequest
SerializeWithCachedSizes	protob/messages.pb.cc	/^void TxSize::SerializeWithCachedSizes($/;"	f	class:TxSize
SerializeWithCachedSizes	protob/messages.pb.cc	/^void VerifyMessage::SerializeWithCachedSizes($/;"	f	class:VerifyMessage
SerializeWithCachedSizes	protob/messages.pb.cc	/^void WipeDevice::SerializeWithCachedSizes($/;"	f	class:WipeDevice
SerializeWithCachedSizes	protob/messages.pb.cc	/^void WordAck::SerializeWithCachedSizes($/;"	f	class:WordAck
SerializeWithCachedSizes	protob/messages.pb.cc	/^void WordRequest::SerializeWithCachedSizes($/;"	f	class:WordRequest
SerializeWithCachedSizes	protob/storage.pb.cc	/^void Storage::SerializeWithCachedSizes($/;"	f	class:Storage
SerializeWithCachedSizes	protob/types.pb.cc	/^void CoinType::SerializeWithCachedSizes($/;"	f	class:CoinType
SerializeWithCachedSizes	protob/types.pb.cc	/^void HDNodeType::SerializeWithCachedSizes($/;"	f	class:HDNodeType
SerializeWithCachedSizes	protob/types.pb.cc	/^void MultisigRedeemScriptType::SerializeWithCachedSizes($/;"	f	class:MultisigRedeemScriptType
SerializeWithCachedSizes	protob/types.pb.cc	/^void TransactionType::SerializeWithCachedSizes($/;"	f	class:TransactionType
SerializeWithCachedSizes	protob/types.pb.cc	/^void TxInputType::SerializeWithCachedSizes($/;"	f	class:TxInputType
SerializeWithCachedSizes	protob/types.pb.cc	/^void TxOutputBinType::SerializeWithCachedSizes($/;"	f	class:TxOutputBinType
SerializeWithCachedSizes	protob/types.pb.cc	/^void TxOutputType::SerializeWithCachedSizes($/;"	f	class:TxOutputType
SerializeWithCachedSizes	protob/types.pb.cc	/^void TxRequestDetailsType::SerializeWithCachedSizes($/;"	f	class:TxRequestDetailsType
SerializeWithCachedSizes	protob/types.pb.cc	/^void TxRequestSerializedType::SerializeWithCachedSizes($/;"	f	class:TxRequestSerializedType
SerializeWithCachedSizesToArray	protob/config.pb.cc	/^::google::protobuf::uint8* Configuration::SerializeWithCachedSizesToArray($/;"	f	class:Configuration
SerializeWithCachedSizesToArray	protob/config.pb.cc	/^::google::protobuf::uint8* DeviceDescriptor::SerializeWithCachedSizesToArray($/;"	f	class:DeviceDescriptor
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* Address::SerializeWithCachedSizesToArray($/;"	f	class:Address
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* ApplySettings::SerializeWithCachedSizesToArray($/;"	f	class:ApplySettings
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* ButtonAck::SerializeWithCachedSizesToArray($/;"	f	class:ButtonAck
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* ButtonRequest::SerializeWithCachedSizesToArray($/;"	f	class:ButtonRequest
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* Cancel::SerializeWithCachedSizesToArray($/;"	f	class:Cancel
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* ChangePin::SerializeWithCachedSizesToArray($/;"	f	class:ChangePin
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* CipherKeyValue::SerializeWithCachedSizesToArray($/;"	f	class:CipherKeyValue
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* ClearSession::SerializeWithCachedSizesToArray($/;"	f	class:ClearSession
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* DebugLinkDecision::SerializeWithCachedSizesToArray($/;"	f	class:DebugLinkDecision
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* DebugLinkGetState::SerializeWithCachedSizesToArray($/;"	f	class:DebugLinkGetState
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* DebugLinkLog::SerializeWithCachedSizesToArray($/;"	f	class:DebugLinkLog
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* DebugLinkState::SerializeWithCachedSizesToArray($/;"	f	class:DebugLinkState
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* DebugLinkStop::SerializeWithCachedSizesToArray($/;"	f	class:DebugLinkStop
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* DecryptMessage::SerializeWithCachedSizesToArray($/;"	f	class:DecryptMessage
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* EncryptMessage::SerializeWithCachedSizesToArray($/;"	f	class:EncryptMessage
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* Entropy::SerializeWithCachedSizesToArray($/;"	f	class:Entropy
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* EntropyAck::SerializeWithCachedSizesToArray($/;"	f	class:EntropyAck
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* EntropyRequest::SerializeWithCachedSizesToArray($/;"	f	class:EntropyRequest
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* EstimateTxSize::SerializeWithCachedSizesToArray($/;"	f	class:EstimateTxSize
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* Failure::SerializeWithCachedSizesToArray($/;"	f	class:Failure
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* Features::SerializeWithCachedSizesToArray($/;"	f	class:Features
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* FirmwareErase::SerializeWithCachedSizesToArray($/;"	f	class:FirmwareErase
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* FirmwareUpload::SerializeWithCachedSizesToArray($/;"	f	class:FirmwareUpload
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* GetAddress::SerializeWithCachedSizesToArray($/;"	f	class:GetAddress
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* GetEntropy::SerializeWithCachedSizesToArray($/;"	f	class:GetEntropy
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* GetPublicKey::SerializeWithCachedSizesToArray($/;"	f	class:GetPublicKey
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* Initialize::SerializeWithCachedSizesToArray($/;"	f	class:Initialize
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* LoadDevice::SerializeWithCachedSizesToArray($/;"	f	class:LoadDevice
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* MessageSignature::SerializeWithCachedSizesToArray($/;"	f	class:MessageSignature
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* PassphraseAck::SerializeWithCachedSizesToArray($/;"	f	class:PassphraseAck
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* PassphraseRequest::SerializeWithCachedSizesToArray($/;"	f	class:PassphraseRequest
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* PinMatrixAck::SerializeWithCachedSizesToArray($/;"	f	class:PinMatrixAck
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* PinMatrixRequest::SerializeWithCachedSizesToArray($/;"	f	class:PinMatrixRequest
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* Ping::SerializeWithCachedSizesToArray($/;"	f	class:Ping
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* PublicKey::SerializeWithCachedSizesToArray($/;"	f	class:PublicKey
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* RecoveryDevice::SerializeWithCachedSizesToArray($/;"	f	class:RecoveryDevice
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* ResetDevice::SerializeWithCachedSizesToArray($/;"	f	class:ResetDevice
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* SignMessage::SerializeWithCachedSizesToArray($/;"	f	class:SignMessage
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* SignTx::SerializeWithCachedSizesToArray($/;"	f	class:SignTx
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* SimpleSignTx::SerializeWithCachedSizesToArray($/;"	f	class:SimpleSignTx
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* Success::SerializeWithCachedSizesToArray($/;"	f	class:Success
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* TestScreen::SerializeWithCachedSizesToArray($/;"	f	class:TestScreen
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* TxAck::SerializeWithCachedSizesToArray($/;"	f	class:TxAck
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* TxRequest::SerializeWithCachedSizesToArray($/;"	f	class:TxRequest
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* TxSize::SerializeWithCachedSizesToArray($/;"	f	class:TxSize
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* VerifyMessage::SerializeWithCachedSizesToArray($/;"	f	class:VerifyMessage
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* WipeDevice::SerializeWithCachedSizesToArray($/;"	f	class:WipeDevice
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* WordAck::SerializeWithCachedSizesToArray($/;"	f	class:WordAck
SerializeWithCachedSizesToArray	protob/messages.pb.cc	/^::google::protobuf::uint8* WordRequest::SerializeWithCachedSizesToArray($/;"	f	class:WordRequest
SerializeWithCachedSizesToArray	protob/storage.pb.cc	/^::google::protobuf::uint8* Storage::SerializeWithCachedSizesToArray($/;"	f	class:Storage
SerializeWithCachedSizesToArray	protob/types.pb.cc	/^::google::protobuf::uint8* CoinType::SerializeWithCachedSizesToArray($/;"	f	class:CoinType
SerializeWithCachedSizesToArray	protob/types.pb.cc	/^::google::protobuf::uint8* HDNodeType::SerializeWithCachedSizesToArray($/;"	f	class:HDNodeType
SerializeWithCachedSizesToArray	protob/types.pb.cc	/^::google::protobuf::uint8* MultisigRedeemScriptType::SerializeWithCachedSizesToArray($/;"	f	class:MultisigRedeemScriptType
SerializeWithCachedSizesToArray	protob/types.pb.cc	/^::google::protobuf::uint8* TransactionType::SerializeWithCachedSizesToArray($/;"	f	class:TransactionType
SerializeWithCachedSizesToArray	protob/types.pb.cc	/^::google::protobuf::uint8* TxInputType::SerializeWithCachedSizesToArray($/;"	f	class:TxInputType
SerializeWithCachedSizesToArray	protob/types.pb.cc	/^::google::protobuf::uint8* TxOutputBinType::SerializeWithCachedSizesToArray($/;"	f	class:TxOutputBinType
SerializeWithCachedSizesToArray	protob/types.pb.cc	/^::google::protobuf::uint8* TxOutputType::SerializeWithCachedSizesToArray($/;"	f	class:TxOutputType
SerializeWithCachedSizesToArray	protob/types.pb.cc	/^::google::protobuf::uint8* TxRequestDetailsType::SerializeWithCachedSizesToArray($/;"	f	class:TxRequestDetailsType
SerializeWithCachedSizesToArray	protob/types.pb.cc	/^::google::protobuf::uint8* TxRequestSerializedType::SerializeWithCachedSizesToArray($/;"	f	class:TxRequestSerializedType
SetCachedSize	protob/config.pb.cc	/^void Configuration::SetCachedSize(int size) const {$/;"	f	class:Configuration
SetCachedSize	protob/config.pb.cc	/^void DeviceDescriptor::SetCachedSize(int size) const {$/;"	f	class:DeviceDescriptor
SetCachedSize	protob/messages.pb.cc	/^void Address::SetCachedSize(int size) const {$/;"	f	class:Address
SetCachedSize	protob/messages.pb.cc	/^void ApplySettings::SetCachedSize(int size) const {$/;"	f	class:ApplySettings
SetCachedSize	protob/messages.pb.cc	/^void ButtonAck::SetCachedSize(int size) const {$/;"	f	class:ButtonAck
SetCachedSize	protob/messages.pb.cc	/^void ButtonRequest::SetCachedSize(int size) const {$/;"	f	class:ButtonRequest
SetCachedSize	protob/messages.pb.cc	/^void Cancel::SetCachedSize(int size) const {$/;"	f	class:Cancel
SetCachedSize	protob/messages.pb.cc	/^void ChangePin::SetCachedSize(int size) const {$/;"	f	class:ChangePin
SetCachedSize	protob/messages.pb.cc	/^void CipherKeyValue::SetCachedSize(int size) const {$/;"	f	class:CipherKeyValue
SetCachedSize	protob/messages.pb.cc	/^void ClearSession::SetCachedSize(int size) const {$/;"	f	class:ClearSession
SetCachedSize	protob/messages.pb.cc	/^void DebugLinkDecision::SetCachedSize(int size) const {$/;"	f	class:DebugLinkDecision
SetCachedSize	protob/messages.pb.cc	/^void DebugLinkGetState::SetCachedSize(int size) const {$/;"	f	class:DebugLinkGetState
SetCachedSize	protob/messages.pb.cc	/^void DebugLinkLog::SetCachedSize(int size) const {$/;"	f	class:DebugLinkLog
SetCachedSize	protob/messages.pb.cc	/^void DebugLinkState::SetCachedSize(int size) const {$/;"	f	class:DebugLinkState
SetCachedSize	protob/messages.pb.cc	/^void DebugLinkStop::SetCachedSize(int size) const {$/;"	f	class:DebugLinkStop
SetCachedSize	protob/messages.pb.cc	/^void DecryptMessage::SetCachedSize(int size) const {$/;"	f	class:DecryptMessage
SetCachedSize	protob/messages.pb.cc	/^void EncryptMessage::SetCachedSize(int size) const {$/;"	f	class:EncryptMessage
SetCachedSize	protob/messages.pb.cc	/^void Entropy::SetCachedSize(int size) const {$/;"	f	class:Entropy
SetCachedSize	protob/messages.pb.cc	/^void EntropyAck::SetCachedSize(int size) const {$/;"	f	class:EntropyAck
SetCachedSize	protob/messages.pb.cc	/^void EntropyRequest::SetCachedSize(int size) const {$/;"	f	class:EntropyRequest
SetCachedSize	protob/messages.pb.cc	/^void EstimateTxSize::SetCachedSize(int size) const {$/;"	f	class:EstimateTxSize
SetCachedSize	protob/messages.pb.cc	/^void Failure::SetCachedSize(int size) const {$/;"	f	class:Failure
SetCachedSize	protob/messages.pb.cc	/^void Features::SetCachedSize(int size) const {$/;"	f	class:Features
SetCachedSize	protob/messages.pb.cc	/^void FirmwareErase::SetCachedSize(int size) const {$/;"	f	class:FirmwareErase
SetCachedSize	protob/messages.pb.cc	/^void FirmwareUpload::SetCachedSize(int size) const {$/;"	f	class:FirmwareUpload
SetCachedSize	protob/messages.pb.cc	/^void GetAddress::SetCachedSize(int size) const {$/;"	f	class:GetAddress
SetCachedSize	protob/messages.pb.cc	/^void GetEntropy::SetCachedSize(int size) const {$/;"	f	class:GetEntropy
SetCachedSize	protob/messages.pb.cc	/^void GetPublicKey::SetCachedSize(int size) const {$/;"	f	class:GetPublicKey
SetCachedSize	protob/messages.pb.cc	/^void Initialize::SetCachedSize(int size) const {$/;"	f	class:Initialize
SetCachedSize	protob/messages.pb.cc	/^void LoadDevice::SetCachedSize(int size) const {$/;"	f	class:LoadDevice
SetCachedSize	protob/messages.pb.cc	/^void MessageSignature::SetCachedSize(int size) const {$/;"	f	class:MessageSignature
SetCachedSize	protob/messages.pb.cc	/^void PassphraseAck::SetCachedSize(int size) const {$/;"	f	class:PassphraseAck
SetCachedSize	protob/messages.pb.cc	/^void PassphraseRequest::SetCachedSize(int size) const {$/;"	f	class:PassphraseRequest
SetCachedSize	protob/messages.pb.cc	/^void PinMatrixAck::SetCachedSize(int size) const {$/;"	f	class:PinMatrixAck
SetCachedSize	protob/messages.pb.cc	/^void PinMatrixRequest::SetCachedSize(int size) const {$/;"	f	class:PinMatrixRequest
SetCachedSize	protob/messages.pb.cc	/^void Ping::SetCachedSize(int size) const {$/;"	f	class:Ping
SetCachedSize	protob/messages.pb.cc	/^void PublicKey::SetCachedSize(int size) const {$/;"	f	class:PublicKey
SetCachedSize	protob/messages.pb.cc	/^void RecoveryDevice::SetCachedSize(int size) const {$/;"	f	class:RecoveryDevice
SetCachedSize	protob/messages.pb.cc	/^void ResetDevice::SetCachedSize(int size) const {$/;"	f	class:ResetDevice
SetCachedSize	protob/messages.pb.cc	/^void SignMessage::SetCachedSize(int size) const {$/;"	f	class:SignMessage
SetCachedSize	protob/messages.pb.cc	/^void SignTx::SetCachedSize(int size) const {$/;"	f	class:SignTx
SetCachedSize	protob/messages.pb.cc	/^void SimpleSignTx::SetCachedSize(int size) const {$/;"	f	class:SimpleSignTx
SetCachedSize	protob/messages.pb.cc	/^void Success::SetCachedSize(int size) const {$/;"	f	class:Success
SetCachedSize	protob/messages.pb.cc	/^void TestScreen::SetCachedSize(int size) const {$/;"	f	class:TestScreen
SetCachedSize	protob/messages.pb.cc	/^void TxAck::SetCachedSize(int size) const {$/;"	f	class:TxAck
SetCachedSize	protob/messages.pb.cc	/^void TxRequest::SetCachedSize(int size) const {$/;"	f	class:TxRequest
SetCachedSize	protob/messages.pb.cc	/^void TxSize::SetCachedSize(int size) const {$/;"	f	class:TxSize
SetCachedSize	protob/messages.pb.cc	/^void VerifyMessage::SetCachedSize(int size) const {$/;"	f	class:VerifyMessage
SetCachedSize	protob/messages.pb.cc	/^void WipeDevice::SetCachedSize(int size) const {$/;"	f	class:WipeDevice
SetCachedSize	protob/messages.pb.cc	/^void WordAck::SetCachedSize(int size) const {$/;"	f	class:WordAck
SetCachedSize	protob/messages.pb.cc	/^void WordRequest::SetCachedSize(int size) const {$/;"	f	class:WordRequest
SetCachedSize	protob/storage.pb.cc	/^void Storage::SetCachedSize(int size) const {$/;"	f	class:Storage
SetCachedSize	protob/types.pb.cc	/^void CoinType::SetCachedSize(int size) const {$/;"	f	class:CoinType
SetCachedSize	protob/types.pb.cc	/^void HDNodeType::SetCachedSize(int size) const {$/;"	f	class:HDNodeType
SetCachedSize	protob/types.pb.cc	/^void MultisigRedeemScriptType::SetCachedSize(int size) const {$/;"	f	class:MultisigRedeemScriptType
SetCachedSize	protob/types.pb.cc	/^void TransactionType::SetCachedSize(int size) const {$/;"	f	class:TransactionType
SetCachedSize	protob/types.pb.cc	/^void TxInputType::SetCachedSize(int size) const {$/;"	f	class:TxInputType
SetCachedSize	protob/types.pb.cc	/^void TxOutputBinType::SetCachedSize(int size) const {$/;"	f	class:TxOutputBinType
SetCachedSize	protob/types.pb.cc	/^void TxOutputType::SetCachedSize(int size) const {$/;"	f	class:TxOutputType
SetCachedSize	protob/types.pb.cc	/^void TxRequestDetailsType::SetCachedSize(int size) const {$/;"	f	class:TxRequestDetailsType
SetCachedSize	protob/types.pb.cc	/^void TxRequestSerializedType::SetCachedSize(int size) const {$/;"	f	class:TxRequestSerializedType
SharedCtor	protob/config.pb.cc	/^void Configuration::SharedCtor() {$/;"	f	class:Configuration
SharedCtor	protob/config.pb.cc	/^void DeviceDescriptor::SharedCtor() {$/;"	f	class:DeviceDescriptor
SharedCtor	protob/messages.pb.cc	/^void Address::SharedCtor() {$/;"	f	class:Address
SharedCtor	protob/messages.pb.cc	/^void ApplySettings::SharedCtor() {$/;"	f	class:ApplySettings
SharedCtor	protob/messages.pb.cc	/^void ButtonAck::SharedCtor() {$/;"	f	class:ButtonAck
SharedCtor	protob/messages.pb.cc	/^void ButtonRequest::SharedCtor() {$/;"	f	class:ButtonRequest
SharedCtor	protob/messages.pb.cc	/^void Cancel::SharedCtor() {$/;"	f	class:Cancel
SharedCtor	protob/messages.pb.cc	/^void ChangePin::SharedCtor() {$/;"	f	class:ChangePin
SharedCtor	protob/messages.pb.cc	/^void CipherKeyValue::SharedCtor() {$/;"	f	class:CipherKeyValue
SharedCtor	protob/messages.pb.cc	/^void ClearSession::SharedCtor() {$/;"	f	class:ClearSession
SharedCtor	protob/messages.pb.cc	/^void DebugLinkDecision::SharedCtor() {$/;"	f	class:DebugLinkDecision
SharedCtor	protob/messages.pb.cc	/^void DebugLinkGetState::SharedCtor() {$/;"	f	class:DebugLinkGetState
SharedCtor	protob/messages.pb.cc	/^void DebugLinkLog::SharedCtor() {$/;"	f	class:DebugLinkLog
SharedCtor	protob/messages.pb.cc	/^void DebugLinkState::SharedCtor() {$/;"	f	class:DebugLinkState
SharedCtor	protob/messages.pb.cc	/^void DebugLinkStop::SharedCtor() {$/;"	f	class:DebugLinkStop
SharedCtor	protob/messages.pb.cc	/^void DecryptMessage::SharedCtor() {$/;"	f	class:DecryptMessage
SharedCtor	protob/messages.pb.cc	/^void EncryptMessage::SharedCtor() {$/;"	f	class:EncryptMessage
SharedCtor	protob/messages.pb.cc	/^void Entropy::SharedCtor() {$/;"	f	class:Entropy
SharedCtor	protob/messages.pb.cc	/^void EntropyAck::SharedCtor() {$/;"	f	class:EntropyAck
SharedCtor	protob/messages.pb.cc	/^void EntropyRequest::SharedCtor() {$/;"	f	class:EntropyRequest
SharedCtor	protob/messages.pb.cc	/^void EstimateTxSize::SharedCtor() {$/;"	f	class:EstimateTxSize
SharedCtor	protob/messages.pb.cc	/^void Failure::SharedCtor() {$/;"	f	class:Failure
SharedCtor	protob/messages.pb.cc	/^void Features::SharedCtor() {$/;"	f	class:Features
SharedCtor	protob/messages.pb.cc	/^void FirmwareErase::SharedCtor() {$/;"	f	class:FirmwareErase
SharedCtor	protob/messages.pb.cc	/^void FirmwareUpload::SharedCtor() {$/;"	f	class:FirmwareUpload
SharedCtor	protob/messages.pb.cc	/^void GetAddress::SharedCtor() {$/;"	f	class:GetAddress
SharedCtor	protob/messages.pb.cc	/^void GetEntropy::SharedCtor() {$/;"	f	class:GetEntropy
SharedCtor	protob/messages.pb.cc	/^void GetPublicKey::SharedCtor() {$/;"	f	class:GetPublicKey
SharedCtor	protob/messages.pb.cc	/^void Initialize::SharedCtor() {$/;"	f	class:Initialize
SharedCtor	protob/messages.pb.cc	/^void LoadDevice::SharedCtor() {$/;"	f	class:LoadDevice
SharedCtor	protob/messages.pb.cc	/^void MessageSignature::SharedCtor() {$/;"	f	class:MessageSignature
SharedCtor	protob/messages.pb.cc	/^void PassphraseAck::SharedCtor() {$/;"	f	class:PassphraseAck
SharedCtor	protob/messages.pb.cc	/^void PassphraseRequest::SharedCtor() {$/;"	f	class:PassphraseRequest
SharedCtor	protob/messages.pb.cc	/^void PinMatrixAck::SharedCtor() {$/;"	f	class:PinMatrixAck
SharedCtor	protob/messages.pb.cc	/^void PinMatrixRequest::SharedCtor() {$/;"	f	class:PinMatrixRequest
SharedCtor	protob/messages.pb.cc	/^void Ping::SharedCtor() {$/;"	f	class:Ping
SharedCtor	protob/messages.pb.cc	/^void PublicKey::SharedCtor() {$/;"	f	class:PublicKey
SharedCtor	protob/messages.pb.cc	/^void RecoveryDevice::SharedCtor() {$/;"	f	class:RecoveryDevice
SharedCtor	protob/messages.pb.cc	/^void ResetDevice::SharedCtor() {$/;"	f	class:ResetDevice
SharedCtor	protob/messages.pb.cc	/^void SignMessage::SharedCtor() {$/;"	f	class:SignMessage
SharedCtor	protob/messages.pb.cc	/^void SignTx::SharedCtor() {$/;"	f	class:SignTx
SharedCtor	protob/messages.pb.cc	/^void SimpleSignTx::SharedCtor() {$/;"	f	class:SimpleSignTx
SharedCtor	protob/messages.pb.cc	/^void Success::SharedCtor() {$/;"	f	class:Success
SharedCtor	protob/messages.pb.cc	/^void TestScreen::SharedCtor() {$/;"	f	class:TestScreen
SharedCtor	protob/messages.pb.cc	/^void TxAck::SharedCtor() {$/;"	f	class:TxAck
SharedCtor	protob/messages.pb.cc	/^void TxRequest::SharedCtor() {$/;"	f	class:TxRequest
SharedCtor	protob/messages.pb.cc	/^void TxSize::SharedCtor() {$/;"	f	class:TxSize
SharedCtor	protob/messages.pb.cc	/^void VerifyMessage::SharedCtor() {$/;"	f	class:VerifyMessage
SharedCtor	protob/messages.pb.cc	/^void WipeDevice::SharedCtor() {$/;"	f	class:WipeDevice
SharedCtor	protob/messages.pb.cc	/^void WordAck::SharedCtor() {$/;"	f	class:WordAck
SharedCtor	protob/messages.pb.cc	/^void WordRequest::SharedCtor() {$/;"	f	class:WordRequest
SharedCtor	protob/storage.pb.cc	/^void Storage::SharedCtor() {$/;"	f	class:Storage
SharedCtor	protob/types.pb.cc	/^void CoinType::SharedCtor() {$/;"	f	class:CoinType
SharedCtor	protob/types.pb.cc	/^void HDNodeType::SharedCtor() {$/;"	f	class:HDNodeType
SharedCtor	protob/types.pb.cc	/^void MultisigRedeemScriptType::SharedCtor() {$/;"	f	class:MultisigRedeemScriptType
SharedCtor	protob/types.pb.cc	/^void TransactionType::SharedCtor() {$/;"	f	class:TransactionType
SharedCtor	protob/types.pb.cc	/^void TxInputType::SharedCtor() {$/;"	f	class:TxInputType
SharedCtor	protob/types.pb.cc	/^void TxOutputBinType::SharedCtor() {$/;"	f	class:TxOutputBinType
SharedCtor	protob/types.pb.cc	/^void TxOutputType::SharedCtor() {$/;"	f	class:TxOutputType
SharedCtor	protob/types.pb.cc	/^void TxRequestDetailsType::SharedCtor() {$/;"	f	class:TxRequestDetailsType
SharedCtor	protob/types.pb.cc	/^void TxRequestSerializedType::SharedCtor() {$/;"	f	class:TxRequestSerializedType
SharedDtor	protob/config.pb.cc	/^void Configuration::SharedDtor() {$/;"	f	class:Configuration
SharedDtor	protob/config.pb.cc	/^void DeviceDescriptor::SharedDtor() {$/;"	f	class:DeviceDescriptor
SharedDtor	protob/messages.pb.cc	/^void Address::SharedDtor() {$/;"	f	class:Address
SharedDtor	protob/messages.pb.cc	/^void ApplySettings::SharedDtor() {$/;"	f	class:ApplySettings
SharedDtor	protob/messages.pb.cc	/^void ButtonAck::SharedDtor() {$/;"	f	class:ButtonAck
SharedDtor	protob/messages.pb.cc	/^void ButtonRequest::SharedDtor() {$/;"	f	class:ButtonRequest
SharedDtor	protob/messages.pb.cc	/^void Cancel::SharedDtor() {$/;"	f	class:Cancel
SharedDtor	protob/messages.pb.cc	/^void ChangePin::SharedDtor() {$/;"	f	class:ChangePin
SharedDtor	protob/messages.pb.cc	/^void CipherKeyValue::SharedDtor() {$/;"	f	class:CipherKeyValue
SharedDtor	protob/messages.pb.cc	/^void ClearSession::SharedDtor() {$/;"	f	class:ClearSession
SharedDtor	protob/messages.pb.cc	/^void DebugLinkDecision::SharedDtor() {$/;"	f	class:DebugLinkDecision
SharedDtor	protob/messages.pb.cc	/^void DebugLinkGetState::SharedDtor() {$/;"	f	class:DebugLinkGetState
SharedDtor	protob/messages.pb.cc	/^void DebugLinkLog::SharedDtor() {$/;"	f	class:DebugLinkLog
SharedDtor	protob/messages.pb.cc	/^void DebugLinkState::SharedDtor() {$/;"	f	class:DebugLinkState
SharedDtor	protob/messages.pb.cc	/^void DebugLinkStop::SharedDtor() {$/;"	f	class:DebugLinkStop
SharedDtor	protob/messages.pb.cc	/^void DecryptMessage::SharedDtor() {$/;"	f	class:DecryptMessage
SharedDtor	protob/messages.pb.cc	/^void EncryptMessage::SharedDtor() {$/;"	f	class:EncryptMessage
SharedDtor	protob/messages.pb.cc	/^void Entropy::SharedDtor() {$/;"	f	class:Entropy
SharedDtor	protob/messages.pb.cc	/^void EntropyAck::SharedDtor() {$/;"	f	class:EntropyAck
SharedDtor	protob/messages.pb.cc	/^void EntropyRequest::SharedDtor() {$/;"	f	class:EntropyRequest
SharedDtor	protob/messages.pb.cc	/^void EstimateTxSize::SharedDtor() {$/;"	f	class:EstimateTxSize
SharedDtor	protob/messages.pb.cc	/^void Failure::SharedDtor() {$/;"	f	class:Failure
SharedDtor	protob/messages.pb.cc	/^void Features::SharedDtor() {$/;"	f	class:Features
SharedDtor	protob/messages.pb.cc	/^void FirmwareErase::SharedDtor() {$/;"	f	class:FirmwareErase
SharedDtor	protob/messages.pb.cc	/^void FirmwareUpload::SharedDtor() {$/;"	f	class:FirmwareUpload
SharedDtor	protob/messages.pb.cc	/^void GetAddress::SharedDtor() {$/;"	f	class:GetAddress
SharedDtor	protob/messages.pb.cc	/^void GetEntropy::SharedDtor() {$/;"	f	class:GetEntropy
SharedDtor	protob/messages.pb.cc	/^void GetPublicKey::SharedDtor() {$/;"	f	class:GetPublicKey
SharedDtor	protob/messages.pb.cc	/^void Initialize::SharedDtor() {$/;"	f	class:Initialize
SharedDtor	protob/messages.pb.cc	/^void LoadDevice::SharedDtor() {$/;"	f	class:LoadDevice
SharedDtor	protob/messages.pb.cc	/^void MessageSignature::SharedDtor() {$/;"	f	class:MessageSignature
SharedDtor	protob/messages.pb.cc	/^void PassphraseAck::SharedDtor() {$/;"	f	class:PassphraseAck
SharedDtor	protob/messages.pb.cc	/^void PassphraseRequest::SharedDtor() {$/;"	f	class:PassphraseRequest
SharedDtor	protob/messages.pb.cc	/^void PinMatrixAck::SharedDtor() {$/;"	f	class:PinMatrixAck
SharedDtor	protob/messages.pb.cc	/^void PinMatrixRequest::SharedDtor() {$/;"	f	class:PinMatrixRequest
SharedDtor	protob/messages.pb.cc	/^void Ping::SharedDtor() {$/;"	f	class:Ping
SharedDtor	protob/messages.pb.cc	/^void PublicKey::SharedDtor() {$/;"	f	class:PublicKey
SharedDtor	protob/messages.pb.cc	/^void RecoveryDevice::SharedDtor() {$/;"	f	class:RecoveryDevice
SharedDtor	protob/messages.pb.cc	/^void ResetDevice::SharedDtor() {$/;"	f	class:ResetDevice
SharedDtor	protob/messages.pb.cc	/^void SignMessage::SharedDtor() {$/;"	f	class:SignMessage
SharedDtor	protob/messages.pb.cc	/^void SignTx::SharedDtor() {$/;"	f	class:SignTx
SharedDtor	protob/messages.pb.cc	/^void SimpleSignTx::SharedDtor() {$/;"	f	class:SimpleSignTx
SharedDtor	protob/messages.pb.cc	/^void Success::SharedDtor() {$/;"	f	class:Success
SharedDtor	protob/messages.pb.cc	/^void TestScreen::SharedDtor() {$/;"	f	class:TestScreen
SharedDtor	protob/messages.pb.cc	/^void TxAck::SharedDtor() {$/;"	f	class:TxAck
SharedDtor	protob/messages.pb.cc	/^void TxRequest::SharedDtor() {$/;"	f	class:TxRequest
SharedDtor	protob/messages.pb.cc	/^void TxSize::SharedDtor() {$/;"	f	class:TxSize
SharedDtor	protob/messages.pb.cc	/^void VerifyMessage::SharedDtor() {$/;"	f	class:VerifyMessage
SharedDtor	protob/messages.pb.cc	/^void WipeDevice::SharedDtor() {$/;"	f	class:WipeDevice
SharedDtor	protob/messages.pb.cc	/^void WordAck::SharedDtor() {$/;"	f	class:WordAck
SharedDtor	protob/messages.pb.cc	/^void WordRequest::SharedDtor() {$/;"	f	class:WordRequest
SharedDtor	protob/storage.pb.cc	/^void Storage::SharedDtor() {$/;"	f	class:Storage
SharedDtor	protob/types.pb.cc	/^void CoinType::SharedDtor() {$/;"	f	class:CoinType
SharedDtor	protob/types.pb.cc	/^void HDNodeType::SharedDtor() {$/;"	f	class:HDNodeType
SharedDtor	protob/types.pb.cc	/^void MultisigRedeemScriptType::SharedDtor() {$/;"	f	class:MultisigRedeemScriptType
SharedDtor	protob/types.pb.cc	/^void TransactionType::SharedDtor() {$/;"	f	class:TransactionType
SharedDtor	protob/types.pb.cc	/^void TxInputType::SharedDtor() {$/;"	f	class:TxInputType
SharedDtor	protob/types.pb.cc	/^void TxOutputBinType::SharedDtor() {$/;"	f	class:TxOutputBinType
SharedDtor	protob/types.pb.cc	/^void TxOutputType::SharedDtor() {$/;"	f	class:TxOutputType
SharedDtor	protob/types.pb.cc	/^void TxRequestDetailsType::SharedDtor() {$/;"	f	class:TxRequestDetailsType
SharedDtor	protob/types.pb.cc	/^void TxRequestSerializedType::SharedDtor() {$/;"	f	class:TxRequestSerializedType
SignMessage	protob/messages.pb.cc	/^SignMessage::SignMessage()$/;"	f	class:SignMessage
SignMessage	protob/messages.pb.cc	/^SignMessage::SignMessage(const SignMessage& from)$/;"	f	class:SignMessage
SignMessage	protob/messages.pb.h	/^class SignMessage : public ::google::protobuf::Message {$/;"	c
SignMessage_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* SignMessage_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
SignMessage_reflection_	protob/messages.pb.cc	/^  SignMessage_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
SignTx	protob/messages.pb.cc	/^SignTx::SignTx()$/;"	f	class:SignTx
SignTx	protob/messages.pb.cc	/^SignTx::SignTx(const SignTx& from)$/;"	f	class:SignTx
SignTx	protob/messages.pb.h	/^class SignTx : public ::google::protobuf::Message {$/;"	c
SignTx_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* SignTx_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
SignTx_reflection_	protob/messages.pb.cc	/^  SignTx_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
SimpleSignTx	protob/messages.pb.cc	/^SimpleSignTx::SimpleSignTx()$/;"	f	class:SimpleSignTx
SimpleSignTx	protob/messages.pb.cc	/^SimpleSignTx::SimpleSignTx(const SimpleSignTx& from)$/;"	f	class:SimpleSignTx
SimpleSignTx	protob/messages.pb.h	/^class SimpleSignTx : public ::google::protobuf::Message {$/;"	c
SimpleSignTx_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* SimpleSignTx_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
SimpleSignTx_reflection_	protob/messages.pb.cc	/^  SimpleSignTx_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
StackTrace	easylogging++.h	/^    StackTrace(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::debug::StackTrace
StackTrace	easylogging++.h	/^class StackTrace : base::NoCopy {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::debug
StackTraceEntry	easylogging++.h	/^        StackTraceEntry(std::size_t index, char* loc) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::debug::StackTrace::StackTraceEntry
StackTraceEntry	easylogging++.h	/^        StackTraceEntry(std::size_t index, const char* loc, const char* demang, const char* hex, const char* addr) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::debug::StackTrace::StackTraceEntry
StackTraceEntry	easylogging++.h	/^    class StackTraceEntry {$/;"	c	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::debug::StackTrace
StaticClass	easylogging++.h	/^class StaticClass {$/;"	c	namespace:el::base
StaticDescriptorInitializer_config_2eproto	protob/config.pb.cc	/^  StaticDescriptorInitializer_config_2eproto() {$/;"	f	struct:StaticDescriptorInitializer_config_2eproto
StaticDescriptorInitializer_config_2eproto	protob/config.pb.cc	/^struct StaticDescriptorInitializer_config_2eproto {$/;"	s	file:
StaticDescriptorInitializer_messages_2eproto	protob/messages.pb.cc	/^  StaticDescriptorInitializer_messages_2eproto() {$/;"	f	struct:StaticDescriptorInitializer_messages_2eproto
StaticDescriptorInitializer_messages_2eproto	protob/messages.pb.cc	/^struct StaticDescriptorInitializer_messages_2eproto {$/;"	s	file:
StaticDescriptorInitializer_storage_2eproto	protob/storage.pb.cc	/^  StaticDescriptorInitializer_storage_2eproto() {$/;"	f	struct:StaticDescriptorInitializer_storage_2eproto
StaticDescriptorInitializer_storage_2eproto	protob/storage.pb.cc	/^struct StaticDescriptorInitializer_storage_2eproto {$/;"	s	file:
StaticDescriptorInitializer_types_2eproto	protob/types.pb.cc	/^  StaticDescriptorInitializer_types_2eproto() {$/;"	f	struct:StaticDescriptorInitializer_types_2eproto
StaticDescriptorInitializer_types_2eproto	protob/types.pb.cc	/^struct StaticDescriptorInitializer_types_2eproto {$/;"	s	file:
Storage	easylogging++.h	/^    explicit Storage(const LogBuilderPtr& defaultLogBuilder) :$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
Storage	easylogging++.h	/^class Storage : base::NoCopy, public base::threading::ThreadSafe {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base
Storage	protob/storage.pb.cc	/^Storage::Storage()$/;"	f	class:Storage
Storage	protob/storage.pb.cc	/^Storage::Storage(const Storage& from)$/;"	f	class:Storage
Storage	protob/storage.pb.h	/^class Storage : public ::google::protobuf::Message {$/;"	c
StoragePointer	easylogging++.h	/^typedef std::shared_ptr<base::Storage> StoragePointer;$/;"	t	namespace:el::base::type
Storage_descriptor_	protob/storage.pb.cc	/^const ::google::protobuf::Descriptor* Storage_descriptor_ = NULL;$/;"	m	namespace:__anon5	file:
Storage_reflection_	protob/storage.pb.cc	/^  Storage_reflection_ = NULL;$/;"	m	namespace:__anon5	file:
Str	easylogging++.h	/^class Str : base::StaticClass {$/;"	c	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File
StrictLogFileSizeCheck	easylogging++.h	/^    StrictLogFileSizeCheck = 32,$/;"	m	class:el::Level::ConfigurationType::LoggingFlag
Success	protob/messages.pb.cc	/^Success::Success()$/;"	f	class:Success
Success	protob/messages.pb.cc	/^Success::Success(const Success& from)$/;"	f	class:Success
Success	protob/messages.pb.h	/^class Success : public ::google::protobuf::Message {$/;"	c
Success_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* Success_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
Success_reflection_	protob/messages.pb.cc	/^  Success_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
Swap	protob/config.pb.cc	/^void Configuration::Swap(Configuration* other) {$/;"	f	class:Configuration
Swap	protob/config.pb.cc	/^void DeviceDescriptor::Swap(DeviceDescriptor* other) {$/;"	f	class:DeviceDescriptor
Swap	protob/messages.pb.cc	/^void Address::Swap(Address* other) {$/;"	f	class:Address
Swap	protob/messages.pb.cc	/^void ApplySettings::Swap(ApplySettings* other) {$/;"	f	class:ApplySettings
Swap	protob/messages.pb.cc	/^void ButtonAck::Swap(ButtonAck* other) {$/;"	f	class:ButtonAck
Swap	protob/messages.pb.cc	/^void ButtonRequest::Swap(ButtonRequest* other) {$/;"	f	class:ButtonRequest
Swap	protob/messages.pb.cc	/^void Cancel::Swap(Cancel* other) {$/;"	f	class:Cancel
Swap	protob/messages.pb.cc	/^void ChangePin::Swap(ChangePin* other) {$/;"	f	class:ChangePin
Swap	protob/messages.pb.cc	/^void CipherKeyValue::Swap(CipherKeyValue* other) {$/;"	f	class:CipherKeyValue
Swap	protob/messages.pb.cc	/^void ClearSession::Swap(ClearSession* other) {$/;"	f	class:ClearSession
Swap	protob/messages.pb.cc	/^void DebugLinkDecision::Swap(DebugLinkDecision* other) {$/;"	f	class:DebugLinkDecision
Swap	protob/messages.pb.cc	/^void DebugLinkGetState::Swap(DebugLinkGetState* other) {$/;"	f	class:DebugLinkGetState
Swap	protob/messages.pb.cc	/^void DebugLinkLog::Swap(DebugLinkLog* other) {$/;"	f	class:DebugLinkLog
Swap	protob/messages.pb.cc	/^void DebugLinkState::Swap(DebugLinkState* other) {$/;"	f	class:DebugLinkState
Swap	protob/messages.pb.cc	/^void DebugLinkStop::Swap(DebugLinkStop* other) {$/;"	f	class:DebugLinkStop
Swap	protob/messages.pb.cc	/^void DecryptMessage::Swap(DecryptMessage* other) {$/;"	f	class:DecryptMessage
Swap	protob/messages.pb.cc	/^void EncryptMessage::Swap(EncryptMessage* other) {$/;"	f	class:EncryptMessage
Swap	protob/messages.pb.cc	/^void Entropy::Swap(Entropy* other) {$/;"	f	class:Entropy
Swap	protob/messages.pb.cc	/^void EntropyAck::Swap(EntropyAck* other) {$/;"	f	class:EntropyAck
Swap	protob/messages.pb.cc	/^void EntropyRequest::Swap(EntropyRequest* other) {$/;"	f	class:EntropyRequest
Swap	protob/messages.pb.cc	/^void EstimateTxSize::Swap(EstimateTxSize* other) {$/;"	f	class:EstimateTxSize
Swap	protob/messages.pb.cc	/^void Failure::Swap(Failure* other) {$/;"	f	class:Failure
Swap	protob/messages.pb.cc	/^void Features::Swap(Features* other) {$/;"	f	class:Features
Swap	protob/messages.pb.cc	/^void FirmwareErase::Swap(FirmwareErase* other) {$/;"	f	class:FirmwareErase
Swap	protob/messages.pb.cc	/^void FirmwareUpload::Swap(FirmwareUpload* other) {$/;"	f	class:FirmwareUpload
Swap	protob/messages.pb.cc	/^void GetAddress::Swap(GetAddress* other) {$/;"	f	class:GetAddress
Swap	protob/messages.pb.cc	/^void GetEntropy::Swap(GetEntropy* other) {$/;"	f	class:GetEntropy
Swap	protob/messages.pb.cc	/^void GetPublicKey::Swap(GetPublicKey* other) {$/;"	f	class:GetPublicKey
Swap	protob/messages.pb.cc	/^void Initialize::Swap(Initialize* other) {$/;"	f	class:Initialize
Swap	protob/messages.pb.cc	/^void LoadDevice::Swap(LoadDevice* other) {$/;"	f	class:LoadDevice
Swap	protob/messages.pb.cc	/^void MessageSignature::Swap(MessageSignature* other) {$/;"	f	class:MessageSignature
Swap	protob/messages.pb.cc	/^void PassphraseAck::Swap(PassphraseAck* other) {$/;"	f	class:PassphraseAck
Swap	protob/messages.pb.cc	/^void PassphraseRequest::Swap(PassphraseRequest* other) {$/;"	f	class:PassphraseRequest
Swap	protob/messages.pb.cc	/^void PinMatrixAck::Swap(PinMatrixAck* other) {$/;"	f	class:PinMatrixAck
Swap	protob/messages.pb.cc	/^void PinMatrixRequest::Swap(PinMatrixRequest* other) {$/;"	f	class:PinMatrixRequest
Swap	protob/messages.pb.cc	/^void Ping::Swap(Ping* other) {$/;"	f	class:Ping
Swap	protob/messages.pb.cc	/^void PublicKey::Swap(PublicKey* other) {$/;"	f	class:PublicKey
Swap	protob/messages.pb.cc	/^void RecoveryDevice::Swap(RecoveryDevice* other) {$/;"	f	class:RecoveryDevice
Swap	protob/messages.pb.cc	/^void ResetDevice::Swap(ResetDevice* other) {$/;"	f	class:ResetDevice
Swap	protob/messages.pb.cc	/^void SignMessage::Swap(SignMessage* other) {$/;"	f	class:SignMessage
Swap	protob/messages.pb.cc	/^void SignTx::Swap(SignTx* other) {$/;"	f	class:SignTx
Swap	protob/messages.pb.cc	/^void SimpleSignTx::Swap(SimpleSignTx* other) {$/;"	f	class:SimpleSignTx
Swap	protob/messages.pb.cc	/^void Success::Swap(Success* other) {$/;"	f	class:Success
Swap	protob/messages.pb.cc	/^void TestScreen::Swap(TestScreen* other) {$/;"	f	class:TestScreen
Swap	protob/messages.pb.cc	/^void TxAck::Swap(TxAck* other) {$/;"	f	class:TxAck
Swap	protob/messages.pb.cc	/^void TxRequest::Swap(TxRequest* other) {$/;"	f	class:TxRequest
Swap	protob/messages.pb.cc	/^void TxSize::Swap(TxSize* other) {$/;"	f	class:TxSize
Swap	protob/messages.pb.cc	/^void VerifyMessage::Swap(VerifyMessage* other) {$/;"	f	class:VerifyMessage
Swap	protob/messages.pb.cc	/^void WipeDevice::Swap(WipeDevice* other) {$/;"	f	class:WipeDevice
Swap	protob/messages.pb.cc	/^void WordAck::Swap(WordAck* other) {$/;"	f	class:WordAck
Swap	protob/messages.pb.cc	/^void WordRequest::Swap(WordRequest* other) {$/;"	f	class:WordRequest
Swap	protob/storage.pb.cc	/^void Storage::Swap(Storage* other) {$/;"	f	class:Storage
Swap	protob/types.pb.cc	/^void CoinType::Swap(CoinType* other) {$/;"	f	class:CoinType
Swap	protob/types.pb.cc	/^void HDNodeType::Swap(HDNodeType* other) {$/;"	f	class:HDNodeType
Swap	protob/types.pb.cc	/^void MultisigRedeemScriptType::Swap(MultisigRedeemScriptType* other) {$/;"	f	class:MultisigRedeemScriptType
Swap	protob/types.pb.cc	/^void TransactionType::Swap(TransactionType* other) {$/;"	f	class:TransactionType
Swap	protob/types.pb.cc	/^void TxInputType::Swap(TxInputType* other) {$/;"	f	class:TxInputType
Swap	protob/types.pb.cc	/^void TxOutputBinType::Swap(TxOutputBinType* other) {$/;"	f	class:TxOutputBinType
Swap	protob/types.pb.cc	/^void TxOutputType::Swap(TxOutputType* other) {$/;"	f	class:TxOutputType
Swap	protob/types.pb.cc	/^void TxRequestDetailsType::Swap(TxRequestDetailsType* other) {$/;"	f	class:TxRequestDetailsType
Swap	protob/types.pb.cc	/^void TxRequestSerializedType::Swap(TxRequestSerializedType* other) {$/;"	f	class:TxRequestSerializedType
SysLog	easylogging++.h	/^    None = 1, NormalLog = 2, SysLog = 4$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::DispatchAction
SysLogInitializer	easylogging++.h	/^    SysLogInitializer(const char* processIdent, int options = 0, int facility = 0) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::SysLogInitializer
SysLogInitializer	easylogging++.h	/^class SysLogInitializer {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base
TIMED_BLOCK	easylogging++.h	5686;"	d
TIMED_BLOCK	easylogging++.h	5703;"	d
TIMED_FUNC	easylogging++.h	5688;"	d
TIMED_FUNC	easylogging++.h	5711;"	d
TIMED_SCOPE	easylogging++.h	5687;"	d
TIMED_SCOPE	easylogging++.h	5702;"	d
TRACE	easylogging++.h	5728;"	d
TXFINISHED	protob/types.pb.h	/^  TXFINISHED = 3$/;"	e	enum:RequestType
TXINPUT	protob/types.pb.h	/^  TXINPUT = 0,$/;"	e	enum:RequestType
TXMETA	protob/types.pb.h	/^  TXMETA = 2,$/;"	e	enum:RequestType
TXOUTPUT	protob/types.pb.h	/^  TXOUTPUT = 1,$/;"	e	enum:RequestType
TestScreen	protob/messages.pb.cc	/^TestScreen::TestScreen()$/;"	f	class:TestScreen
TestScreen	protob/messages.pb.cc	/^TestScreen::TestScreen(const TestScreen& from)$/;"	f	class:TestScreen
TestScreen	protob/messages.pb.h	/^class TestScreen : public ::google::protobuf::Message {$/;"	c
TestScreen_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* TestScreen_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
TestScreen_reflection_	protob/messages.pb.cc	/^  TestScreen_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
ThreadId	easylogging++.h	/^    User = 1<<7, Host = 1<<8, LogMessage = 1<<9, VerboseLevel = 1<<10, AppName = 1<<11, ThreadId = 1<<12,$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::FormatFlags
ThreadSafe	easylogging++.h	/^    ThreadSafe(void) {}$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::threading::ThreadSafe
ThreadSafe	easylogging++.h	/^class ThreadSafe {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::threading
TimestampUnit	easylogging++.h	/^enum class TimestampUnit : base::type::EnumType {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base
ToFile	easylogging++.h	/^    ToFile = 2,$/;"	m	class:el::Level::ConfigurationType
ToStandardOutput	easylogging++.h	/^    ToStandardOutput = 4,$/;"	m	class:el::Level::ConfigurationType
Trace	easylogging++.h	/^        Trace = 2,$/;"	m	class:el::Level
TransactionType	protob/types.pb.cc	/^TransactionType::TransactionType()$/;"	f	class:TransactionType
TransactionType	protob/types.pb.cc	/^TransactionType::TransactionType(const TransactionType& from)$/;"	f	class:TransactionType
TransactionType	protob/types.pb.h	/^class TransactionType : public ::google::protobuf::Message {$/;"	c
TransactionType_descriptor_	protob/types.pb.cc	/^const ::google::protobuf::Descriptor* TransactionType_descriptor_ = NULL;$/;"	m	namespace:__anon3	file:
TransactionType_reflection_	protob/types.pb.cc	/^  TransactionType_reflection_ = NULL;$/;"	m	namespace:__anon3	file:
TxAck	protob/messages.pb.cc	/^TxAck::TxAck()$/;"	f	class:TxAck
TxAck	protob/messages.pb.cc	/^TxAck::TxAck(const TxAck& from)$/;"	f	class:TxAck
TxAck	protob/messages.pb.h	/^class TxAck : public ::google::protobuf::Message {$/;"	c
TxAck_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* TxAck_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
TxAck_reflection_	protob/messages.pb.cc	/^  TxAck_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
TxInputType	protob/types.pb.cc	/^TxInputType::TxInputType()$/;"	f	class:TxInputType
TxInputType	protob/types.pb.cc	/^TxInputType::TxInputType(const TxInputType& from)$/;"	f	class:TxInputType
TxInputType	protob/types.pb.h	/^class TxInputType : public ::google::protobuf::Message {$/;"	c
TxInputType_descriptor_	protob/types.pb.cc	/^const ::google::protobuf::Descriptor* TxInputType_descriptor_ = NULL;$/;"	m	namespace:__anon3	file:
TxInputType_reflection_	protob/types.pb.cc	/^  TxInputType_reflection_ = NULL;$/;"	m	namespace:__anon3	file:
TxOutputBinType	protob/types.pb.cc	/^TxOutputBinType::TxOutputBinType()$/;"	f	class:TxOutputBinType
TxOutputBinType	protob/types.pb.cc	/^TxOutputBinType::TxOutputBinType(const TxOutputBinType& from)$/;"	f	class:TxOutputBinType
TxOutputBinType	protob/types.pb.h	/^class TxOutputBinType : public ::google::protobuf::Message {$/;"	c
TxOutputBinType_descriptor_	protob/types.pb.cc	/^const ::google::protobuf::Descriptor* TxOutputBinType_descriptor_ = NULL;$/;"	m	namespace:__anon3	file:
TxOutputBinType_reflection_	protob/types.pb.cc	/^  TxOutputBinType_reflection_ = NULL;$/;"	m	namespace:__anon3	file:
TxOutputType	protob/types.pb.cc	/^TxOutputType::TxOutputType()$/;"	f	class:TxOutputType
TxOutputType	protob/types.pb.cc	/^TxOutputType::TxOutputType(const TxOutputType& from)$/;"	f	class:TxOutputType
TxOutputType	protob/types.pb.h	/^class TxOutputType : public ::google::protobuf::Message {$/;"	c
TxOutputType_descriptor_	protob/types.pb.cc	/^const ::google::protobuf::Descriptor* TxOutputType_descriptor_ = NULL;$/;"	m	namespace:__anon3	file:
TxOutputType_reflection_	protob/types.pb.cc	/^  TxOutputType_reflection_ = NULL;$/;"	m	namespace:__anon3	file:
TxRequest	protob/messages.pb.cc	/^TxRequest::TxRequest()$/;"	f	class:TxRequest
TxRequest	protob/messages.pb.cc	/^TxRequest::TxRequest(const TxRequest& from)$/;"	f	class:TxRequest
TxRequest	protob/messages.pb.h	/^class TxRequest : public ::google::protobuf::Message {$/;"	c
TxRequestDetailsType	protob/types.pb.cc	/^TxRequestDetailsType::TxRequestDetailsType()$/;"	f	class:TxRequestDetailsType
TxRequestDetailsType	protob/types.pb.cc	/^TxRequestDetailsType::TxRequestDetailsType(const TxRequestDetailsType& from)$/;"	f	class:TxRequestDetailsType
TxRequestDetailsType	protob/types.pb.h	/^class TxRequestDetailsType : public ::google::protobuf::Message {$/;"	c
TxRequestDetailsType_descriptor_	protob/types.pb.cc	/^const ::google::protobuf::Descriptor* TxRequestDetailsType_descriptor_ = NULL;$/;"	m	namespace:__anon3	file:
TxRequestDetailsType_reflection_	protob/types.pb.cc	/^  TxRequestDetailsType_reflection_ = NULL;$/;"	m	namespace:__anon3	file:
TxRequestSerializedType	protob/types.pb.cc	/^TxRequestSerializedType::TxRequestSerializedType()$/;"	f	class:TxRequestSerializedType
TxRequestSerializedType	protob/types.pb.cc	/^TxRequestSerializedType::TxRequestSerializedType(const TxRequestSerializedType& from)$/;"	f	class:TxRequestSerializedType
TxRequestSerializedType	protob/types.pb.h	/^class TxRequestSerializedType : public ::google::protobuf::Message {$/;"	c
TxRequestSerializedType_descriptor_	protob/types.pb.cc	/^const ::google::protobuf::Descriptor* TxRequestSerializedType_descriptor_ = NULL;$/;"	m	namespace:__anon3	file:
TxRequestSerializedType_reflection_	protob/types.pb.cc	/^  TxRequestSerializedType_reflection_ = NULL;$/;"	m	namespace:__anon3	file:
TxRequest_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* TxRequest_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
TxRequest_reflection_	protob/messages.pb.cc	/^  TxRequest_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
TxSize	protob/messages.pb.cc	/^TxSize::TxSize()$/;"	f	class:TxSize
TxSize	protob/messages.pb.cc	/^TxSize::TxSize(const TxSize& from)$/;"	f	class:TxSize
TxSize	protob/messages.pb.h	/^class TxSize : public ::google::protobuf::Message {$/;"	c
TxSize_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* TxSize_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
TxSize_reflection_	protob/messages.pb.cc	/^  TxSize_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
TypedConfigurations	easylogging++.h	/^    TypedConfigurations(Configurations* configurations, base::LogStreamsReferenceMap* logStreamsReference) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
TypedConfigurations	easylogging++.h	/^    TypedConfigurations(const TypedConfigurations& other) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
TypedConfigurations	easylogging++.h	/^class TypedConfigurations : public base::threading::ThreadSafe {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base
Unknown	easylogging++.h	/^        Unknown = 1010$/;"	m	class:el::Level
Unknown	easylogging++.h	/^    Unknown = 1010$/;"	m	class:el::Level::ConfigurationType
User	easylogging++.h	/^    User = 1<<7, Host = 1<<8, LogMessage = 1<<9, VerboseLevel = 1<<10, AppName = 1<<11, ThreadId = 1<<12,$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::FormatFlags
VERBOSE	easylogging++.h	5729;"	d
VLOG	easylogging++.h	6018;"	d
VLOG	easylogging++.h	6037;"	d
VLOG_AFTER_N	easylogging++.h	6024;"	d
VLOG_AFTER_N	easylogging++.h	6045;"	d
VLOG_EVERY_N	easylogging++.h	6022;"	d
VLOG_EVERY_N	easylogging++.h	6043;"	d
VLOG_IF	easylogging++.h	6020;"	d
VLOG_IF	easylogging++.h	6040;"	d
VLOG_IS_ON	easylogging++.h	5683;"	d
VLOG_IS_ON	easylogging++.h	5685;"	d
VLOG_N_TIMES	easylogging++.h	6026;"	d
VLOG_N_TIMES	easylogging++.h	6047;"	d
VRegistry	easylogging++.h	/^    explicit VRegistry(base::type::VerboseLevel level, base::type::EnumType* pFlags) : m_level(level), m_pFlags(pFlags) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::VRegistry
VRegistry	easylogging++.h	/^class VRegistry : base::NoCopy, public base::threading::ThreadSafe {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base
Verbose	easylogging++.h	/^        Verbose = 64,$/;"	m	class:el::Level
VerboseLevel	easylogging++.h	/^    User = 1<<7, Host = 1<<8, LogMessage = 1<<9, VerboseLevel = 1<<10, AppName = 1<<11, ThreadId = 1<<12,$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::FormatFlags
VerboseLevel	easylogging++.h	/^typedef int VerboseLevel;$/;"	t	namespace:el::base::type
VerifyMessage	protob/messages.pb.cc	/^VerifyMessage::VerifyMessage()$/;"	f	class:VerifyMessage
VerifyMessage	protob/messages.pb.cc	/^VerifyMessage::VerifyMessage(const VerifyMessage& from)$/;"	f	class:VerifyMessage
VerifyMessage	protob/messages.pb.h	/^class VerifyMessage : public ::google::protobuf::Message {$/;"	c
VerifyMessage_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* VerifyMessage_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
VerifyMessage_reflection_	protob/messages.pb.cc	/^  VerifyMessage_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
VersionInfo	easylogging++.h	/^class VersionInfo : base::StaticClass {$/;"	c	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base
WARNING	easylogging++.h	5724;"	d
Warning	easylogging++.h	/^        Warning = 32, $/;"	m	class:el::Level
WipeDevice	protob/messages.pb.cc	/^WipeDevice::WipeDevice()$/;"	f	class:WipeDevice
WipeDevice	protob/messages.pb.cc	/^WipeDevice::WipeDevice(const WipeDevice& from)$/;"	f	class:WipeDevice
WipeDevice	protob/messages.pb.h	/^class WipeDevice : public ::google::protobuf::Message {$/;"	c
WipeDevice_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* WipeDevice_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
WipeDevice_reflection_	protob/messages.pb.cc	/^  WipeDevice_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
WordAck	protob/messages.pb.cc	/^WordAck::WordAck()$/;"	f	class:WordAck
WordAck	protob/messages.pb.cc	/^WordAck::WordAck(const WordAck& from)$/;"	f	class:WordAck
WordAck	protob/messages.pb.h	/^class WordAck : public ::google::protobuf::Message {$/;"	c
WordAck_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* WordAck_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
WordAck_reflection_	protob/messages.pb.cc	/^  WordAck_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
WordRequest	protob/messages.pb.cc	/^WordRequest::WordRequest()$/;"	f	class:WordRequest
WordRequest	protob/messages.pb.cc	/^WordRequest::WordRequest(const WordRequest& from)$/;"	f	class:WordRequest
WordRequest	protob/messages.pb.h	/^class WordRequest : public ::google::protobuf::Message {$/;"	c
WordRequest_descriptor_	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* WordRequest_descriptor_ = NULL;$/;"	m	namespace:__anon1	file:
WordRequest_reflection_	protob/messages.pb.cc	/^  WordRequest_reflection_ = NULL;$/;"	m	namespace:__anon1	file:
Writer	easylogging++.h	/^    Writer(Level level, const char* file, unsigned long int line,  \/\/ NOLINT$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::Writer
Writer	easylogging++.h	/^class Writer : base::NoCopy {$/;"	c	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder
_CURRENT_FILE_LOGGER_ID	easylogging++.h	6027;"	d
_CURRENT_FILE_LOGGER_ID	easylogging++.h	6029;"	d
_CURRENT_FILE_PERFORMANCE_LOGGER_ID	easylogging++.h	4954;"	d
_CURRENT_FILE_PERFORMANCE_LOGGER_ID	easylogging++.h	4956;"	d
_ELPP_CLANG_VERSION	easylogging++.h	41;"	d
_ELPP_COMPILER_CLANG	easylogging++.h	40;"	d
_ELPP_COMPILER_GCC	easylogging++.h	18;"	d
_ELPP_COMPILER_INTEL	easylogging++.h	58;"	d
_ELPP_COMPILER_MSVC	easylogging++.h	30;"	d
_ELPP_CRASH_HANDLER_INIT	easylogging++.h	6311;"	d
_ELPP_CRT_DBG_WARNINGS	easylogging++.h	31;"	d
_ELPP_CXX0X	easylogging++.h	23;"	d
_ELPP_CXX0X	easylogging++.h	33;"	d
_ELPP_CXX11	easylogging++.h	25;"	d
_ELPP_CXX11	easylogging++.h	35;"	d
_ELPP_CXX11	easylogging++.h	45;"	d
_ELPP_CYGWIN	easylogging++.h	54;"	d
_ELPP_DEBUG_LOG	easylogging++.h	241;"	d
_ELPP_DEBUG_LOG	easylogging++.h	243;"	d
_ELPP_ERROR_LOG	easylogging++.h	256;"	d
_ELPP_ERROR_LOG	easylogging++.h	258;"	d
_ELPP_EXPORT	easylogging++.h	178;"	d
_ELPP_EXPORT	easylogging++.h	180;"	d
_ELPP_EXPORT	easylogging++.h	183;"	d
_ELPP_FATAL_LOG	easylogging++.h	261;"	d
_ELPP_FATAL_LOG	easylogging++.h	263;"	d
_ELPP_FUNC	easylogging++.h	215;"	d
_ELPP_FUNC	easylogging++.h	217;"	d
_ELPP_FUNC	easylogging++.h	219;"	d
_ELPP_FUNC	easylogging++.h	221;"	d
_ELPP_FUNC	easylogging++.h	223;"	d
_ELPP_FUNC	easylogging++.h	226;"	d
_ELPP_FUNC	easylogging++.h	228;"	d
_ELPP_GCC_VERSION	easylogging++.h	19;"	d
_ELPP_INFO_LOG	easylogging++.h	246;"	d
_ELPP_INFO_LOG	easylogging++.h	248;"	d
_ELPP_INITI_BASIC_DECLR	easylogging++.h	1505;"	d
_ELPP_INIT_EASYLOGGINGPP	easylogging++.h	6312;"	d
_ELPP_INTERNAL_DEBUGGING_ENDL	easylogging++.h	99;"	d
_ELPP_INTERNAL_DEBUGGING_MSG	easylogging++.h	102;"	d
_ELPP_INTERNAL_DEBUGGING_OUT_ERROR	easylogging++.h	96;"	d
_ELPP_INTERNAL_DEBUGGING_OUT_INFO	easylogging++.h	93;"	d
_ELPP_INTERNAL_DEBUGGING_WRITE_PERROR	easylogging++.h	125;"	d
_ELPP_INTERNAL_DEBUGGING_WRITE_PERROR	easylogging++.h	129;"	d
_ELPP_INTERNAL_INFO_LEVEL	easylogging++.h	147;"	d
_ELPP_LOGGING_ENABLED	easylogging++.h	238;"	d
_ELPP_LOG_PERMS	easylogging++.h	174;"	d
_ELPP_MINGW	easylogging++.h	50;"	d
_ELPP_MIN_UNIT	easylogging++.h	5689;"	d
_ELPP_MIN_UNIT	easylogging++.h	5691;"	d
_ELPP_OS_ANDROID	easylogging++.h	83;"	d
_ELPP_OS_FREEBSD	easylogging++.h	75;"	d
_ELPP_OS_LINUX	easylogging++.h	67;"	d
_ELPP_OS_LINUX	easylogging++.h	88;"	d
_ELPP_OS_LINUX	easylogging++.h	90;"	d
_ELPP_OS_MAC	easylogging++.h	71;"	d
_ELPP_OS_UNIX	easylogging++.h	79;"	d
_ELPP_OS_UNIX	easylogging++.h	87;"	d
_ELPP_OS_UNIX	easylogging++.h	89;"	d
_ELPP_OS_WINDOWS	easylogging++.h	63;"	d
_ELPP_STACKTRACE	easylogging++.h	161;"	d
_ELPP_THREADING_ENABLED	easylogging++.h	212;"	d
_ELPP_TRACE_LOG	easylogging++.h	266;"	d
_ELPP_TRACE_LOG	easylogging++.h	268;"	d
_ELPP_UNUSED	easylogging++.h	171;"	d
_ELPP_USE_DEF_CRASH_HANDLER	easylogging++.h	6307;"	d
_ELPP_USE_STD_THREADING	easylogging++.h	203;"	d
_ELPP_VARIADIC_TEMPLATES_SUPPORTED	easylogging++.h	231;"	d
_ELPP_VARIADIC_TEMPLATES_SUPPORTED	easylogging++.h	234;"	d
_ELPP_VERBOSE_LOG	easylogging++.h	271;"	d
_ELPP_VERBOSE_LOG	easylogging++.h	273;"	d
_ELPP_WARNING_LOG	easylogging++.h	251;"	d
_ELPP_WARNING_LOG	easylogging++.h	253;"	d
_ELPP_WRITE_LOG	easylogging++.h	4941;"	d
_ELPP_WRITE_LOG_AFTER_N	easylogging++.h	4948;"	d
_ELPP_WRITE_LOG_EVERY_N	easylogging++.h	4945;"	d
_ELPP_WRITE_LOG_IF	easylogging++.h	4943;"	d
_ELPP_WRITE_LOG_N_TIMES	easylogging++.h	4951;"	d
_INITIALIZE_EASYLOGGINGPP	easylogging++.h	6321;"	d
_INITIALIZE_NULL_EASYLOGGINGPP	easylogging++.h	6323;"	d
_INIT_SYSLOG	easylogging++.h	5361;"	d
_SHARE_EASYLOGGINGPP	easylogging++.h	6332;"	d
_START_EASYLOGGINGPP	easylogging++.h	6341;"	d
_TRACE	easylogging++.h	6033;"	d
_TRACE	easylogging++.h	6034;"	d
_cached_size_	protob/config.pb.h	/^  mutable int _cached_size_;$/;"	m	class:Configuration
_cached_size_	protob/config.pb.h	/^  mutable int _cached_size_;$/;"	m	class:DeviceDescriptor
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:Address
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:ApplySettings
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:ButtonAck
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:ButtonRequest
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:Cancel
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:ChangePin
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:CipherKeyValue
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:ClearSession
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:DebugLinkDecision
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:DebugLinkGetState
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:DebugLinkLog
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:DebugLinkState
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:DebugLinkStop
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:DecryptMessage
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:EncryptMessage
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:Entropy
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:EntropyAck
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:EntropyRequest
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:EstimateTxSize
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:Failure
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:Features
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:FirmwareErase
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:FirmwareUpload
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:GetAddress
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:GetEntropy
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:GetPublicKey
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:Initialize
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:LoadDevice
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:MessageSignature
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:PassphraseAck
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:PassphraseRequest
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:PinMatrixAck
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:PinMatrixRequest
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:Ping
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:PublicKey
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:RecoveryDevice
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:ResetDevice
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:SignMessage
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:SignTx
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:SimpleSignTx
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:Success
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:TestScreen
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:TxAck
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:TxRequest
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:TxSize
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:VerifyMessage
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:WipeDevice
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:WordAck
_cached_size_	protob/messages.pb.h	/^  mutable int _cached_size_;$/;"	m	class:WordRequest
_cached_size_	protob/storage.pb.h	/^  mutable int _cached_size_;$/;"	m	class:Storage
_cached_size_	protob/types.pb.h	/^  mutable int _cached_size_;$/;"	m	class:CoinType
_cached_size_	protob/types.pb.h	/^  mutable int _cached_size_;$/;"	m	class:HDNodeType
_cached_size_	protob/types.pb.h	/^  mutable int _cached_size_;$/;"	m	class:MultisigRedeemScriptType
_cached_size_	protob/types.pb.h	/^  mutable int _cached_size_;$/;"	m	class:TransactionType
_cached_size_	protob/types.pb.h	/^  mutable int _cached_size_;$/;"	m	class:TxInputType
_cached_size_	protob/types.pb.h	/^  mutable int _cached_size_;$/;"	m	class:TxOutputBinType
_cached_size_	protob/types.pb.h	/^  mutable int _cached_size_;$/;"	m	class:TxOutputType
_cached_size_	protob/types.pb.h	/^  mutable int _cached_size_;$/;"	m	class:TxRequestDetailsType
_cached_size_	protob/types.pb.h	/^  mutable int _cached_size_;$/;"	m	class:TxRequestSerializedType
_default_coin_name_	protob/messages.pb.cc	/^::std::string* EstimateTxSize::_default_coin_name_ = NULL;$/;"	m	class:EstimateTxSize	file:
_default_coin_name_	protob/messages.pb.cc	/^::std::string* GetAddress::_default_coin_name_ = NULL;$/;"	m	class:GetAddress	file:
_default_coin_name_	protob/messages.pb.cc	/^::std::string* SignMessage::_default_coin_name_ = NULL;$/;"	m	class:SignMessage	file:
_default_coin_name_	protob/messages.pb.cc	/^::std::string* SignTx::_default_coin_name_ = NULL;$/;"	m	class:SignTx	file:
_default_coin_name_	protob/messages.pb.cc	/^::std::string* SimpleSignTx::_default_coin_name_ = NULL;$/;"	m	class:SimpleSignTx	file:
_default_coin_name_	protob/messages.pb.h	/^  static ::std::string* _default_coin_name_;$/;"	m	class:EstimateTxSize
_default_coin_name_	protob/messages.pb.h	/^  static ::std::string* _default_coin_name_;$/;"	m	class:GetAddress
_default_coin_name_	protob/messages.pb.h	/^  static ::std::string* _default_coin_name_;$/;"	m	class:SignMessage
_default_coin_name_	protob/messages.pb.h	/^  static ::std::string* _default_coin_name_;$/;"	m	class:SignTx
_default_coin_name_	protob/messages.pb.h	/^  static ::std::string* _default_coin_name_;$/;"	m	class:SimpleSignTx
_default_language_	protob/messages.pb.cc	/^::std::string* LoadDevice::_default_language_ = NULL;$/;"	m	class:LoadDevice	file:
_default_language_	protob/messages.pb.cc	/^::std::string* RecoveryDevice::_default_language_ = NULL;$/;"	m	class:RecoveryDevice	file:
_default_language_	protob/messages.pb.cc	/^::std::string* ResetDevice::_default_language_ = NULL;$/;"	m	class:ResetDevice	file:
_default_language_	protob/messages.pb.h	/^  static ::std::string* _default_language_;$/;"	m	class:LoadDevice
_default_language_	protob/messages.pb.h	/^  static ::std::string* _default_language_;$/;"	m	class:RecoveryDevice
_default_language_	protob/messages.pb.h	/^  static ::std::string* _default_language_;$/;"	m	class:ResetDevice
_has_bits_	protob/config.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(4 + 31) \/ 32];$/;"	m	class:DeviceDescriptor
_has_bits_	protob/config.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(5 + 31) \/ 32];$/;"	m	class:Configuration
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(1 + 31) \/ 32];$/;"	m	class:Address
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(1 + 31) \/ 32];$/;"	m	class:ChangePin
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(1 + 31) \/ 32];$/;"	m	class:DebugLinkDecision
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(1 + 31) \/ 32];$/;"	m	class:Entropy
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(1 + 31) \/ 32];$/;"	m	class:EntropyAck
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(1 + 31) \/ 32];$/;"	m	class:FirmwareUpload
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(1 + 31) \/ 32];$/;"	m	class:GetEntropy
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(1 + 31) \/ 32];$/;"	m	class:GetPublicKey
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(1 + 31) \/ 32];$/;"	m	class:PassphraseAck
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(1 + 31) \/ 32];$/;"	m	class:PinMatrixAck
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(1 + 31) \/ 32];$/;"	m	class:PinMatrixRequest
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(1 + 31) \/ 32];$/;"	m	class:TestScreen
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(1 + 31) \/ 32];$/;"	m	class:TxAck
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(1 + 31) \/ 32];$/;"	m	class:TxSize
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(1 + 31) \/ 32];$/;"	m	class:WordAck
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(10 + 31) \/ 32];$/;"	m	class:DebugLinkState
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(16 + 31) \/ 32];$/;"	m	class:Features
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(2 + 31) \/ 32];$/;"	m	class:ApplySettings
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(2 + 31) \/ 32];$/;"	m	class:ButtonRequest
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(2 + 31) \/ 32];$/;"	m	class:DecryptMessage
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(2 + 31) \/ 32];$/;"	m	class:Failure
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(2 + 31) \/ 32];$/;"	m	class:MessageSignature
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(2 + 31) \/ 32];$/;"	m	class:PublicKey
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(2 + 31) \/ 32];$/;"	m	class:Success
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(3 + 31) \/ 32];$/;"	m	class:DebugLinkLog
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(3 + 31) \/ 32];$/;"	m	class:EstimateTxSize
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(3 + 31) \/ 32];$/;"	m	class:GetAddress
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(3 + 31) \/ 32];$/;"	m	class:SignMessage
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(3 + 31) \/ 32];$/;"	m	class:SignTx
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(3 + 31) \/ 32];$/;"	m	class:TxRequest
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(3 + 31) \/ 32];$/;"	m	class:VerifyMessage
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(4 + 31) \/ 32];$/;"	m	class:EncryptMessage
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(4 + 31) \/ 32];$/;"	m	class:Ping
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(4 + 31) \/ 32];$/;"	m	class:SimpleSignTx
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(6 + 31) \/ 32];$/;"	m	class:CipherKeyValue
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(6 + 31) \/ 32];$/;"	m	class:RecoveryDevice
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(6 + 31) \/ 32];$/;"	m	class:ResetDevice
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(7 + 31) \/ 32];$/;"	m	class:LoadDevice
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[1];$/;"	m	class:ButtonAck
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[1];$/;"	m	class:Cancel
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[1];$/;"	m	class:ClearSession
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[1];$/;"	m	class:DebugLinkGetState
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[1];$/;"	m	class:DebugLinkStop
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[1];$/;"	m	class:EntropyRequest
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[1];$/;"	m	class:FirmwareErase
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[1];$/;"	m	class:Initialize
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[1];$/;"	m	class:PassphraseRequest
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[1];$/;"	m	class:WipeDevice
_has_bits_	protob/messages.pb.h	/^  ::google::protobuf::uint32 _has_bits_[1];$/;"	m	class:WordRequest
_has_bits_	protob/storage.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(9 + 31) \/ 32];$/;"	m	class:Storage
_has_bits_	protob/types.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(2 + 31) \/ 32];$/;"	m	class:MultisigRedeemScriptType
_has_bits_	protob/types.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(2 + 31) \/ 32];$/;"	m	class:TxOutputBinType
_has_bits_	protob/types.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(2 + 31) \/ 32];$/;"	m	class:TxRequestDetailsType
_has_bits_	protob/types.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(3 + 31) \/ 32];$/;"	m	class:TxRequestSerializedType
_has_bits_	protob/types.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(4 + 31) \/ 32];$/;"	m	class:CoinType
_has_bits_	protob/types.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(4 + 31) \/ 32];$/;"	m	class:TxOutputType
_has_bits_	protob/types.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(6 + 31) \/ 32];$/;"	m	class:HDNodeType
_has_bits_	protob/types.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(7 + 31) \/ 32];$/;"	m	class:TransactionType
_has_bits_	protob/types.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(7 + 31) \/ 32];$/;"	m	class:TxInputType
_unknown_fields_	protob/config.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:Configuration
_unknown_fields_	protob/config.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:DeviceDescriptor
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:Address
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:ApplySettings
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:ButtonAck
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:ButtonRequest
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:Cancel
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:ChangePin
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:CipherKeyValue
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:ClearSession
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:DebugLinkDecision
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:DebugLinkGetState
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:DebugLinkLog
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:DebugLinkState
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:DebugLinkStop
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:DecryptMessage
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:EncryptMessage
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:Entropy
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:EntropyAck
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:EntropyRequest
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:EstimateTxSize
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:Failure
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:Features
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:FirmwareErase
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:FirmwareUpload
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:GetAddress
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:GetEntropy
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:GetPublicKey
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:Initialize
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:LoadDevice
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:MessageSignature
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:PassphraseAck
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:PassphraseRequest
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:PinMatrixAck
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:PinMatrixRequest
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:Ping
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:PublicKey
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:RecoveryDevice
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:ResetDevice
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:SignMessage
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:SignTx
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:SimpleSignTx
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:Success
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:TestScreen
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:TxAck
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:TxRequest
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:TxSize
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:VerifyMessage
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:WipeDevice
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:WordAck
_unknown_fields_	protob/messages.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:WordRequest
_unknown_fields_	protob/storage.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:Storage
_unknown_fields_	protob/types.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:CoinType
_unknown_fields_	protob/types.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:HDNodeType
_unknown_fields_	protob/types.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:MultisigRedeemScriptType
_unknown_fields_	protob/types.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:TransactionType
_unknown_fields_	protob/types.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:TxInputType
_unknown_fields_	protob/types.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:TxOutputBinType
_unknown_fields_	protob/types.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:TxOutputType
_unknown_fields_	protob/types.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:TxRequestDetailsType
_unknown_fields_	protob/types.pb.h	/^  ::google::protobuf::UnknownFieldSet _unknown_fields_;$/;"	m	class:TxRequestSerializedType
abort	easylogging++.h	/^static inline void abort(int status, const std::string& reason = std::string()) {$/;"	f	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils
addFlag	easylogging++.h	/^    inline void addFlag(LoggingFlag flag) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
addFlag	easylogging++.h	/^    inline void addFlag(base::FormatFlags flag) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogFormat
addFlag	easylogging++.h	/^    static inline void addFlag(LoggingFlag flag) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Loggers
addFlag	easylogging++.h	/^static inline void addFlag(Enum e, base::type::EnumType* flag) {$/;"	f	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils
addToBuff	easylogging++.h	/^    static inline char* addToBuff(const char* str, char* buf, const char* bufLim) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Str
add_address_n	protob/messages.pb.h	/^inline void CipherKeyValue::add_address_n(::google::protobuf::uint32 value) {$/;"	f	class:CipherKeyValue
add_address_n	protob/messages.pb.h	/^inline void DecryptMessage::add_address_n(::google::protobuf::uint32 value) {$/;"	f	class:DecryptMessage
add_address_n	protob/messages.pb.h	/^inline void EncryptMessage::add_address_n(::google::protobuf::uint32 value) {$/;"	f	class:EncryptMessage
add_address_n	protob/messages.pb.h	/^inline void GetAddress::add_address_n(::google::protobuf::uint32 value) {$/;"	f	class:GetAddress
add_address_n	protob/messages.pb.h	/^inline void GetPublicKey::add_address_n(::google::protobuf::uint32 value) {$/;"	f	class:GetPublicKey
add_address_n	protob/messages.pb.h	/^inline void SignMessage::add_address_n(::google::protobuf::uint32 value) {$/;"	f	class:SignMessage
add_address_n	protob/types.pb.h	/^inline void TxInputType::add_address_n(::google::protobuf::uint32 value) {$/;"	f	class:TxInputType
add_address_n	protob/types.pb.h	/^inline void TxOutputType::add_address_n(::google::protobuf::uint32 value) {$/;"	f	class:TxOutputType
add_bin_outputs	protob/types.pb.h	/^inline ::TxOutputBinType* TransactionType::add_bin_outputs() {$/;"	f	class:TransactionType
add_blacklist_urls	protob/config.pb.h	/^inline ::std::string* Configuration::add_blacklist_urls() {$/;"	f	class:Configuration
add_blacklist_urls	protob/config.pb.h	/^inline void Configuration::add_blacklist_urls(const ::std::string& value) {$/;"	f	class:Configuration
add_blacklist_urls	protob/config.pb.h	/^inline void Configuration::add_blacklist_urls(const char* value) {$/;"	f	class:Configuration
add_blacklist_urls	protob/config.pb.h	/^inline void Configuration::add_blacklist_urls(const char* value, size_t size) {$/;"	f	class:Configuration
add_coins	protob/messages.pb.h	/^inline ::CoinType* Features::add_coins() {$/;"	f	class:Features
add_inputs	protob/messages.pb.h	/^inline ::TxInputType* SimpleSignTx::add_inputs() {$/;"	f	class:SimpleSignTx
add_inputs	protob/types.pb.h	/^inline ::TxInputType* TransactionType::add_inputs() {$/;"	f	class:TransactionType
add_known_devices	protob/config.pb.h	/^inline ::DeviceDescriptor* Configuration::add_known_devices() {$/;"	f	class:Configuration
add_outputs	protob/messages.pb.h	/^inline ::TxOutputType* SimpleSignTx::add_outputs() {$/;"	f	class:SimpleSignTx
add_outputs	protob/types.pb.h	/^inline ::TxOutputType* TransactionType::add_outputs() {$/;"	f	class:TransactionType
add_pubkeys	protob/types.pb.h	/^inline ::std::string* MultisigRedeemScriptType::add_pubkeys() {$/;"	f	class:MultisigRedeemScriptType
add_pubkeys	protob/types.pb.h	/^inline void MultisigRedeemScriptType::add_pubkeys(const ::std::string& value) {$/;"	f	class:MultisigRedeemScriptType
add_pubkeys	protob/types.pb.h	/^inline void MultisigRedeemScriptType::add_pubkeys(const char* value) {$/;"	f	class:MultisigRedeemScriptType
add_pubkeys	protob/types.pb.h	/^inline void MultisigRedeemScriptType::add_pubkeys(const void* value, size_t size) {$/;"	f	class:MultisigRedeemScriptType
add_signatures	protob/types.pb.h	/^inline ::std::string* MultisigRedeemScriptType::add_signatures() {$/;"	f	class:MultisigRedeemScriptType
add_signatures	protob/types.pb.h	/^inline void MultisigRedeemScriptType::add_signatures(const ::std::string& value) {$/;"	f	class:MultisigRedeemScriptType
add_signatures	protob/types.pb.h	/^inline void MultisigRedeemScriptType::add_signatures(const char* value) {$/;"	f	class:MultisigRedeemScriptType
add_signatures	protob/types.pb.h	/^inline void MultisigRedeemScriptType::add_signatures(const void* value, size_t size) {$/;"	f	class:MultisigRedeemScriptType
add_transactions	protob/messages.pb.h	/^inline ::TransactionType* SimpleSignTx::add_transactions() {$/;"	f	class:SimpleSignTx
add_whitelist_urls	protob/config.pb.h	/^inline ::std::string* Configuration::add_whitelist_urls() {$/;"	f	class:Configuration
add_whitelist_urls	protob/config.pb.h	/^inline void Configuration::add_whitelist_urls(const ::std::string& value) {$/;"	f	class:Configuration
add_whitelist_urls	protob/config.pb.h	/^inline void Configuration::add_whitelist_urls(const char* value) {$/;"	f	class:Configuration
add_whitelist_urls	protob/config.pb.h	/^inline void Configuration::add_whitelist_urls(const char* value, size_t size) {$/;"	f	class:Configuration
address	protob/messages.pb.h	/^inline const ::std::string& Address::address() const {$/;"	f	class:Address
address	protob/messages.pb.h	/^inline const ::std::string& MessageSignature::address() const {$/;"	f	class:MessageSignature
address	protob/messages.pb.h	/^inline const ::std::string& VerifyMessage::address() const {$/;"	f	class:VerifyMessage
address	protob/types.pb.h	/^inline const ::std::string& TxOutputType::address() const {$/;"	f	class:TxOutputType
address_	protob/messages.pb.h	/^  ::std::string* address_;$/;"	m	class:Address
address_	protob/messages.pb.h	/^  ::std::string* address_;$/;"	m	class:MessageSignature
address_	protob/messages.pb.h	/^  ::std::string* address_;$/;"	m	class:VerifyMessage
address_	protob/types.pb.h	/^  ::std::string* address_;$/;"	m	class:TxOutputType
address_n	protob/messages.pb.h	/^CipherKeyValue::address_n() const {$/;"	f	class:CipherKeyValue
address_n	protob/messages.pb.h	/^DecryptMessage::address_n() const {$/;"	f	class:DecryptMessage
address_n	protob/messages.pb.h	/^EncryptMessage::address_n() const {$/;"	f	class:EncryptMessage
address_n	protob/messages.pb.h	/^GetAddress::address_n() const {$/;"	f	class:GetAddress
address_n	protob/messages.pb.h	/^GetPublicKey::address_n() const {$/;"	f	class:GetPublicKey
address_n	protob/messages.pb.h	/^SignMessage::address_n() const {$/;"	f	class:SignMessage
address_n	protob/messages.pb.h	/^inline ::google::protobuf::uint32 CipherKeyValue::address_n(int index) const {$/;"	f	class:CipherKeyValue
address_n	protob/messages.pb.h	/^inline ::google::protobuf::uint32 DecryptMessage::address_n(int index) const {$/;"	f	class:DecryptMessage
address_n	protob/messages.pb.h	/^inline ::google::protobuf::uint32 EncryptMessage::address_n(int index) const {$/;"	f	class:EncryptMessage
address_n	protob/messages.pb.h	/^inline ::google::protobuf::uint32 GetAddress::address_n(int index) const {$/;"	f	class:GetAddress
address_n	protob/messages.pb.h	/^inline ::google::protobuf::uint32 GetPublicKey::address_n(int index) const {$/;"	f	class:GetPublicKey
address_n	protob/messages.pb.h	/^inline ::google::protobuf::uint32 SignMessage::address_n(int index) const {$/;"	f	class:SignMessage
address_n	protob/types.pb.h	/^TxInputType::address_n() const {$/;"	f	class:TxInputType
address_n	protob/types.pb.h	/^TxOutputType::address_n() const {$/;"	f	class:TxOutputType
address_n	protob/types.pb.h	/^inline ::google::protobuf::uint32 TxInputType::address_n(int index) const {$/;"	f	class:TxInputType
address_n	protob/types.pb.h	/^inline ::google::protobuf::uint32 TxOutputType::address_n(int index) const {$/;"	f	class:TxOutputType
address_n_	protob/messages.pb.h	/^  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > address_n_;$/;"	m	class:CipherKeyValue
address_n_	protob/messages.pb.h	/^  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > address_n_;$/;"	m	class:DecryptMessage
address_n_	protob/messages.pb.h	/^  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > address_n_;$/;"	m	class:EncryptMessage
address_n_	protob/messages.pb.h	/^  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > address_n_;$/;"	m	class:GetAddress
address_n_	protob/messages.pb.h	/^  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > address_n_;$/;"	m	class:GetPublicKey
address_n_	protob/messages.pb.h	/^  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > address_n_;$/;"	m	class:SignMessage
address_n_	protob/types.pb.h	/^  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > address_n_;$/;"	m	class:TxInputType
address_n_	protob/types.pb.h	/^  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > address_n_;$/;"	m	class:TxOutputType
address_n_size	protob/messages.pb.h	/^inline int CipherKeyValue::address_n_size() const {$/;"	f	class:CipherKeyValue
address_n_size	protob/messages.pb.h	/^inline int DecryptMessage::address_n_size() const {$/;"	f	class:DecryptMessage
address_n_size	protob/messages.pb.h	/^inline int EncryptMessage::address_n_size() const {$/;"	f	class:EncryptMessage
address_n_size	protob/messages.pb.h	/^inline int GetAddress::address_n_size() const {$/;"	f	class:GetAddress
address_n_size	protob/messages.pb.h	/^inline int GetPublicKey::address_n_size() const {$/;"	f	class:GetPublicKey
address_n_size	protob/messages.pb.h	/^inline int SignMessage::address_n_size() const {$/;"	f	class:SignMessage
address_n_size	protob/types.pb.h	/^inline int TxInputType::address_n_size() const {$/;"	f	class:TxInputType
address_n_size	protob/types.pb.h	/^inline int TxOutputType::address_n_size() const {$/;"	f	class:TxOutputType
address_type	protob/types.pb.h	/^inline ::google::protobuf::uint32 CoinType::address_type() const {$/;"	f	class:CoinType
address_type_	protob/types.pb.h	/^  ::google::protobuf::uint32 address_type_;$/;"	m	class:CoinType
allowed	easylogging++.h	/^    bool allowed(base::type::VerboseLevel vlevel, const char* file) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::VRegistry
amount	protob/types.pb.h	/^inline ::google::protobuf::uint64 TxOutputBinType::amount() const {$/;"	f	class:TxOutputBinType
amount	protob/types.pb.h	/^inline ::google::protobuf::uint64 TxOutputType::amount() const {$/;"	f	class:TxOutputType
amount_	protob/types.pb.h	/^  ::google::protobuf::uint64 amount_;$/;"	m	class:TxOutputBinType
amount_	protob/types.pb.h	/^  ::google::protobuf::uint64 amount_;$/;"	m	class:TxOutputType
ask_on_decrypt	protob/messages.pb.h	/^inline bool CipherKeyValue::ask_on_decrypt() const {$/;"	f	class:CipherKeyValue
ask_on_decrypt_	protob/messages.pb.h	/^  bool ask_on_decrypt_;$/;"	m	class:CipherKeyValue
ask_on_encrypt	protob/messages.pb.h	/^inline bool CipherKeyValue::ask_on_encrypt() const {$/;"	f	class:CipherKeyValue
ask_on_encrypt_	protob/messages.pb.h	/^  bool ask_on_encrypt_;$/;"	m	class:CipherKeyValue
base	easylogging++.h	/^namespace base {$/;"	n	class:el::Level::ConfigurationType::LoggingFlag
base	easylogging++.h	/^namespace base {$/;"	n	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File
base	easylogging++.h	/^namespace base {$/;"	n	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
base	easylogging++.h	/^namespace base {$/;"	n	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData
base	easylogging++.h	/^namespace base {$/;"	n	namespace:el
base	easylogging++.h	/^namespace base {$/;"	n	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base
base	easylogging++.h	/^namespace base {$/;"	n	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base
base	easylogging++.h	/^namespace base {$/;"	n	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::el
begin	easylogging++.h	/^    iterator begin(void) { return getContainer().begin(); }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::workarounds::IterableContainer
bin_outputs	protob/types.pb.h	/^TransactionType::bin_outputs() const {$/;"	f	class:TransactionType
bin_outputs	protob/types.pb.h	/^inline const ::TxOutputBinType& TransactionType::bin_outputs(int index) const {$/;"	f	class:TransactionType
bin_outputs_	protob/types.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::TxOutputBinType > bin_outputs_;$/;"	m	class:TransactionType
bin_outputs_size	protob/types.pb.h	/^inline int TransactionType::bin_outputs_size() const {$/;"	f	class:TransactionType
bitwise	easylogging++.h	/^namespace bitwise {$/;"	n	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils
blacklist_urls	protob/config.pb.h	/^Configuration::blacklist_urls() const {$/;"	f	class:Configuration
blacklist_urls	protob/config.pb.h	/^inline const ::std::string& Configuration::blacklist_urls(int index) const {$/;"	f	class:Configuration
blacklist_urls_	protob/config.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::std::string> blacklist_urls_;$/;"	m	class:Configuration
blacklist_urls_size	protob/config.pb.h	/^inline int Configuration::blacklist_urls_size() const {$/;"	f	class:Configuration
blockName	easylogging++.h	/^inline const std::string* PerformanceTrackingData::blockName() const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::PerformanceTrackingData
bootloader_hash	protob/messages.pb.h	/^inline const ::std::string& Features::bootloader_hash() const {$/;"	f	class:Features
bootloader_hash_	protob/messages.pb.h	/^  ::std::string* bootloader_hash_;$/;"	m	class:Features
bootloader_mode	protob/messages.pb.h	/^inline bool Features::bootloader_mode() const {$/;"	f	class:Features
bootloader_mode_	protob/messages.pb.h	/^  bool bootloader_mode_;$/;"	m	class:Features
brief	easylogging++.h	/^        const char* brief;$/;"	m	struct:el::Level::ConfigurationType::LoggingFlag::base::consts::__anon10
bucket	protob/messages.pb.h	/^inline const ::std::string& DebugLinkLog::bucket() const {$/;"	f	class:DebugLinkLog
bucket_	protob/messages.pb.h	/^  ::std::string* bucket_;$/;"	m	class:DebugLinkLog
buffer_report	wire.hpp	/^		void buffer_report() {$/;"	f	struct:wire::device
buffer_type	wire.hpp	/^		typedef std::vector<char_type> buffer_type;$/;"	t	struct:wire::device
build	easylogging++.h	/^    base::type::string_t build(const LogMessage* logMessage, bool appendNewLine) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder
build	easylogging++.h	/^    void build(Configurations* configurations) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
button_protection	protob/messages.pb.h	/^inline bool Ping::button_protection() const {$/;"	f	class:Ping
button_protection_	protob/messages.pb.h	/^  bool button_protection_;$/;"	m	class:Ping
cStringCaseEq	easylogging++.h	/^    static bool cStringCaseEq(const char* s1, const char* s2) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Str
cStringEq	easylogging++.h	/^    static inline bool cStringEq(const char* s1, const char* s2) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Str
call	core.hpp	/^		void call(wire::message const &msg_in, wire::message &msg_out) {$/;"	f	struct:core::device_kernel
castFromInt	easylogging++.h	/^    static ConfigurationType castFromInt(base::type::EnumType c) {$/;"	f	class:el::Level::ConfigurationType::ConfigurationTypeHelper
castFromInt	easylogging++.h	/^    static Level castFromInt(base::type::EnumType l) {$/;"	f	class:el::Level::LevelHelper
castToInt	easylogging++.h	/^    static base::type::EnumType castToInt(ConfigurationType configurationType) {$/;"	f	class:el::Level::ConfigurationType::ConfigurationTypeHelper
castToInt	easylogging++.h	/^    static base::type::EnumType castToInt(Level level) {$/;"	f	class:el::Level::LevelHelper
chain_code	protob/types.pb.h	/^inline const ::std::string& HDNodeType::chain_code() const {$/;"	f	class:HDNodeType
chain_code_	protob/types.pb.h	/^  ::std::string* chain_code_;$/;"	m	class:HDNodeType
charPtrVal	easylogging++.h	/^static inline const char* charPtrVal(const char* pointer) {$/;"	f	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils
char_t	easylogging++.h	/^typedef wchar_t char_t;$/;"	t	namespace:el::base::type
char_type	wire.hpp	/^		typedef std::uint8_t char_type;$/;"	t	struct:wire::device
checkNotNull	easylogging++.h	/^static T* checkNotNull(T* ptr, const char* name, const char* loggers, ...) {$/;"	f	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::el::base::utils
checkpointId	easylogging++.h	/^    inline std::string checkpointId(void) const { return m_checkpointId; }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::DataType
child_num	protob/types.pb.h	/^inline ::google::protobuf::uint32 HDNodeType::child_num() const {$/;"	f	class:HDNodeType
child_num_	protob/types.pb.h	/^  ::google::protobuf::uint32 child_num_;$/;"	m	class:HDNodeType
clear	easylogging++.h	/^    inline void clear(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations
clearBuff	easylogging++.h	/^    static inline char* clearBuff(char buff[], std::size_t lim) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Str
clearModules	easylogging++.h	/^    inline void clearModules(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::VRegistry
clear_address	protob/messages.pb.h	/^inline void Address::clear_address() {$/;"	f	class:Address
clear_address	protob/messages.pb.h	/^inline void MessageSignature::clear_address() {$/;"	f	class:MessageSignature
clear_address	protob/messages.pb.h	/^inline void VerifyMessage::clear_address() {$/;"	f	class:VerifyMessage
clear_address	protob/types.pb.h	/^inline void TxOutputType::clear_address() {$/;"	f	class:TxOutputType
clear_address_n	protob/messages.pb.h	/^inline void CipherKeyValue::clear_address_n() {$/;"	f	class:CipherKeyValue
clear_address_n	protob/messages.pb.h	/^inline void DecryptMessage::clear_address_n() {$/;"	f	class:DecryptMessage
clear_address_n	protob/messages.pb.h	/^inline void EncryptMessage::clear_address_n() {$/;"	f	class:EncryptMessage
clear_address_n	protob/messages.pb.h	/^inline void GetAddress::clear_address_n() {$/;"	f	class:GetAddress
clear_address_n	protob/messages.pb.h	/^inline void GetPublicKey::clear_address_n() {$/;"	f	class:GetPublicKey
clear_address_n	protob/messages.pb.h	/^inline void SignMessage::clear_address_n() {$/;"	f	class:SignMessage
clear_address_n	protob/types.pb.h	/^inline void TxInputType::clear_address_n() {$/;"	f	class:TxInputType
clear_address_n	protob/types.pb.h	/^inline void TxOutputType::clear_address_n() {$/;"	f	class:TxOutputType
clear_address_type	protob/types.pb.h	/^inline void CoinType::clear_address_type() {$/;"	f	class:CoinType
clear_amount	protob/types.pb.h	/^inline void TxOutputBinType::clear_amount() {$/;"	f	class:TxOutputBinType
clear_amount	protob/types.pb.h	/^inline void TxOutputType::clear_amount() {$/;"	f	class:TxOutputType
clear_ask_on_decrypt	protob/messages.pb.h	/^inline void CipherKeyValue::clear_ask_on_decrypt() {$/;"	f	class:CipherKeyValue
clear_ask_on_encrypt	protob/messages.pb.h	/^inline void CipherKeyValue::clear_ask_on_encrypt() {$/;"	f	class:CipherKeyValue
clear_bin_outputs	protob/types.pb.h	/^inline void TransactionType::clear_bin_outputs() {$/;"	f	class:TransactionType
clear_blacklist_urls	protob/config.pb.h	/^inline void Configuration::clear_blacklist_urls() {$/;"	f	class:Configuration
clear_bootloader_hash	protob/messages.pb.h	/^inline void Features::clear_bootloader_hash() {$/;"	f	class:Features
clear_bootloader_mode	protob/messages.pb.h	/^inline void Features::clear_bootloader_mode() {$/;"	f	class:Features
clear_bucket	protob/messages.pb.h	/^inline void DebugLinkLog::clear_bucket() {$/;"	f	class:DebugLinkLog
clear_button_protection	protob/messages.pb.h	/^inline void Ping::clear_button_protection() {$/;"	f	class:Ping
clear_chain_code	protob/types.pb.h	/^inline void HDNodeType::clear_chain_code() {$/;"	f	class:HDNodeType
clear_child_num	protob/types.pb.h	/^inline void HDNodeType::clear_child_num() {$/;"	f	class:HDNodeType
clear_code	protob/messages.pb.h	/^inline void ButtonRequest::clear_code() {$/;"	f	class:ButtonRequest
clear_code	protob/messages.pb.h	/^inline void Failure::clear_code() {$/;"	f	class:Failure
clear_coin_name	protob/messages.pb.h	/^inline void EstimateTxSize::clear_coin_name() {$/;"	f	class:EstimateTxSize
clear_coin_name	protob/messages.pb.h	/^inline void GetAddress::clear_coin_name() {$/;"	f	class:GetAddress
clear_coin_name	protob/messages.pb.h	/^inline void SignMessage::clear_coin_name() {$/;"	f	class:SignMessage
clear_coin_name	protob/messages.pb.h	/^inline void SignTx::clear_coin_name() {$/;"	f	class:SignTx
clear_coin_name	protob/messages.pb.h	/^inline void SimpleSignTx::clear_coin_name() {$/;"	f	class:SimpleSignTx
clear_coin_name	protob/types.pb.h	/^inline void CoinType::clear_coin_name() {$/;"	f	class:CoinType
clear_coin_shortcut	protob/types.pb.h	/^inline void CoinType::clear_coin_shortcut() {$/;"	f	class:CoinType
clear_coins	protob/messages.pb.h	/^inline void Features::clear_coins() {$/;"	f	class:Features
clear_cpu_sn	protob/messages.pb.h	/^inline void Features::clear_cpu_sn() {$/;"	f	class:Features
clear_data	protob/messages.pb.h	/^inline void ButtonRequest::clear_data() {$/;"	f	class:ButtonRequest
clear_delay_time	protob/messages.pb.h	/^inline void TestScreen::clear_delay_time() {$/;"	f	class:TestScreen
clear_depth	protob/types.pb.h	/^inline void HDNodeType::clear_depth() {$/;"	f	class:HDNodeType
clear_details	protob/messages.pb.h	/^inline void TxRequest::clear_details() {$/;"	f	class:TxRequest
clear_device_id	protob/messages.pb.h	/^inline void Features::clear_device_id() {$/;"	f	class:Features
clear_display_only	protob/messages.pb.h	/^inline void EncryptMessage::clear_display_only() {$/;"	f	class:EncryptMessage
clear_display_random	protob/messages.pb.h	/^inline void ResetDevice::clear_display_random() {$/;"	f	class:ResetDevice
clear_encrypt	protob/messages.pb.h	/^inline void CipherKeyValue::clear_encrypt() {$/;"	f	class:CipherKeyValue
clear_enforce_wordlist	protob/messages.pb.h	/^inline void RecoveryDevice::clear_enforce_wordlist() {$/;"	f	class:RecoveryDevice
clear_entropy	protob/messages.pb.h	/^inline void Entropy::clear_entropy() {$/;"	f	class:Entropy
clear_entropy	protob/messages.pb.h	/^inline void EntropyAck::clear_entropy() {$/;"	f	class:EntropyAck
clear_fingerprint	protob/types.pb.h	/^inline void HDNodeType::clear_fingerprint() {$/;"	f	class:HDNodeType
clear_has_address	protob/messages.pb.h	/^inline void Address::clear_has_address() {$/;"	f	class:Address
clear_has_address	protob/messages.pb.h	/^inline void MessageSignature::clear_has_address() {$/;"	f	class:MessageSignature
clear_has_address	protob/messages.pb.h	/^inline void VerifyMessage::clear_has_address() {$/;"	f	class:VerifyMessage
clear_has_address	protob/types.pb.h	/^inline void TxOutputType::clear_has_address() {$/;"	f	class:TxOutputType
clear_has_address_type	protob/types.pb.h	/^inline void CoinType::clear_has_address_type() {$/;"	f	class:CoinType
clear_has_amount	protob/types.pb.h	/^inline void TxOutputBinType::clear_has_amount() {$/;"	f	class:TxOutputBinType
clear_has_amount	protob/types.pb.h	/^inline void TxOutputType::clear_has_amount() {$/;"	f	class:TxOutputType
clear_has_ask_on_decrypt	protob/messages.pb.h	/^inline void CipherKeyValue::clear_has_ask_on_decrypt() {$/;"	f	class:CipherKeyValue
clear_has_ask_on_encrypt	protob/messages.pb.h	/^inline void CipherKeyValue::clear_has_ask_on_encrypt() {$/;"	f	class:CipherKeyValue
clear_has_bootloader_hash	protob/messages.pb.h	/^inline void Features::clear_has_bootloader_hash() {$/;"	f	class:Features
clear_has_bootloader_mode	protob/messages.pb.h	/^inline void Features::clear_has_bootloader_mode() {$/;"	f	class:Features
clear_has_bucket	protob/messages.pb.h	/^inline void DebugLinkLog::clear_has_bucket() {$/;"	f	class:DebugLinkLog
clear_has_button_protection	protob/messages.pb.h	/^inline void Ping::clear_has_button_protection() {$/;"	f	class:Ping
clear_has_chain_code	protob/types.pb.h	/^inline void HDNodeType::clear_has_chain_code() {$/;"	f	class:HDNodeType
clear_has_child_num	protob/types.pb.h	/^inline void HDNodeType::clear_has_child_num() {$/;"	f	class:HDNodeType
clear_has_code	protob/messages.pb.h	/^inline void ButtonRequest::clear_has_code() {$/;"	f	class:ButtonRequest
clear_has_code	protob/messages.pb.h	/^inline void Failure::clear_has_code() {$/;"	f	class:Failure
clear_has_coin_name	protob/messages.pb.h	/^inline void EstimateTxSize::clear_has_coin_name() {$/;"	f	class:EstimateTxSize
clear_has_coin_name	protob/messages.pb.h	/^inline void GetAddress::clear_has_coin_name() {$/;"	f	class:GetAddress
clear_has_coin_name	protob/messages.pb.h	/^inline void SignMessage::clear_has_coin_name() {$/;"	f	class:SignMessage
clear_has_coin_name	protob/messages.pb.h	/^inline void SignTx::clear_has_coin_name() {$/;"	f	class:SignTx
clear_has_coin_name	protob/messages.pb.h	/^inline void SimpleSignTx::clear_has_coin_name() {$/;"	f	class:SimpleSignTx
clear_has_coin_name	protob/types.pb.h	/^inline void CoinType::clear_has_coin_name() {$/;"	f	class:CoinType
clear_has_coin_shortcut	protob/types.pb.h	/^inline void CoinType::clear_has_coin_shortcut() {$/;"	f	class:CoinType
clear_has_cpu_sn	protob/messages.pb.h	/^inline void Features::clear_has_cpu_sn() {$/;"	f	class:Features
clear_has_data	protob/messages.pb.h	/^inline void ButtonRequest::clear_has_data() {$/;"	f	class:ButtonRequest
clear_has_delay_time	protob/messages.pb.h	/^inline void TestScreen::clear_has_delay_time() {$/;"	f	class:TestScreen
clear_has_depth	protob/types.pb.h	/^inline void HDNodeType::clear_has_depth() {$/;"	f	class:HDNodeType
clear_has_details	protob/messages.pb.h	/^inline void TxRequest::clear_has_details() {$/;"	f	class:TxRequest
clear_has_device_id	protob/messages.pb.h	/^inline void Features::clear_has_device_id() {$/;"	f	class:Features
clear_has_display_only	protob/messages.pb.h	/^inline void EncryptMessage::clear_has_display_only() {$/;"	f	class:EncryptMessage
clear_has_display_random	protob/messages.pb.h	/^inline void ResetDevice::clear_has_display_random() {$/;"	f	class:ResetDevice
clear_has_encrypt	protob/messages.pb.h	/^inline void CipherKeyValue::clear_has_encrypt() {$/;"	f	class:CipherKeyValue
clear_has_enforce_wordlist	protob/messages.pb.h	/^inline void RecoveryDevice::clear_has_enforce_wordlist() {$/;"	f	class:RecoveryDevice
clear_has_entropy	protob/messages.pb.h	/^inline void Entropy::clear_has_entropy() {$/;"	f	class:Entropy
clear_has_entropy	protob/messages.pb.h	/^inline void EntropyAck::clear_has_entropy() {$/;"	f	class:EntropyAck
clear_has_fingerprint	protob/types.pb.h	/^inline void HDNodeType::clear_has_fingerprint() {$/;"	f	class:HDNodeType
clear_has_imported	protob/messages.pb.h	/^inline void Features::clear_has_imported() {$/;"	f	class:Features
clear_has_imported	protob/storage.pb.h	/^inline void Storage::clear_has_imported() {$/;"	f	class:Storage
clear_has_initialized	protob/messages.pb.h	/^inline void Features::clear_has_initialized() {$/;"	f	class:Features
clear_has_inputs_cnt	protob/types.pb.h	/^inline void TransactionType::clear_has_inputs_cnt() {$/;"	f	class:TransactionType
clear_has_inputs_count	protob/messages.pb.h	/^inline void EstimateTxSize::clear_has_inputs_count() {$/;"	f	class:EstimateTxSize
clear_has_inputs_count	protob/messages.pb.h	/^inline void SignTx::clear_has_inputs_count() {$/;"	f	class:SignTx
clear_has_key	protob/messages.pb.h	/^inline void CipherKeyValue::clear_has_key() {$/;"	f	class:CipherKeyValue
clear_has_label	protob/messages.pb.h	/^inline void ApplySettings::clear_has_label() {$/;"	f	class:ApplySettings
clear_has_label	protob/messages.pb.h	/^inline void Features::clear_has_label() {$/;"	f	class:Features
clear_has_label	protob/messages.pb.h	/^inline void LoadDevice::clear_has_label() {$/;"	f	class:LoadDevice
clear_has_label	protob/messages.pb.h	/^inline void RecoveryDevice::clear_has_label() {$/;"	f	class:RecoveryDevice
clear_has_label	protob/messages.pb.h	/^inline void ResetDevice::clear_has_label() {$/;"	f	class:ResetDevice
clear_has_label	protob/storage.pb.h	/^inline void Storage::clear_has_label() {$/;"	f	class:Storage
clear_has_language	protob/messages.pb.h	/^inline void ApplySettings::clear_has_language() {$/;"	f	class:ApplySettings
clear_has_language	protob/messages.pb.h	/^inline void Features::clear_has_language() {$/;"	f	class:Features
clear_has_language	protob/messages.pb.h	/^inline void LoadDevice::clear_has_language() {$/;"	f	class:LoadDevice
clear_has_language	protob/messages.pb.h	/^inline void RecoveryDevice::clear_has_language() {$/;"	f	class:RecoveryDevice
clear_has_language	protob/messages.pb.h	/^inline void ResetDevice::clear_has_language() {$/;"	f	class:ResetDevice
clear_has_language	protob/storage.pb.h	/^inline void Storage::clear_has_language() {$/;"	f	class:Storage
clear_has_layout	protob/messages.pb.h	/^inline void DebugLinkState::clear_has_layout() {$/;"	f	class:DebugLinkState
clear_has_level	protob/messages.pb.h	/^inline void DebugLinkLog::clear_has_level() {$/;"	f	class:DebugLinkLog
clear_has_lock_time	protob/types.pb.h	/^inline void TransactionType::clear_has_lock_time() {$/;"	f	class:TransactionType
clear_has_major_version	protob/messages.pb.h	/^inline void Features::clear_has_major_version() {$/;"	f	class:Features
clear_has_matrix	protob/messages.pb.h	/^inline void DebugLinkState::clear_has_matrix() {$/;"	f	class:DebugLinkState
clear_has_maxfee_kb	protob/types.pb.h	/^inline void CoinType::clear_has_maxfee_kb() {$/;"	f	class:CoinType
clear_has_message	protob/messages.pb.h	/^inline void DecryptMessage::clear_has_message() {$/;"	f	class:DecryptMessage
clear_has_message	protob/messages.pb.h	/^inline void EncryptMessage::clear_has_message() {$/;"	f	class:EncryptMessage
clear_has_message	protob/messages.pb.h	/^inline void Failure::clear_has_message() {$/;"	f	class:Failure
clear_has_message	protob/messages.pb.h	/^inline void Ping::clear_has_message() {$/;"	f	class:Ping
clear_has_message	protob/messages.pb.h	/^inline void SignMessage::clear_has_message() {$/;"	f	class:SignMessage
clear_has_message	protob/messages.pb.h	/^inline void Success::clear_has_message() {$/;"	f	class:Success
clear_has_message	protob/messages.pb.h	/^inline void VerifyMessage::clear_has_message() {$/;"	f	class:VerifyMessage
clear_has_minor_version	protob/messages.pb.h	/^inline void Features::clear_has_minor_version() {$/;"	f	class:Features
clear_has_mnemonic	protob/messages.pb.h	/^inline void DebugLinkState::clear_has_mnemonic() {$/;"	f	class:DebugLinkState
clear_has_mnemonic	protob/messages.pb.h	/^inline void LoadDevice::clear_has_mnemonic() {$/;"	f	class:LoadDevice
clear_has_mnemonic	protob/storage.pb.h	/^inline void Storage::clear_has_mnemonic() {$/;"	f	class:Storage
clear_has_multisig	protob/types.pb.h	/^inline void TxInputType::clear_has_multisig() {$/;"	f	class:TxInputType
clear_has_node	protob/messages.pb.h	/^inline void DebugLinkState::clear_has_node() {$/;"	f	class:DebugLinkState
clear_has_node	protob/messages.pb.h	/^inline void LoadDevice::clear_has_node() {$/;"	f	class:LoadDevice
clear_has_node	protob/messages.pb.h	/^inline void PublicKey::clear_has_node() {$/;"	f	class:PublicKey
clear_has_node	protob/storage.pb.h	/^inline void Storage::clear_has_node() {$/;"	f	class:Storage
clear_has_outputs_cnt	protob/types.pb.h	/^inline void TransactionType::clear_has_outputs_cnt() {$/;"	f	class:TransactionType
clear_has_outputs_count	protob/messages.pb.h	/^inline void EstimateTxSize::clear_has_outputs_count() {$/;"	f	class:EstimateTxSize
clear_has_outputs_count	protob/messages.pb.h	/^inline void SignTx::clear_has_outputs_count() {$/;"	f	class:SignTx
clear_has_passphrase	protob/messages.pb.h	/^inline void PassphraseAck::clear_has_passphrase() {$/;"	f	class:PassphraseAck
clear_has_passphrase_protection	protob/messages.pb.h	/^inline void DebugLinkState::clear_has_passphrase_protection() {$/;"	f	class:DebugLinkState
clear_has_passphrase_protection	protob/messages.pb.h	/^inline void Features::clear_has_passphrase_protection() {$/;"	f	class:Features
clear_has_passphrase_protection	protob/messages.pb.h	/^inline void LoadDevice::clear_has_passphrase_protection() {$/;"	f	class:LoadDevice
clear_has_passphrase_protection	protob/messages.pb.h	/^inline void Ping::clear_has_passphrase_protection() {$/;"	f	class:Ping
clear_has_passphrase_protection	protob/messages.pb.h	/^inline void RecoveryDevice::clear_has_passphrase_protection() {$/;"	f	class:RecoveryDevice
clear_has_passphrase_protection	protob/messages.pb.h	/^inline void ResetDevice::clear_has_passphrase_protection() {$/;"	f	class:ResetDevice
clear_has_passphrase_protection	protob/storage.pb.h	/^inline void Storage::clear_has_passphrase_protection() {$/;"	f	class:Storage
clear_has_patch_version	protob/messages.pb.h	/^inline void Features::clear_has_patch_version() {$/;"	f	class:Features
clear_has_path	protob/config.pb.h	/^inline void DeviceDescriptor::clear_has_path() {$/;"	f	class:DeviceDescriptor
clear_has_payload	protob/messages.pb.h	/^inline void FirmwareUpload::clear_has_payload() {$/;"	f	class:FirmwareUpload
clear_has_payload	protob/messages.pb.h	/^inline void Success::clear_has_payload() {$/;"	f	class:Success
clear_has_pin	protob/messages.pb.h	/^inline void DebugLinkState::clear_has_pin() {$/;"	f	class:DebugLinkState
clear_has_pin	protob/messages.pb.h	/^inline void LoadDevice::clear_has_pin() {$/;"	f	class:LoadDevice
clear_has_pin	protob/messages.pb.h	/^inline void PinMatrixAck::clear_has_pin() {$/;"	f	class:PinMatrixAck
clear_has_pin	protob/storage.pb.h	/^inline void Storage::clear_has_pin() {$/;"	f	class:Storage
clear_has_pin_failed_attempts	protob/storage.pb.h	/^inline void Storage::clear_has_pin_failed_attempts() {$/;"	f	class:Storage
clear_has_pin_protection	protob/messages.pb.h	/^inline void Features::clear_has_pin_protection() {$/;"	f	class:Features
clear_has_pin_protection	protob/messages.pb.h	/^inline void Ping::clear_has_pin_protection() {$/;"	f	class:Ping
clear_has_pin_protection	protob/messages.pb.h	/^inline void RecoveryDevice::clear_has_pin_protection() {$/;"	f	class:RecoveryDevice
clear_has_pin_protection	protob/messages.pb.h	/^inline void ResetDevice::clear_has_pin_protection() {$/;"	f	class:ResetDevice
clear_has_prev_hash	protob/types.pb.h	/^inline void TxInputType::clear_has_prev_hash() {$/;"	f	class:TxInputType
clear_has_prev_index	protob/types.pb.h	/^inline void TxInputType::clear_has_prev_index() {$/;"	f	class:TxInputType
clear_has_private_key	protob/types.pb.h	/^inline void HDNodeType::clear_has_private_key() {$/;"	f	class:HDNodeType
clear_has_product_id	protob/config.pb.h	/^inline void DeviceDescriptor::clear_has_product_id() {$/;"	f	class:DeviceDescriptor
clear_has_pubkey	protob/messages.pb.h	/^inline void EncryptMessage::clear_has_pubkey() {$/;"	f	class:EncryptMessage
clear_has_public_key	protob/types.pb.h	/^inline void HDNodeType::clear_has_public_key() {$/;"	f	class:HDNodeType
clear_has_recovery_fake_word	protob/messages.pb.h	/^inline void DebugLinkState::clear_has_recovery_fake_word() {$/;"	f	class:DebugLinkState
clear_has_recovery_word_pos	protob/messages.pb.h	/^inline void DebugLinkState::clear_has_recovery_word_pos() {$/;"	f	class:DebugLinkState
clear_has_remove	protob/messages.pb.h	/^inline void ChangePin::clear_has_remove() {$/;"	f	class:ChangePin
clear_has_request_index	protob/types.pb.h	/^inline void TxRequestDetailsType::clear_has_request_index() {$/;"	f	class:TxRequestDetailsType
clear_has_request_type	protob/messages.pb.h	/^inline void TxRequest::clear_has_request_type() {$/;"	f	class:TxRequest
clear_has_reset_entropy	protob/messages.pb.h	/^inline void DebugLinkState::clear_has_reset_entropy() {$/;"	f	class:DebugLinkState
clear_has_reset_word	protob/messages.pb.h	/^inline void DebugLinkState::clear_has_reset_word() {$/;"	f	class:DebugLinkState
clear_has_revision	protob/messages.pb.h	/^inline void Features::clear_has_revision() {$/;"	f	class:Features
clear_has_script_pubkey	protob/types.pb.h	/^inline void TxOutputBinType::clear_has_script_pubkey() {$/;"	f	class:TxOutputBinType
clear_has_script_sig	protob/types.pb.h	/^inline void TxInputType::clear_has_script_sig() {$/;"	f	class:TxInputType
clear_has_script_type	protob/types.pb.h	/^inline void TxInputType::clear_has_script_type() {$/;"	f	class:TxInputType
clear_has_script_type	protob/types.pb.h	/^inline void TxOutputType::clear_has_script_type() {$/;"	f	class:TxOutputType
clear_has_sequence	protob/types.pb.h	/^inline void TxInputType::clear_has_sequence() {$/;"	f	class:TxInputType
clear_has_serial_number	protob/config.pb.h	/^inline void DeviceDescriptor::clear_has_serial_number() {$/;"	f	class:DeviceDescriptor
clear_has_serialized	protob/messages.pb.h	/^inline void TxRequest::clear_has_serialized() {$/;"	f	class:TxRequest
clear_has_serialized_tx	protob/types.pb.h	/^inline void TxRequestSerializedType::clear_has_serialized_tx() {$/;"	f	class:TxRequestSerializedType
clear_has_show_display	protob/messages.pb.h	/^inline void GetAddress::clear_has_show_display() {$/;"	f	class:GetAddress
clear_has_signature	protob/messages.pb.h	/^inline void MessageSignature::clear_has_signature() {$/;"	f	class:MessageSignature
clear_has_signature	protob/messages.pb.h	/^inline void VerifyMessage::clear_has_signature() {$/;"	f	class:VerifyMessage
clear_has_signature	protob/types.pb.h	/^inline void TxRequestSerializedType::clear_has_signature() {$/;"	f	class:TxRequestSerializedType
clear_has_signature_index	protob/types.pb.h	/^inline void TxRequestSerializedType::clear_has_signature_index() {$/;"	f	class:TxRequestSerializedType
clear_has_size	protob/messages.pb.h	/^inline void GetEntropy::clear_has_size() {$/;"	f	class:GetEntropy
clear_has_skip_checksum	protob/messages.pb.h	/^inline void LoadDevice::clear_has_skip_checksum() {$/;"	f	class:LoadDevice
clear_has_strength	protob/messages.pb.h	/^inline void ResetDevice::clear_has_strength() {$/;"	f	class:ResetDevice
clear_has_text	protob/messages.pb.h	/^inline void DebugLinkLog::clear_has_text() {$/;"	f	class:DebugLinkLog
clear_has_tx	protob/messages.pb.h	/^inline void TxAck::clear_has_tx() {$/;"	f	class:TxAck
clear_has_tx_hash	protob/types.pb.h	/^inline void TxRequestDetailsType::clear_has_tx_hash() {$/;"	f	class:TxRequestDetailsType
clear_has_tx_size	protob/messages.pb.h	/^inline void TxSize::clear_has_tx_size() {$/;"	f	class:TxSize
clear_has_type	protob/messages.pb.h	/^inline void PinMatrixRequest::clear_has_type() {$/;"	f	class:PinMatrixRequest
clear_has_valid_until	protob/config.pb.h	/^inline void Configuration::clear_has_valid_until() {$/;"	f	class:Configuration
clear_has_value	protob/messages.pb.h	/^inline void CipherKeyValue::clear_has_value() {$/;"	f	class:CipherKeyValue
clear_has_vendor	protob/messages.pb.h	/^inline void Features::clear_has_vendor() {$/;"	f	class:Features
clear_has_vendor_id	protob/config.pb.h	/^inline void DeviceDescriptor::clear_has_vendor_id() {$/;"	f	class:DeviceDescriptor
clear_has_version	protob/storage.pb.h	/^inline void Storage::clear_has_version() {$/;"	f	class:Storage
clear_has_version	protob/types.pb.h	/^inline void TransactionType::clear_has_version() {$/;"	f	class:TransactionType
clear_has_wire_protocol	protob/config.pb.h	/^inline void Configuration::clear_has_wire_protocol() {$/;"	f	class:Configuration
clear_has_word	protob/messages.pb.h	/^inline void WordAck::clear_has_word() {$/;"	f	class:WordAck
clear_has_word_count	protob/messages.pb.h	/^inline void RecoveryDevice::clear_has_word_count() {$/;"	f	class:RecoveryDevice
clear_has_xpub	protob/messages.pb.h	/^inline void PublicKey::clear_has_xpub() {$/;"	f	class:PublicKey
clear_has_yes_no	protob/messages.pb.h	/^inline void DebugLinkDecision::clear_has_yes_no() {$/;"	f	class:DebugLinkDecision
clear_imported	protob/messages.pb.h	/^inline void Features::clear_imported() {$/;"	f	class:Features
clear_imported	protob/storage.pb.h	/^inline void Storage::clear_imported() {$/;"	f	class:Storage
clear_initialized	protob/messages.pb.h	/^inline void Features::clear_initialized() {$/;"	f	class:Features
clear_inputs	protob/messages.pb.h	/^inline void SimpleSignTx::clear_inputs() {$/;"	f	class:SimpleSignTx
clear_inputs	protob/types.pb.h	/^inline void TransactionType::clear_inputs() {$/;"	f	class:TransactionType
clear_inputs_cnt	protob/types.pb.h	/^inline void TransactionType::clear_inputs_cnt() {$/;"	f	class:TransactionType
clear_inputs_count	protob/messages.pb.h	/^inline void EstimateTxSize::clear_inputs_count() {$/;"	f	class:EstimateTxSize
clear_inputs_count	protob/messages.pb.h	/^inline void SignTx::clear_inputs_count() {$/;"	f	class:SignTx
clear_key	protob/messages.pb.h	/^inline void CipherKeyValue::clear_key() {$/;"	f	class:CipherKeyValue
clear_known_devices	protob/config.pb.h	/^inline void Configuration::clear_known_devices() {$/;"	f	class:Configuration
clear_label	protob/messages.pb.h	/^inline void ApplySettings::clear_label() {$/;"	f	class:ApplySettings
clear_label	protob/messages.pb.h	/^inline void Features::clear_label() {$/;"	f	class:Features
clear_label	protob/messages.pb.h	/^inline void LoadDevice::clear_label() {$/;"	f	class:LoadDevice
clear_label	protob/messages.pb.h	/^inline void RecoveryDevice::clear_label() {$/;"	f	class:RecoveryDevice
clear_label	protob/messages.pb.h	/^inline void ResetDevice::clear_label() {$/;"	f	class:ResetDevice
clear_label	protob/storage.pb.h	/^inline void Storage::clear_label() {$/;"	f	class:Storage
clear_language	protob/messages.pb.h	/^inline void ApplySettings::clear_language() {$/;"	f	class:ApplySettings
clear_language	protob/messages.pb.h	/^inline void Features::clear_language() {$/;"	f	class:Features
clear_language	protob/messages.pb.h	/^inline void LoadDevice::clear_language() {$/;"	f	class:LoadDevice
clear_language	protob/messages.pb.h	/^inline void RecoveryDevice::clear_language() {$/;"	f	class:RecoveryDevice
clear_language	protob/messages.pb.h	/^inline void ResetDevice::clear_language() {$/;"	f	class:ResetDevice
clear_language	protob/storage.pb.h	/^inline void Storage::clear_language() {$/;"	f	class:Storage
clear_layout	protob/messages.pb.h	/^inline void DebugLinkState::clear_layout() {$/;"	f	class:DebugLinkState
clear_level	protob/messages.pb.h	/^inline void DebugLinkLog::clear_level() {$/;"	f	class:DebugLinkLog
clear_lock_time	protob/types.pb.h	/^inline void TransactionType::clear_lock_time() {$/;"	f	class:TransactionType
clear_major_version	protob/messages.pb.h	/^inline void Features::clear_major_version() {$/;"	f	class:Features
clear_matrix	protob/messages.pb.h	/^inline void DebugLinkState::clear_matrix() {$/;"	f	class:DebugLinkState
clear_maxfee_kb	protob/types.pb.h	/^inline void CoinType::clear_maxfee_kb() {$/;"	f	class:CoinType
clear_message	protob/messages.pb.h	/^inline void DecryptMessage::clear_message() {$/;"	f	class:DecryptMessage
clear_message	protob/messages.pb.h	/^inline void EncryptMessage::clear_message() {$/;"	f	class:EncryptMessage
clear_message	protob/messages.pb.h	/^inline void Failure::clear_message() {$/;"	f	class:Failure
clear_message	protob/messages.pb.h	/^inline void Ping::clear_message() {$/;"	f	class:Ping
clear_message	protob/messages.pb.h	/^inline void SignMessage::clear_message() {$/;"	f	class:SignMessage
clear_message	protob/messages.pb.h	/^inline void Success::clear_message() {$/;"	f	class:Success
clear_message	protob/messages.pb.h	/^inline void VerifyMessage::clear_message() {$/;"	f	class:VerifyMessage
clear_minor_version	protob/messages.pb.h	/^inline void Features::clear_minor_version() {$/;"	f	class:Features
clear_mnemonic	protob/messages.pb.h	/^inline void DebugLinkState::clear_mnemonic() {$/;"	f	class:DebugLinkState
clear_mnemonic	protob/messages.pb.h	/^inline void LoadDevice::clear_mnemonic() {$/;"	f	class:LoadDevice
clear_mnemonic	protob/storage.pb.h	/^inline void Storage::clear_mnemonic() {$/;"	f	class:Storage
clear_multisig	protob/types.pb.h	/^inline void TxInputType::clear_multisig() {$/;"	f	class:TxInputType
clear_node	protob/messages.pb.h	/^inline void DebugLinkState::clear_node() {$/;"	f	class:DebugLinkState
clear_node	protob/messages.pb.h	/^inline void LoadDevice::clear_node() {$/;"	f	class:LoadDevice
clear_node	protob/messages.pb.h	/^inline void PublicKey::clear_node() {$/;"	f	class:PublicKey
clear_node	protob/storage.pb.h	/^inline void Storage::clear_node() {$/;"	f	class:Storage
clear_outputs	protob/messages.pb.h	/^inline void SimpleSignTx::clear_outputs() {$/;"	f	class:SimpleSignTx
clear_outputs	protob/types.pb.h	/^inline void TransactionType::clear_outputs() {$/;"	f	class:TransactionType
clear_outputs_cnt	protob/types.pb.h	/^inline void TransactionType::clear_outputs_cnt() {$/;"	f	class:TransactionType
clear_outputs_count	protob/messages.pb.h	/^inline void EstimateTxSize::clear_outputs_count() {$/;"	f	class:EstimateTxSize
clear_outputs_count	protob/messages.pb.h	/^inline void SignTx::clear_outputs_count() {$/;"	f	class:SignTx
clear_passphrase	protob/messages.pb.h	/^inline void PassphraseAck::clear_passphrase() {$/;"	f	class:PassphraseAck
clear_passphrase_protection	protob/messages.pb.h	/^inline void DebugLinkState::clear_passphrase_protection() {$/;"	f	class:DebugLinkState
clear_passphrase_protection	protob/messages.pb.h	/^inline void Features::clear_passphrase_protection() {$/;"	f	class:Features
clear_passphrase_protection	protob/messages.pb.h	/^inline void LoadDevice::clear_passphrase_protection() {$/;"	f	class:LoadDevice
clear_passphrase_protection	protob/messages.pb.h	/^inline void Ping::clear_passphrase_protection() {$/;"	f	class:Ping
clear_passphrase_protection	protob/messages.pb.h	/^inline void RecoveryDevice::clear_passphrase_protection() {$/;"	f	class:RecoveryDevice
clear_passphrase_protection	protob/messages.pb.h	/^inline void ResetDevice::clear_passphrase_protection() {$/;"	f	class:ResetDevice
clear_passphrase_protection	protob/storage.pb.h	/^inline void Storage::clear_passphrase_protection() {$/;"	f	class:Storage
clear_patch_version	protob/messages.pb.h	/^inline void Features::clear_patch_version() {$/;"	f	class:Features
clear_path	protob/config.pb.h	/^inline void DeviceDescriptor::clear_path() {$/;"	f	class:DeviceDescriptor
clear_payload	protob/messages.pb.h	/^inline void FirmwareUpload::clear_payload() {$/;"	f	class:FirmwareUpload
clear_payload	protob/messages.pb.h	/^inline void Success::clear_payload() {$/;"	f	class:Success
clear_pin	protob/messages.pb.h	/^inline void DebugLinkState::clear_pin() {$/;"	f	class:DebugLinkState
clear_pin	protob/messages.pb.h	/^inline void LoadDevice::clear_pin() {$/;"	f	class:LoadDevice
clear_pin	protob/messages.pb.h	/^inline void PinMatrixAck::clear_pin() {$/;"	f	class:PinMatrixAck
clear_pin	protob/storage.pb.h	/^inline void Storage::clear_pin() {$/;"	f	class:Storage
clear_pin_failed_attempts	protob/storage.pb.h	/^inline void Storage::clear_pin_failed_attempts() {$/;"	f	class:Storage
clear_pin_protection	protob/messages.pb.h	/^inline void Features::clear_pin_protection() {$/;"	f	class:Features
clear_pin_protection	protob/messages.pb.h	/^inline void Ping::clear_pin_protection() {$/;"	f	class:Ping
clear_pin_protection	protob/messages.pb.h	/^inline void RecoveryDevice::clear_pin_protection() {$/;"	f	class:RecoveryDevice
clear_pin_protection	protob/messages.pb.h	/^inline void ResetDevice::clear_pin_protection() {$/;"	f	class:ResetDevice
clear_prev_hash	protob/types.pb.h	/^inline void TxInputType::clear_prev_hash() {$/;"	f	class:TxInputType
clear_prev_index	protob/types.pb.h	/^inline void TxInputType::clear_prev_index() {$/;"	f	class:TxInputType
clear_private_key	protob/types.pb.h	/^inline void HDNodeType::clear_private_key() {$/;"	f	class:HDNodeType
clear_product_id	protob/config.pb.h	/^inline void DeviceDescriptor::clear_product_id() {$/;"	f	class:DeviceDescriptor
clear_pubkey	protob/messages.pb.h	/^inline void EncryptMessage::clear_pubkey() {$/;"	f	class:EncryptMessage
clear_pubkeys	protob/types.pb.h	/^inline void MultisigRedeemScriptType::clear_pubkeys() {$/;"	f	class:MultisigRedeemScriptType
clear_public_key	protob/types.pb.h	/^inline void HDNodeType::clear_public_key() {$/;"	f	class:HDNodeType
clear_recovery_fake_word	protob/messages.pb.h	/^inline void DebugLinkState::clear_recovery_fake_word() {$/;"	f	class:DebugLinkState
clear_recovery_word_pos	protob/messages.pb.h	/^inline void DebugLinkState::clear_recovery_word_pos() {$/;"	f	class:DebugLinkState
clear_remove	protob/messages.pb.h	/^inline void ChangePin::clear_remove() {$/;"	f	class:ChangePin
clear_request_index	protob/types.pb.h	/^inline void TxRequestDetailsType::clear_request_index() {$/;"	f	class:TxRequestDetailsType
clear_request_type	protob/messages.pb.h	/^inline void TxRequest::clear_request_type() {$/;"	f	class:TxRequest
clear_reset_entropy	protob/messages.pb.h	/^inline void DebugLinkState::clear_reset_entropy() {$/;"	f	class:DebugLinkState
clear_reset_word	protob/messages.pb.h	/^inline void DebugLinkState::clear_reset_word() {$/;"	f	class:DebugLinkState
clear_revision	protob/messages.pb.h	/^inline void Features::clear_revision() {$/;"	f	class:Features
clear_script_pubkey	protob/types.pb.h	/^inline void TxOutputBinType::clear_script_pubkey() {$/;"	f	class:TxOutputBinType
clear_script_sig	protob/types.pb.h	/^inline void TxInputType::clear_script_sig() {$/;"	f	class:TxInputType
clear_script_type	protob/types.pb.h	/^inline void TxInputType::clear_script_type() {$/;"	f	class:TxInputType
clear_script_type	protob/types.pb.h	/^inline void TxOutputType::clear_script_type() {$/;"	f	class:TxOutputType
clear_sequence	protob/types.pb.h	/^inline void TxInputType::clear_sequence() {$/;"	f	class:TxInputType
clear_serial_number	protob/config.pb.h	/^inline void DeviceDescriptor::clear_serial_number() {$/;"	f	class:DeviceDescriptor
clear_serialized	protob/messages.pb.h	/^inline void TxRequest::clear_serialized() {$/;"	f	class:TxRequest
clear_serialized_tx	protob/types.pb.h	/^inline void TxRequestSerializedType::clear_serialized_tx() {$/;"	f	class:TxRequestSerializedType
clear_show_display	protob/messages.pb.h	/^inline void GetAddress::clear_show_display() {$/;"	f	class:GetAddress
clear_signature	protob/messages.pb.h	/^inline void MessageSignature::clear_signature() {$/;"	f	class:MessageSignature
clear_signature	protob/messages.pb.h	/^inline void VerifyMessage::clear_signature() {$/;"	f	class:VerifyMessage
clear_signature	protob/types.pb.h	/^inline void TxRequestSerializedType::clear_signature() {$/;"	f	class:TxRequestSerializedType
clear_signature_index	protob/types.pb.h	/^inline void TxRequestSerializedType::clear_signature_index() {$/;"	f	class:TxRequestSerializedType
clear_signatures	protob/types.pb.h	/^inline void MultisigRedeemScriptType::clear_signatures() {$/;"	f	class:MultisigRedeemScriptType
clear_size	protob/messages.pb.h	/^inline void GetEntropy::clear_size() {$/;"	f	class:GetEntropy
clear_skip_checksum	protob/messages.pb.h	/^inline void LoadDevice::clear_skip_checksum() {$/;"	f	class:LoadDevice
clear_strength	protob/messages.pb.h	/^inline void ResetDevice::clear_strength() {$/;"	f	class:ResetDevice
clear_text	protob/messages.pb.h	/^inline void DebugLinkLog::clear_text() {$/;"	f	class:DebugLinkLog
clear_transactions	protob/messages.pb.h	/^inline void SimpleSignTx::clear_transactions() {$/;"	f	class:SimpleSignTx
clear_tx	protob/messages.pb.h	/^inline void TxAck::clear_tx() {$/;"	f	class:TxAck
clear_tx_hash	protob/types.pb.h	/^inline void TxRequestDetailsType::clear_tx_hash() {$/;"	f	class:TxRequestDetailsType
clear_tx_size	protob/messages.pb.h	/^inline void TxSize::clear_tx_size() {$/;"	f	class:TxSize
clear_type	protob/messages.pb.h	/^inline void PinMatrixRequest::clear_type() {$/;"	f	class:PinMatrixRequest
clear_valid_until	protob/config.pb.h	/^inline void Configuration::clear_valid_until() {$/;"	f	class:Configuration
clear_value	protob/messages.pb.h	/^inline void CipherKeyValue::clear_value() {$/;"	f	class:CipherKeyValue
clear_vendor	protob/messages.pb.h	/^inline void Features::clear_vendor() {$/;"	f	class:Features
clear_vendor_id	protob/config.pb.h	/^inline void DeviceDescriptor::clear_vendor_id() {$/;"	f	class:DeviceDescriptor
clear_version	protob/storage.pb.h	/^inline void Storage::clear_version() {$/;"	f	class:Storage
clear_version	protob/types.pb.h	/^inline void TransactionType::clear_version() {$/;"	f	class:TransactionType
clear_whitelist_urls	protob/config.pb.h	/^inline void Configuration::clear_whitelist_urls() {$/;"	f	class:Configuration
clear_wire_protocol	protob/config.pb.h	/^inline void Configuration::clear_wire_protocol() {$/;"	f	class:Configuration
clear_word	protob/messages.pb.h	/^inline void WordAck::clear_word() {$/;"	f	class:WordAck
clear_word_count	protob/messages.pb.h	/^inline void RecoveryDevice::clear_word_count() {$/;"	f	class:RecoveryDevice
clear_xpub	protob/messages.pb.h	/^inline void PublicKey::clear_xpub() {$/;"	f	class:PublicKey
clear_yes_no	protob/messages.pb.h	/^inline void DebugLinkDecision::clear_yes_no() {$/;"	f	class:DebugLinkDecision
close	core.hpp	/^		void close() {$/;"	f	struct:core::device_kernel
code	protob/messages.pb.h	/^inline ::ButtonRequestType ButtonRequest::code() const {$/;"	f	class:ButtonRequest
code	protob/messages.pb.h	/^inline ::FailureType Failure::code() const {$/;"	f	class:Failure
code_	protob/messages.pb.h	/^  int code_;$/;"	m	class:ButtonRequest
code_	protob/messages.pb.h	/^  int code_;$/;"	m	class:Failure
coin_name	protob/messages.pb.h	/^inline const ::std::string& EstimateTxSize::coin_name() const {$/;"	f	class:EstimateTxSize
coin_name	protob/messages.pb.h	/^inline const ::std::string& GetAddress::coin_name() const {$/;"	f	class:GetAddress
coin_name	protob/messages.pb.h	/^inline const ::std::string& SignMessage::coin_name() const {$/;"	f	class:SignMessage
coin_name	protob/messages.pb.h	/^inline const ::std::string& SignTx::coin_name() const {$/;"	f	class:SignTx
coin_name	protob/messages.pb.h	/^inline const ::std::string& SimpleSignTx::coin_name() const {$/;"	f	class:SimpleSignTx
coin_name	protob/types.pb.h	/^inline const ::std::string& CoinType::coin_name() const {$/;"	f	class:CoinType
coin_name_	protob/messages.pb.h	/^  ::std::string* coin_name_;$/;"	m	class:EstimateTxSize
coin_name_	protob/messages.pb.h	/^  ::std::string* coin_name_;$/;"	m	class:GetAddress
coin_name_	protob/messages.pb.h	/^  ::std::string* coin_name_;$/;"	m	class:SignMessage
coin_name_	protob/messages.pb.h	/^  ::std::string* coin_name_;$/;"	m	class:SignTx
coin_name_	protob/messages.pb.h	/^  ::std::string* coin_name_;$/;"	m	class:SimpleSignTx
coin_name_	protob/types.pb.h	/^  ::std::string* coin_name_;$/;"	m	class:CoinType
coin_shortcut	protob/types.pb.h	/^inline const ::std::string& CoinType::coin_shortcut() const {$/;"	f	class:CoinType
coin_shortcut_	protob/types.pb.h	/^  ::std::string* coin_shortcut_;$/;"	m	class:CoinType
coins	protob/messages.pb.h	/^Features::coins() const {$/;"	f	class:Features
coins	protob/messages.pb.h	/^inline const ::CoinType& Features::coins(int index) const {$/;"	f	class:Features
coins_	protob/messages.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::CoinType > coins_;$/;"	m	class:Features
coins_size	protob/messages.pb.h	/^inline int Features::coins_size() const {$/;"	f	class:Features
commandLineArgs	easylogging++.h	/^    inline const base::utils::CommandLineArgs* commandLineArgs(void) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
commandLineArgs	easylogging++.h	/^    static inline const el::base::utils::CommandLineArgs* commandLineArgs(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Helpers
configurationFile	easylogging++.h	/^    inline const std::string& configurationFile(void) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations
configurationType	easylogging++.h	/^    inline ConfigurationType configurationType(void) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configuration
configurations	easylogging++.h	/^    const Configurations* configurations(void) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
configurations	easylogging++.h	/^    inline Configurations* configurations(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
configure	easylogging++.h	/^    void configure(const Configurations& configurations) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
configureFromArg	easylogging++.h	/^    static inline bool configureFromArg(const char* argKey) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Loggers
configureFromGlobal	easylogging++.h	/^    static void configureFromGlobal(const char* globalConfigurationFilePath) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Loggers
configure_logging	main.cpp	/^void configure_logging()$/;"	f
const_iterator	easylogging++.h	/^    typedef typename Container::const_iterator const_iterator;$/;"	t	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::AbstractRegistry
const_iterator	easylogging++.h	/^    typedef typename Container::const_iterator const_iterator;$/;"	t	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::workarounds::IterableContainer
const_iterator	easylogging++.h	/^    typedef typename Registry<T_Ptr, T_Key>::const_iterator const_iterator;$/;"	t	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::Registry
const_iterator	easylogging++.h	/^    typedef typename RegistryWithPred<T_Ptr, Pred>::const_iterator const_iterator;$/;"	t	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::RegistryWithPred
consts	easylogging++.h	/^namespace consts {$/;"	n	namespace:el::Level::ConfigurationType::LoggingFlag::base
contains	easylogging++.h	/^    static inline bool contains(const char* str, char c) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Str
convertAndAddToBuff	easylogging++.h	/^    static inline char* convertAndAddToBuff(std::size_t n, int len, char* buf, const char* bufLim, bool zeroPadded = true) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Str
convertFromString	easylogging++.h	/^    static ConfigurationType convertFromString(const char* configStr) {$/;"	f	class:el::Level::ConfigurationType::ConfigurationTypeHelper
convertFromString	easylogging++.h	/^    static Level convertFromString(const char* levelStr) {$/;"	f	class:el::Level::LevelHelper
convertTemplateToStdString	easylogging++.h	/^    static std::string convertTemplateToStdString(const T& templ) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Helpers
convertToColoredOutput	easylogging++.h	/^    void convertToColoredOutput(base::type::string_t* logLine, Level level) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogBuilder
convertToString	easylogging++.h	/^    static const char* convertToString(ConfigurationType configurationType) {$/;"	f	class:el::Level::ConfigurationType::ConfigurationTypeHelper
convertToString	easylogging++.h	/^    static const char* convertToString(Level level) {$/;"	f	class:el::Level::LevelHelper
core	core.hpp	/^namespace core {$/;"	n
cpu_sn	protob/messages.pb.h	/^inline const ::std::string& Features::cpu_sn() const {$/;"	f	class:Features
cpu_sn_	protob/messages.pb.h	/^  ::std::string* cpu_sn_;$/;"	m	class:Features
crashAbort	easylogging++.h	/^    static inline void crashAbort(int sig, const char* sourceFile = "", unsigned int long line = 0) {  \/\/ NOLINT$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Helpers
crashAbort	easylogging++.h	/^static inline void crashAbort(int sig) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::debug::StackTrace
crashReason	easylogging++.h	/^static std::string crashReason(int sig) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::debug::StackTrace
createPath	easylogging++.h	/^    static bool createPath(const std::string& path) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File
customFormatSpecifiers	easylogging++.h	/^    const std::vector<CustomFormatSpecifier>* customFormatSpecifiers(void) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
data	protob/messages.pb.h	/^inline const ::std::string& ButtonRequest::data() const {$/;"	f	class:ButtonRequest
data	wire.hpp	/^		std::vector<std::uint8_t> data;$/;"	m	struct:wire::message
dataType	easylogging++.h	/^    inline PerformanceTrackingData::DataType dataType(void) const { return m_dataType; }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::DataType
data_	protob/messages.pb.h	/^  ::std::string* data_;$/;"	m	class:ButtonRequest
dateTimeFormat	easylogging++.h	/^    inline const std::string& dateTimeFormat(void) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogFormat
debug	easylogging++.h	/^namespace debug {$/;"	n	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base
deepCopy	easylogging++.h	/^    virtual inline void deepCopy(const AbstractRegistry<T_Ptr, std::vector<T_Ptr*>>& sr) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::RegistryWithPred
defaultConfigurations	easylogging++.h	/^    inline Configurations* defaultConfigurations(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::RegisteredLoggers
defaultConfigurations	easylogging++.h	/^    static inline const Configurations* defaultConfigurations(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Loggers
defaultCrashHandler	easylogging++.h	/^static inline void defaultCrashHandler(int sig) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::debug::StackTrace
defaultPreRollOutCallback	easylogging++.h	/^static inline void defaultPreRollOutCallback(const char*, std::size_t) {}$/;"	f	namespace:el::Level::ConfigurationType::LoggingFlag::base
defaultTypedConfigurations	easylogging++.h	/^    static base::TypedConfigurations defaultTypedConfigurations(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Loggers
default_instance	protob/config.pb.cc	/^const Configuration& Configuration::default_instance() {$/;"	f	class:Configuration
default_instance	protob/config.pb.cc	/^const DeviceDescriptor& DeviceDescriptor::default_instance() {$/;"	f	class:DeviceDescriptor
default_instance	protob/messages.pb.cc	/^const Address& Address::default_instance() {$/;"	f	class:Address
default_instance	protob/messages.pb.cc	/^const ApplySettings& ApplySettings::default_instance() {$/;"	f	class:ApplySettings
default_instance	protob/messages.pb.cc	/^const ButtonAck& ButtonAck::default_instance() {$/;"	f	class:ButtonAck
default_instance	protob/messages.pb.cc	/^const ButtonRequest& ButtonRequest::default_instance() {$/;"	f	class:ButtonRequest
default_instance	protob/messages.pb.cc	/^const Cancel& Cancel::default_instance() {$/;"	f	class:Cancel
default_instance	protob/messages.pb.cc	/^const ChangePin& ChangePin::default_instance() {$/;"	f	class:ChangePin
default_instance	protob/messages.pb.cc	/^const CipherKeyValue& CipherKeyValue::default_instance() {$/;"	f	class:CipherKeyValue
default_instance	protob/messages.pb.cc	/^const ClearSession& ClearSession::default_instance() {$/;"	f	class:ClearSession
default_instance	protob/messages.pb.cc	/^const DebugLinkDecision& DebugLinkDecision::default_instance() {$/;"	f	class:DebugLinkDecision
default_instance	protob/messages.pb.cc	/^const DebugLinkGetState& DebugLinkGetState::default_instance() {$/;"	f	class:DebugLinkGetState
default_instance	protob/messages.pb.cc	/^const DebugLinkLog& DebugLinkLog::default_instance() {$/;"	f	class:DebugLinkLog
default_instance	protob/messages.pb.cc	/^const DebugLinkState& DebugLinkState::default_instance() {$/;"	f	class:DebugLinkState
default_instance	protob/messages.pb.cc	/^const DebugLinkStop& DebugLinkStop::default_instance() {$/;"	f	class:DebugLinkStop
default_instance	protob/messages.pb.cc	/^const DecryptMessage& DecryptMessage::default_instance() {$/;"	f	class:DecryptMessage
default_instance	protob/messages.pb.cc	/^const EncryptMessage& EncryptMessage::default_instance() {$/;"	f	class:EncryptMessage
default_instance	protob/messages.pb.cc	/^const Entropy& Entropy::default_instance() {$/;"	f	class:Entropy
default_instance	protob/messages.pb.cc	/^const EntropyAck& EntropyAck::default_instance() {$/;"	f	class:EntropyAck
default_instance	protob/messages.pb.cc	/^const EntropyRequest& EntropyRequest::default_instance() {$/;"	f	class:EntropyRequest
default_instance	protob/messages.pb.cc	/^const EstimateTxSize& EstimateTxSize::default_instance() {$/;"	f	class:EstimateTxSize
default_instance	protob/messages.pb.cc	/^const Failure& Failure::default_instance() {$/;"	f	class:Failure
default_instance	protob/messages.pb.cc	/^const Features& Features::default_instance() {$/;"	f	class:Features
default_instance	protob/messages.pb.cc	/^const FirmwareErase& FirmwareErase::default_instance() {$/;"	f	class:FirmwareErase
default_instance	protob/messages.pb.cc	/^const FirmwareUpload& FirmwareUpload::default_instance() {$/;"	f	class:FirmwareUpload
default_instance	protob/messages.pb.cc	/^const GetAddress& GetAddress::default_instance() {$/;"	f	class:GetAddress
default_instance	protob/messages.pb.cc	/^const GetEntropy& GetEntropy::default_instance() {$/;"	f	class:GetEntropy
default_instance	protob/messages.pb.cc	/^const GetPublicKey& GetPublicKey::default_instance() {$/;"	f	class:GetPublicKey
default_instance	protob/messages.pb.cc	/^const Initialize& Initialize::default_instance() {$/;"	f	class:Initialize
default_instance	protob/messages.pb.cc	/^const LoadDevice& LoadDevice::default_instance() {$/;"	f	class:LoadDevice
default_instance	protob/messages.pb.cc	/^const MessageSignature& MessageSignature::default_instance() {$/;"	f	class:MessageSignature
default_instance	protob/messages.pb.cc	/^const PassphraseAck& PassphraseAck::default_instance() {$/;"	f	class:PassphraseAck
default_instance	protob/messages.pb.cc	/^const PassphraseRequest& PassphraseRequest::default_instance() {$/;"	f	class:PassphraseRequest
default_instance	protob/messages.pb.cc	/^const PinMatrixAck& PinMatrixAck::default_instance() {$/;"	f	class:PinMatrixAck
default_instance	protob/messages.pb.cc	/^const PinMatrixRequest& PinMatrixRequest::default_instance() {$/;"	f	class:PinMatrixRequest
default_instance	protob/messages.pb.cc	/^const Ping& Ping::default_instance() {$/;"	f	class:Ping
default_instance	protob/messages.pb.cc	/^const PublicKey& PublicKey::default_instance() {$/;"	f	class:PublicKey
default_instance	protob/messages.pb.cc	/^const RecoveryDevice& RecoveryDevice::default_instance() {$/;"	f	class:RecoveryDevice
default_instance	protob/messages.pb.cc	/^const ResetDevice& ResetDevice::default_instance() {$/;"	f	class:ResetDevice
default_instance	protob/messages.pb.cc	/^const SignMessage& SignMessage::default_instance() {$/;"	f	class:SignMessage
default_instance	protob/messages.pb.cc	/^const SignTx& SignTx::default_instance() {$/;"	f	class:SignTx
default_instance	protob/messages.pb.cc	/^const SimpleSignTx& SimpleSignTx::default_instance() {$/;"	f	class:SimpleSignTx
default_instance	protob/messages.pb.cc	/^const Success& Success::default_instance() {$/;"	f	class:Success
default_instance	protob/messages.pb.cc	/^const TestScreen& TestScreen::default_instance() {$/;"	f	class:TestScreen
default_instance	protob/messages.pb.cc	/^const TxAck& TxAck::default_instance() {$/;"	f	class:TxAck
default_instance	protob/messages.pb.cc	/^const TxRequest& TxRequest::default_instance() {$/;"	f	class:TxRequest
default_instance	protob/messages.pb.cc	/^const TxSize& TxSize::default_instance() {$/;"	f	class:TxSize
default_instance	protob/messages.pb.cc	/^const VerifyMessage& VerifyMessage::default_instance() {$/;"	f	class:VerifyMessage
default_instance	protob/messages.pb.cc	/^const WipeDevice& WipeDevice::default_instance() {$/;"	f	class:WipeDevice
default_instance	protob/messages.pb.cc	/^const WordAck& WordAck::default_instance() {$/;"	f	class:WordAck
default_instance	protob/messages.pb.cc	/^const WordRequest& WordRequest::default_instance() {$/;"	f	class:WordRequest
default_instance	protob/storage.pb.cc	/^const Storage& Storage::default_instance() {$/;"	f	class:Storage
default_instance	protob/types.pb.cc	/^const CoinType& CoinType::default_instance() {$/;"	f	class:CoinType
default_instance	protob/types.pb.cc	/^const HDNodeType& HDNodeType::default_instance() {$/;"	f	class:HDNodeType
default_instance	protob/types.pb.cc	/^const MultisigRedeemScriptType& MultisigRedeemScriptType::default_instance() {$/;"	f	class:MultisigRedeemScriptType
default_instance	protob/types.pb.cc	/^const TransactionType& TransactionType::default_instance() {$/;"	f	class:TransactionType
default_instance	protob/types.pb.cc	/^const TxInputType& TxInputType::default_instance() {$/;"	f	class:TxInputType
default_instance	protob/types.pb.cc	/^const TxOutputBinType& TxOutputBinType::default_instance() {$/;"	f	class:TxOutputBinType
default_instance	protob/types.pb.cc	/^const TxOutputType& TxOutputType::default_instance() {$/;"	f	class:TxOutputType
default_instance	protob/types.pb.cc	/^const TxRequestDetailsType& TxRequestDetailsType::default_instance() {$/;"	f	class:TxRequestDetailsType
default_instance	protob/types.pb.cc	/^const TxRequestSerializedType& TxRequestSerializedType::default_instance() {$/;"	f	class:TxRequestSerializedType
default_instance_	protob/config.pb.cc	/^Configuration* Configuration::default_instance_ = NULL;$/;"	m	class:Configuration	file:
default_instance_	protob/config.pb.cc	/^DeviceDescriptor* DeviceDescriptor::default_instance_ = NULL;$/;"	m	class:DeviceDescriptor	file:
default_instance_	protob/config.pb.h	/^  static Configuration* default_instance_;$/;"	m	class:Configuration
default_instance_	protob/config.pb.h	/^  static DeviceDescriptor* default_instance_;$/;"	m	class:DeviceDescriptor
default_instance_	protob/messages.pb.cc	/^Address* Address::default_instance_ = NULL;$/;"	m	class:Address	file:
default_instance_	protob/messages.pb.cc	/^ApplySettings* ApplySettings::default_instance_ = NULL;$/;"	m	class:ApplySettings	file:
default_instance_	protob/messages.pb.cc	/^ButtonAck* ButtonAck::default_instance_ = NULL;$/;"	m	class:ButtonAck	file:
default_instance_	protob/messages.pb.cc	/^ButtonRequest* ButtonRequest::default_instance_ = NULL;$/;"	m	class:ButtonRequest	file:
default_instance_	protob/messages.pb.cc	/^Cancel* Cancel::default_instance_ = NULL;$/;"	m	class:Cancel	file:
default_instance_	protob/messages.pb.cc	/^ChangePin* ChangePin::default_instance_ = NULL;$/;"	m	class:ChangePin	file:
default_instance_	protob/messages.pb.cc	/^CipherKeyValue* CipherKeyValue::default_instance_ = NULL;$/;"	m	class:CipherKeyValue	file:
default_instance_	protob/messages.pb.cc	/^ClearSession* ClearSession::default_instance_ = NULL;$/;"	m	class:ClearSession	file:
default_instance_	protob/messages.pb.cc	/^DebugLinkDecision* DebugLinkDecision::default_instance_ = NULL;$/;"	m	class:DebugLinkDecision	file:
default_instance_	protob/messages.pb.cc	/^DebugLinkGetState* DebugLinkGetState::default_instance_ = NULL;$/;"	m	class:DebugLinkGetState	file:
default_instance_	protob/messages.pb.cc	/^DebugLinkLog* DebugLinkLog::default_instance_ = NULL;$/;"	m	class:DebugLinkLog	file:
default_instance_	protob/messages.pb.cc	/^DebugLinkState* DebugLinkState::default_instance_ = NULL;$/;"	m	class:DebugLinkState	file:
default_instance_	protob/messages.pb.cc	/^DebugLinkStop* DebugLinkStop::default_instance_ = NULL;$/;"	m	class:DebugLinkStop	file:
default_instance_	protob/messages.pb.cc	/^DecryptMessage* DecryptMessage::default_instance_ = NULL;$/;"	m	class:DecryptMessage	file:
default_instance_	protob/messages.pb.cc	/^EncryptMessage* EncryptMessage::default_instance_ = NULL;$/;"	m	class:EncryptMessage	file:
default_instance_	protob/messages.pb.cc	/^Entropy* Entropy::default_instance_ = NULL;$/;"	m	class:Entropy	file:
default_instance_	protob/messages.pb.cc	/^EntropyAck* EntropyAck::default_instance_ = NULL;$/;"	m	class:EntropyAck	file:
default_instance_	protob/messages.pb.cc	/^EntropyRequest* EntropyRequest::default_instance_ = NULL;$/;"	m	class:EntropyRequest	file:
default_instance_	protob/messages.pb.cc	/^EstimateTxSize* EstimateTxSize::default_instance_ = NULL;$/;"	m	class:EstimateTxSize	file:
default_instance_	protob/messages.pb.cc	/^Failure* Failure::default_instance_ = NULL;$/;"	m	class:Failure	file:
default_instance_	protob/messages.pb.cc	/^Features* Features::default_instance_ = NULL;$/;"	m	class:Features	file:
default_instance_	protob/messages.pb.cc	/^FirmwareErase* FirmwareErase::default_instance_ = NULL;$/;"	m	class:FirmwareErase	file:
default_instance_	protob/messages.pb.cc	/^FirmwareUpload* FirmwareUpload::default_instance_ = NULL;$/;"	m	class:FirmwareUpload	file:
default_instance_	protob/messages.pb.cc	/^GetAddress* GetAddress::default_instance_ = NULL;$/;"	m	class:GetAddress	file:
default_instance_	protob/messages.pb.cc	/^GetEntropy* GetEntropy::default_instance_ = NULL;$/;"	m	class:GetEntropy	file:
default_instance_	protob/messages.pb.cc	/^GetPublicKey* GetPublicKey::default_instance_ = NULL;$/;"	m	class:GetPublicKey	file:
default_instance_	protob/messages.pb.cc	/^Initialize* Initialize::default_instance_ = NULL;$/;"	m	class:Initialize	file:
default_instance_	protob/messages.pb.cc	/^LoadDevice* LoadDevice::default_instance_ = NULL;$/;"	m	class:LoadDevice	file:
default_instance_	protob/messages.pb.cc	/^MessageSignature* MessageSignature::default_instance_ = NULL;$/;"	m	class:MessageSignature	file:
default_instance_	protob/messages.pb.cc	/^PassphraseAck* PassphraseAck::default_instance_ = NULL;$/;"	m	class:PassphraseAck	file:
default_instance_	protob/messages.pb.cc	/^PassphraseRequest* PassphraseRequest::default_instance_ = NULL;$/;"	m	class:PassphraseRequest	file:
default_instance_	protob/messages.pb.cc	/^PinMatrixAck* PinMatrixAck::default_instance_ = NULL;$/;"	m	class:PinMatrixAck	file:
default_instance_	protob/messages.pb.cc	/^PinMatrixRequest* PinMatrixRequest::default_instance_ = NULL;$/;"	m	class:PinMatrixRequest	file:
default_instance_	protob/messages.pb.cc	/^Ping* Ping::default_instance_ = NULL;$/;"	m	class:Ping	file:
default_instance_	protob/messages.pb.cc	/^PublicKey* PublicKey::default_instance_ = NULL;$/;"	m	class:PublicKey	file:
default_instance_	protob/messages.pb.cc	/^RecoveryDevice* RecoveryDevice::default_instance_ = NULL;$/;"	m	class:RecoveryDevice	file:
default_instance_	protob/messages.pb.cc	/^ResetDevice* ResetDevice::default_instance_ = NULL;$/;"	m	class:ResetDevice	file:
default_instance_	protob/messages.pb.cc	/^SignMessage* SignMessage::default_instance_ = NULL;$/;"	m	class:SignMessage	file:
default_instance_	protob/messages.pb.cc	/^SignTx* SignTx::default_instance_ = NULL;$/;"	m	class:SignTx	file:
default_instance_	protob/messages.pb.cc	/^SimpleSignTx* SimpleSignTx::default_instance_ = NULL;$/;"	m	class:SimpleSignTx	file:
default_instance_	protob/messages.pb.cc	/^Success* Success::default_instance_ = NULL;$/;"	m	class:Success	file:
default_instance_	protob/messages.pb.cc	/^TestScreen* TestScreen::default_instance_ = NULL;$/;"	m	class:TestScreen	file:
default_instance_	protob/messages.pb.cc	/^TxAck* TxAck::default_instance_ = NULL;$/;"	m	class:TxAck	file:
default_instance_	protob/messages.pb.cc	/^TxRequest* TxRequest::default_instance_ = NULL;$/;"	m	class:TxRequest	file:
default_instance_	protob/messages.pb.cc	/^TxSize* TxSize::default_instance_ = NULL;$/;"	m	class:TxSize	file:
default_instance_	protob/messages.pb.cc	/^VerifyMessage* VerifyMessage::default_instance_ = NULL;$/;"	m	class:VerifyMessage	file:
default_instance_	protob/messages.pb.cc	/^WipeDevice* WipeDevice::default_instance_ = NULL;$/;"	m	class:WipeDevice	file:
default_instance_	protob/messages.pb.cc	/^WordAck* WordAck::default_instance_ = NULL;$/;"	m	class:WordAck	file:
default_instance_	protob/messages.pb.cc	/^WordRequest* WordRequest::default_instance_ = NULL;$/;"	m	class:WordRequest	file:
default_instance_	protob/messages.pb.h	/^  static Address* default_instance_;$/;"	m	class:Address
default_instance_	protob/messages.pb.h	/^  static ApplySettings* default_instance_;$/;"	m	class:ApplySettings
default_instance_	protob/messages.pb.h	/^  static ButtonAck* default_instance_;$/;"	m	class:ButtonAck
default_instance_	protob/messages.pb.h	/^  static ButtonRequest* default_instance_;$/;"	m	class:ButtonRequest
default_instance_	protob/messages.pb.h	/^  static Cancel* default_instance_;$/;"	m	class:Cancel
default_instance_	protob/messages.pb.h	/^  static ChangePin* default_instance_;$/;"	m	class:ChangePin
default_instance_	protob/messages.pb.h	/^  static CipherKeyValue* default_instance_;$/;"	m	class:CipherKeyValue
default_instance_	protob/messages.pb.h	/^  static ClearSession* default_instance_;$/;"	m	class:ClearSession
default_instance_	protob/messages.pb.h	/^  static DebugLinkDecision* default_instance_;$/;"	m	class:DebugLinkDecision
default_instance_	protob/messages.pb.h	/^  static DebugLinkGetState* default_instance_;$/;"	m	class:DebugLinkGetState
default_instance_	protob/messages.pb.h	/^  static DebugLinkLog* default_instance_;$/;"	m	class:DebugLinkLog
default_instance_	protob/messages.pb.h	/^  static DebugLinkState* default_instance_;$/;"	m	class:DebugLinkState
default_instance_	protob/messages.pb.h	/^  static DebugLinkStop* default_instance_;$/;"	m	class:DebugLinkStop
default_instance_	protob/messages.pb.h	/^  static DecryptMessage* default_instance_;$/;"	m	class:DecryptMessage
default_instance_	protob/messages.pb.h	/^  static EncryptMessage* default_instance_;$/;"	m	class:EncryptMessage
default_instance_	protob/messages.pb.h	/^  static Entropy* default_instance_;$/;"	m	class:Entropy
default_instance_	protob/messages.pb.h	/^  static EntropyAck* default_instance_;$/;"	m	class:EntropyAck
default_instance_	protob/messages.pb.h	/^  static EntropyRequest* default_instance_;$/;"	m	class:EntropyRequest
default_instance_	protob/messages.pb.h	/^  static EstimateTxSize* default_instance_;$/;"	m	class:EstimateTxSize
default_instance_	protob/messages.pb.h	/^  static Failure* default_instance_;$/;"	m	class:Failure
default_instance_	protob/messages.pb.h	/^  static Features* default_instance_;$/;"	m	class:Features
default_instance_	protob/messages.pb.h	/^  static FirmwareErase* default_instance_;$/;"	m	class:FirmwareErase
default_instance_	protob/messages.pb.h	/^  static FirmwareUpload* default_instance_;$/;"	m	class:FirmwareUpload
default_instance_	protob/messages.pb.h	/^  static GetAddress* default_instance_;$/;"	m	class:GetAddress
default_instance_	protob/messages.pb.h	/^  static GetEntropy* default_instance_;$/;"	m	class:GetEntropy
default_instance_	protob/messages.pb.h	/^  static GetPublicKey* default_instance_;$/;"	m	class:GetPublicKey
default_instance_	protob/messages.pb.h	/^  static Initialize* default_instance_;$/;"	m	class:Initialize
default_instance_	protob/messages.pb.h	/^  static LoadDevice* default_instance_;$/;"	m	class:LoadDevice
default_instance_	protob/messages.pb.h	/^  static MessageSignature* default_instance_;$/;"	m	class:MessageSignature
default_instance_	protob/messages.pb.h	/^  static PassphraseAck* default_instance_;$/;"	m	class:PassphraseAck
default_instance_	protob/messages.pb.h	/^  static PassphraseRequest* default_instance_;$/;"	m	class:PassphraseRequest
default_instance_	protob/messages.pb.h	/^  static PinMatrixAck* default_instance_;$/;"	m	class:PinMatrixAck
default_instance_	protob/messages.pb.h	/^  static PinMatrixRequest* default_instance_;$/;"	m	class:PinMatrixRequest
default_instance_	protob/messages.pb.h	/^  static Ping* default_instance_;$/;"	m	class:Ping
default_instance_	protob/messages.pb.h	/^  static PublicKey* default_instance_;$/;"	m	class:PublicKey
default_instance_	protob/messages.pb.h	/^  static RecoveryDevice* default_instance_;$/;"	m	class:RecoveryDevice
default_instance_	protob/messages.pb.h	/^  static ResetDevice* default_instance_;$/;"	m	class:ResetDevice
default_instance_	protob/messages.pb.h	/^  static SignMessage* default_instance_;$/;"	m	class:SignMessage
default_instance_	protob/messages.pb.h	/^  static SignTx* default_instance_;$/;"	m	class:SignTx
default_instance_	protob/messages.pb.h	/^  static SimpleSignTx* default_instance_;$/;"	m	class:SimpleSignTx
default_instance_	protob/messages.pb.h	/^  static Success* default_instance_;$/;"	m	class:Success
default_instance_	protob/messages.pb.h	/^  static TestScreen* default_instance_;$/;"	m	class:TestScreen
default_instance_	protob/messages.pb.h	/^  static TxAck* default_instance_;$/;"	m	class:TxAck
default_instance_	protob/messages.pb.h	/^  static TxRequest* default_instance_;$/;"	m	class:TxRequest
default_instance_	protob/messages.pb.h	/^  static TxSize* default_instance_;$/;"	m	class:TxSize
default_instance_	protob/messages.pb.h	/^  static VerifyMessage* default_instance_;$/;"	m	class:VerifyMessage
default_instance_	protob/messages.pb.h	/^  static WipeDevice* default_instance_;$/;"	m	class:WipeDevice
default_instance_	protob/messages.pb.h	/^  static WordAck* default_instance_;$/;"	m	class:WordAck
default_instance_	protob/messages.pb.h	/^  static WordRequest* default_instance_;$/;"	m	class:WordRequest
default_instance_	protob/storage.pb.cc	/^Storage* Storage::default_instance_ = NULL;$/;"	m	class:Storage	file:
default_instance_	protob/storage.pb.h	/^  static Storage* default_instance_;$/;"	m	class:Storage
default_instance_	protob/types.pb.cc	/^CoinType* CoinType::default_instance_ = NULL;$/;"	m	class:CoinType	file:
default_instance_	protob/types.pb.cc	/^HDNodeType* HDNodeType::default_instance_ = NULL;$/;"	m	class:HDNodeType	file:
default_instance_	protob/types.pb.cc	/^MultisigRedeemScriptType* MultisigRedeemScriptType::default_instance_ = NULL;$/;"	m	class:MultisigRedeemScriptType	file:
default_instance_	protob/types.pb.cc	/^TransactionType* TransactionType::default_instance_ = NULL;$/;"	m	class:TransactionType	file:
default_instance_	protob/types.pb.cc	/^TxInputType* TxInputType::default_instance_ = NULL;$/;"	m	class:TxInputType	file:
default_instance_	protob/types.pb.cc	/^TxOutputBinType* TxOutputBinType::default_instance_ = NULL;$/;"	m	class:TxOutputBinType	file:
default_instance_	protob/types.pb.cc	/^TxOutputType* TxOutputType::default_instance_ = NULL;$/;"	m	class:TxOutputType	file:
default_instance_	protob/types.pb.cc	/^TxRequestDetailsType* TxRequestDetailsType::default_instance_ = NULL;$/;"	m	class:TxRequestDetailsType	file:
default_instance_	protob/types.pb.cc	/^TxRequestSerializedType* TxRequestSerializedType::default_instance_ = NULL;$/;"	m	class:TxRequestSerializedType	file:
default_instance_	protob/types.pb.h	/^  static CoinType* default_instance_;$/;"	m	class:CoinType
default_instance_	protob/types.pb.h	/^  static HDNodeType* default_instance_;$/;"	m	class:HDNodeType
default_instance_	protob/types.pb.h	/^  static MultisigRedeemScriptType* default_instance_;$/;"	m	class:MultisigRedeemScriptType
default_instance_	protob/types.pb.h	/^  static TransactionType* default_instance_;$/;"	m	class:TransactionType
default_instance_	protob/types.pb.h	/^  static TxInputType* default_instance_;$/;"	m	class:TxInputType
default_instance_	protob/types.pb.h	/^  static TxOutputBinType* default_instance_;$/;"	m	class:TxOutputBinType
default_instance_	protob/types.pb.h	/^  static TxOutputType* default_instance_;$/;"	m	class:TxOutputType
default_instance_	protob/types.pb.h	/^  static TxRequestDetailsType* default_instance_;$/;"	m	class:TxRequestDetailsType
default_instance_	protob/types.pb.h	/^  static TxRequestSerializedType* default_instance_;$/;"	m	class:TxRequestSerializedType
delay_time	protob/messages.pb.h	/^inline ::google::protobuf::uint32 TestScreen::delay_time() const {$/;"	f	class:TestScreen
delay_time_	protob/messages.pb.h	/^  ::google::protobuf::uint32 delay_time_;$/;"	m	class:TestScreen
depth	protob/types.pb.h	/^inline ::google::protobuf::uint32 HDNodeType::depth() const {$/;"	f	class:HDNodeType
depth_	protob/types.pb.h	/^  ::google::protobuf::uint32 depth_;$/;"	m	class:HDNodeType
descriptor	protob/config.pb.cc	/^const ::google::protobuf::Descriptor* Configuration::descriptor() {$/;"	f	class:Configuration
descriptor	protob/config.pb.cc	/^const ::google::protobuf::Descriptor* DeviceDescriptor::descriptor() {$/;"	f	class:DeviceDescriptor
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* Address::descriptor() {$/;"	f	class:Address
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* ApplySettings::descriptor() {$/;"	f	class:ApplySettings
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* ButtonAck::descriptor() {$/;"	f	class:ButtonAck
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* ButtonRequest::descriptor() {$/;"	f	class:ButtonRequest
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* Cancel::descriptor() {$/;"	f	class:Cancel
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* ChangePin::descriptor() {$/;"	f	class:ChangePin
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* CipherKeyValue::descriptor() {$/;"	f	class:CipherKeyValue
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* ClearSession::descriptor() {$/;"	f	class:ClearSession
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* DebugLinkDecision::descriptor() {$/;"	f	class:DebugLinkDecision
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* DebugLinkGetState::descriptor() {$/;"	f	class:DebugLinkGetState
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* DebugLinkLog::descriptor() {$/;"	f	class:DebugLinkLog
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* DebugLinkState::descriptor() {$/;"	f	class:DebugLinkState
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* DebugLinkStop::descriptor() {$/;"	f	class:DebugLinkStop
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* DecryptMessage::descriptor() {$/;"	f	class:DecryptMessage
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* EncryptMessage::descriptor() {$/;"	f	class:EncryptMessage
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* Entropy::descriptor() {$/;"	f	class:Entropy
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* EntropyAck::descriptor() {$/;"	f	class:EntropyAck
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* EntropyRequest::descriptor() {$/;"	f	class:EntropyRequest
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* EstimateTxSize::descriptor() {$/;"	f	class:EstimateTxSize
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* Failure::descriptor() {$/;"	f	class:Failure
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* Features::descriptor() {$/;"	f	class:Features
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* FirmwareErase::descriptor() {$/;"	f	class:FirmwareErase
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* FirmwareUpload::descriptor() {$/;"	f	class:FirmwareUpload
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* GetAddress::descriptor() {$/;"	f	class:GetAddress
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* GetEntropy::descriptor() {$/;"	f	class:GetEntropy
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* GetPublicKey::descriptor() {$/;"	f	class:GetPublicKey
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* Initialize::descriptor() {$/;"	f	class:Initialize
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* LoadDevice::descriptor() {$/;"	f	class:LoadDevice
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* MessageSignature::descriptor() {$/;"	f	class:MessageSignature
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* PassphraseAck::descriptor() {$/;"	f	class:PassphraseAck
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* PassphraseRequest::descriptor() {$/;"	f	class:PassphraseRequest
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* PinMatrixAck::descriptor() {$/;"	f	class:PinMatrixAck
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* PinMatrixRequest::descriptor() {$/;"	f	class:PinMatrixRequest
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* Ping::descriptor() {$/;"	f	class:Ping
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* PublicKey::descriptor() {$/;"	f	class:PublicKey
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* RecoveryDevice::descriptor() {$/;"	f	class:RecoveryDevice
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* ResetDevice::descriptor() {$/;"	f	class:ResetDevice
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* SignMessage::descriptor() {$/;"	f	class:SignMessage
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* SignTx::descriptor() {$/;"	f	class:SignTx
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* SimpleSignTx::descriptor() {$/;"	f	class:SimpleSignTx
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* Success::descriptor() {$/;"	f	class:Success
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* TestScreen::descriptor() {$/;"	f	class:TestScreen
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* TxAck::descriptor() {$/;"	f	class:TxAck
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* TxRequest::descriptor() {$/;"	f	class:TxRequest
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* TxSize::descriptor() {$/;"	f	class:TxSize
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* VerifyMessage::descriptor() {$/;"	f	class:VerifyMessage
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* WipeDevice::descriptor() {$/;"	f	class:WipeDevice
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* WordAck::descriptor() {$/;"	f	class:WordAck
descriptor	protob/messages.pb.cc	/^const ::google::protobuf::Descriptor* WordRequest::descriptor() {$/;"	f	class:WordRequest
descriptor	protob/storage.pb.cc	/^const ::google::protobuf::Descriptor* Storage::descriptor() {$/;"	f	class:Storage
descriptor	protob/types.pb.cc	/^const ::google::protobuf::Descriptor* CoinType::descriptor() {$/;"	f	class:CoinType
descriptor	protob/types.pb.cc	/^const ::google::protobuf::Descriptor* HDNodeType::descriptor() {$/;"	f	class:HDNodeType
descriptor	protob/types.pb.cc	/^const ::google::protobuf::Descriptor* MultisigRedeemScriptType::descriptor() {$/;"	f	class:MultisigRedeemScriptType
descriptor	protob/types.pb.cc	/^const ::google::protobuf::Descriptor* TransactionType::descriptor() {$/;"	f	class:TransactionType
descriptor	protob/types.pb.cc	/^const ::google::protobuf::Descriptor* TxInputType::descriptor() {$/;"	f	class:TxInputType
descriptor	protob/types.pb.cc	/^const ::google::protobuf::Descriptor* TxOutputBinType::descriptor() {$/;"	f	class:TxOutputBinType
descriptor	protob/types.pb.cc	/^const ::google::protobuf::Descriptor* TxOutputType::descriptor() {$/;"	f	class:TxOutputType
descriptor	protob/types.pb.cc	/^const ::google::protobuf::Descriptor* TxRequestDetailsType::descriptor() {$/;"	f	class:TxRequestDetailsType
descriptor	protob/types.pb.cc	/^const ::google::protobuf::Descriptor* TxRequestSerializedType::descriptor() {$/;"	f	class:TxRequestSerializedType
detail	easylogging++.h	/^        const char* detail;$/;"	m	struct:el::Level::ConfigurationType::LoggingFlag::base::consts::__anon10
details	protob/messages.pb.h	/^inline const ::TxRequestDetailsType& TxRequest::details() const {$/;"	f	class:TxRequest
details_	protob/messages.pb.h	/^  ::TxRequestDetailsType* details_;$/;"	m	class:TxRequest
device	core.hpp	/^			std::unique_ptr<wire::device> device;$/;"	m	struct:core::device_kernel
device	wire.hpp	/^		device(char const *path)$/;"	f	struct:wire::device
device	wire.hpp	/^	struct device {$/;"	s	namespace:wire
device_id	protob/messages.pb.h	/^inline const ::std::string& Features::device_id() const {$/;"	f	class:Features
device_id_	protob/messages.pb.h	/^  ::std::string* device_id_;$/;"	m	class:Features
device_info	wire.hpp	/^	struct device_info {$/;"	s	namespace:wire
device_info_list	wire.hpp	/^	typedef std::vector<device_info> device_info_list;$/;"	t	namespace:wire
device_kernel	core.hpp	/^		device_kernel(device_path_type const&dp):device_path{dp} {}$/;"	f	struct:core::device_kernel
device_kernel	core.hpp	/^	struct device_kernel {$/;"	s	namespace:core
dispatch	easylogging++.h	/^    void dispatch(base::type::string_t&& logLine) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::DefaultLogDispatchCallback
dispatch	easylogging++.h	/^    void dispatch(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::LogDispatcher
dispatchAction	easylogging++.h	/^    inline base::DispatchAction dispatchAction(void) const { return m_dispatchAction; }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogDispatchData
display_only	protob/messages.pb.h	/^inline bool EncryptMessage::display_only() const {$/;"	f	class:EncryptMessage
display_only_	protob/messages.pb.h	/^  bool display_only_;$/;"	m	class:EncryptMessage
display_random	protob/messages.pb.h	/^inline bool ResetDevice::display_random() const {$/;"	f	class:ResetDevice
display_random_	protob/messages.pb.h	/^  bool display_random_;$/;"	m	class:ResetDevice
el	easylogging++.h	/^namespace el {$/;"	n
el	easylogging++.h	/^namespace el {$/;"	n	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base
el_getVALength	easylogging++.h	4931;"	d
el_resolveVALength	easylogging++.h	4940;"	d
empty	easylogging++.h	/^    inline bool empty(void) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::CommandLineArgs
enabled	easylogging++.h	/^    inline bool enabled(Level level) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
enabled	easylogging++.h	/^    inline bool enabled(Level level) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
enabled	easylogging++.h	/^    inline bool enabled(void) const { return m_enabled; }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Callback
encrypt	protob/messages.pb.h	/^inline bool CipherKeyValue::encrypt() const {$/;"	f	class:CipherKeyValue
encrypt_	protob/messages.pb.h	/^  bool encrypt_;$/;"	m	class:CipherKeyValue
end	easylogging++.h	/^    iterator end(void) { return getContainer().end(); }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::workarounds::IterableContainer
endTime	easylogging++.h	/^inline const struct timeval* PerformanceTrackingData::endTime() const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::PerformanceTrackingData
endsWith	easylogging++.h	/^    static inline bool endsWith(const std::string& str, const std::string& end) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Str
enforce_wordlist	protob/messages.pb.h	/^inline bool RecoveryDevice::enforce_wordlist() const {$/;"	f	class:RecoveryDevice
enforce_wordlist_	protob/messages.pb.h	/^  bool enforce_wordlist_;$/;"	m	class:RecoveryDevice
entropy	protob/messages.pb.h	/^inline const ::std::string& Entropy::entropy() const {$/;"	f	class:Entropy
entropy	protob/messages.pb.h	/^inline const ::std::string& EntropyAck::entropy() const {$/;"	f	class:EntropyAck
entropy_	protob/messages.pb.h	/^  ::std::string* entropy_;$/;"	m	class:Entropy
entropy_	protob/messages.pb.h	/^  ::std::string* entropy_;$/;"	m	class:EntropyAck
enumerate_connected_devices	wire.hpp	/^	device_info_list enumerate_connected_devices(const boost::optional<int> & vendor_id, const boost::optional <int> & product_id) {$/;"	f	namespace:wire
file	easylogging++.h	/^    inline const char* file(void) const { return m_file; }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::DataType
file	easylogging++.h	/^    inline const std::string& file(void) const { return m_file; }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogMessage
fileStream	easylogging++.h	/^    inline base::type::fstream_t* fileStream(Level level) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
filename	easylogging++.h	/^    inline const char* filename(void) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::HitCounter
filename	easylogging++.h	/^    inline const std::string& filename(Level level) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
fingerprint	protob/types.pb.h	/^inline ::google::protobuf::uint32 HDNodeType::fingerprint() const {$/;"	f	class:HDNodeType
fingerprint_	protob/types.pb.h	/^  ::google::protobuf::uint32 fingerprint_;$/;"	m	class:HDNodeType
firstCheckpoint	easylogging++.h	/^    inline bool firstCheckpoint(void) const { return m_firstCheckpoint; }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::DataType
flags	easylogging++.h	/^    inline base::type::EnumType flags(void) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogFormat
flags	easylogging++.h	/^    inline base::type::EnumType flags(void) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
flush	easylogging++.h	/^    inline void flush(Level level, base::type::fstream_t* fs) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
flush	easylogging++.h	/^    inline void flush(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
flushAll	easylogging++.h	/^    inline void flushAll(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::RegisteredLoggers
flushAll	easylogging++.h	/^    static inline void flushAll(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Loggers
forEachConfigType	easylogging++.h	/^    static inline void forEachConfigType(base::type::EnumType* startIndex, const std::function<bool(void)>& fn) {$/;"	f	class:el::Level::ConfigurationType::ConfigurationTypeHelper
forEachLevel	easylogging++.h	/^    static inline void forEachLevel(base::type::EnumType* startIndex, const std::function<bool(void)>& fn) {$/;"	f	class:el::Level::LevelHelper
format	easylogging++.h	/^    inline const base::type::string_t& format(void) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogFormat
formatSpecifier	easylogging++.h	/^    inline const char* formatSpecifier(void) const { return m_formatSpecifier; }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::CustomFormatSpecifier
formattedTimeTaken	easylogging++.h	/^    inline const base::type::string_t* formattedTimeTaken() const { return &m_formattedTimeTaken; }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::DataType
fstream_t	easylogging++.h	/^typedef std::wfstream fstream_t;$/;"	t	namespace:el::base::type
func	easylogging++.h	/^    inline const char* func(void) const { return m_func; }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::DataType
func	easylogging++.h	/^    inline const std::string& func(void) const { return m_func; }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogMessage
generateNew	easylogging++.h	/^    void generateNew(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::debug::StackTrace
get	easylogging++.h	/^    Logger* get(const std::string& id, bool forceCreation = true) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::RegisteredLoggers
get	easylogging++.h	/^    inline Configuration* get(Level level, ConfigurationType configurationType) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations
get	easylogging++.h	/^    inline T_Ptr* get(const T& arg1, const T2 arg2) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::RegistryWithPred
get	easylogging++.h	/^    inline T_Ptr* get(const T_Key& uniqKey) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::Registry
getBashOutput	easylogging++.h	/^    static const std::string getBashOutput(const char* command) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS
getConfigByRef	easylogging++.h	/^    inline Conf_T& getConfigByRef(Level level, std::map<Level, Conf_T>* confMap, const char* confName) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
getConfigByVal	easylogging++.h	/^    inline Conf_T getConfigByVal(Level level, const std::map<Level, Conf_T>* confMap, const char* confName) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
getContainer	easylogging++.h	/^    inline Container& getContainer(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::workarounds::IterablePriorityQueue
getContainer	easylogging++.h	/^    inline Container& getContainer(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::workarounds::IterableQueue
getContainer	easylogging++.h	/^    inline Container& getContainer(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::workarounds::IterableStack
getCounter	easylogging++.h	/^    inline const base::HitCounter* getCounter(const char* filename, unsigned long int lineNumber) {  \/\/ NOLINT$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::RegisteredHitCounters
getCurrentThreadId	easylogging++.h	/^static inline std::string getCurrentThreadId(void) {$/;"	f	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::threading
getDeviceName	easylogging++.h	/^    static std::string getDeviceName(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS
getLatestStack	easylogging++.h	/^    inline std::vector<StackTraceEntry>& getLatestStack(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::debug::StackTrace
getLogger	easylogging++.h	/^    static inline Logger* getLogger(const std::string& identity, bool registerIfNotAvailable = true) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Loggers
getParamValue	easylogging++.h	/^    inline const char* getParamValue(const char* paramKey) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::CommandLineArgs
getProperty	easylogging++.h	/^    static inline std::string getProperty(const char* prop) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS
getSizeOfFile	easylogging++.h	/^    static std::size_t getSizeOfFile(base::type::fstream_t* fs) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File
getULong	easylogging++.h	/^    unsigned long getULong(std::string confVal) {  \/\/ NOLINT$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
getWindowsEnvironmentVariable	easylogging++.h	/^    static const char* getWindowsEnvironmentVariable(const char* varname) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS
gettimeofday	easylogging++.h	/^    static void gettimeofday(struct timeval* tv) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime
google	protob/config.pb.h	/^namespace google {$/;"	n
google	protob/messages.pb.h	/^namespace google {$/;"	n
google	protob/storage.pb.h	/^namespace google {$/;"	n
google	protob/types.pb.h	/^namespace google {$/;"	n
handle	easylogging++.h	/^    void handle(const LogDispatchData* data) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::DefaultLogDispatchCallback
handle	easylogging++.h	/^    void handle(const PerformanceTrackingData* data) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::PerformanceTracker::DefaultPerformanceTrackingCallback
has	easylogging++.h	/^    inline bool has(const std::string& id) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::RegisteredLoggers
hasConfiguration	easylogging++.h	/^    bool hasConfiguration(ConfigurationType configurationType) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations
hasConfiguration	easylogging++.h	/^    inline bool hasConfiguration(Level level, ConfigurationType configurationType) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations
hasCustomFormatSpecifier	easylogging++.h	/^    inline bool hasCustomFormatSpecifier(const char* formatSpecifier) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
hasCustomFormatSpecifier	easylogging++.h	/^    static inline bool hasCustomFormatSpecifier(const char* formatSpecifier) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Helpers
hasFlag	easylogging++.h	/^    inline bool hasFlag(LoggingFlag flag) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
hasFlag	easylogging++.h	/^    inline bool hasFlag(base::FormatFlags flag) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogFormat
hasFlag	easylogging++.h	/^    static inline bool hasFlag(LoggingFlag flag) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Loggers
hasFlag	easylogging++.h	/^static inline bool hasFlag(Enum e, base::type::EnumType flag) {$/;"	f	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils
hasLogger	easylogging++.h	/^    static inline bool hasLogger(const std::string& identity) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Loggers
hasParam	easylogging++.h	/^    inline bool hasParam(const char* paramKey) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::CommandLineArgs
hasParamWithValue	easylogging++.h	/^    inline bool hasParamWithValue(const char* paramKey) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::CommandLineArgs
has_address	protob/messages.pb.h	/^inline bool Address::has_address() const {$/;"	f	class:Address
has_address	protob/messages.pb.h	/^inline bool MessageSignature::has_address() const {$/;"	f	class:MessageSignature
has_address	protob/messages.pb.h	/^inline bool VerifyMessage::has_address() const {$/;"	f	class:VerifyMessage
has_address	protob/types.pb.h	/^inline bool TxOutputType::has_address() const {$/;"	f	class:TxOutputType
has_address_type	protob/types.pb.h	/^inline bool CoinType::has_address_type() const {$/;"	f	class:CoinType
has_amount	protob/types.pb.h	/^inline bool TxOutputBinType::has_amount() const {$/;"	f	class:TxOutputBinType
has_amount	protob/types.pb.h	/^inline bool TxOutputType::has_amount() const {$/;"	f	class:TxOutputType
has_ask_on_decrypt	protob/messages.pb.h	/^inline bool CipherKeyValue::has_ask_on_decrypt() const {$/;"	f	class:CipherKeyValue
has_ask_on_encrypt	protob/messages.pb.h	/^inline bool CipherKeyValue::has_ask_on_encrypt() const {$/;"	f	class:CipherKeyValue
has_bootloader_hash	protob/messages.pb.h	/^inline bool Features::has_bootloader_hash() const {$/;"	f	class:Features
has_bootloader_mode	protob/messages.pb.h	/^inline bool Features::has_bootloader_mode() const {$/;"	f	class:Features
has_bucket	protob/messages.pb.h	/^inline bool DebugLinkLog::has_bucket() const {$/;"	f	class:DebugLinkLog
has_button_protection	protob/messages.pb.h	/^inline bool Ping::has_button_protection() const {$/;"	f	class:Ping
has_chain_code	protob/types.pb.h	/^inline bool HDNodeType::has_chain_code() const {$/;"	f	class:HDNodeType
has_child_num	protob/types.pb.h	/^inline bool HDNodeType::has_child_num() const {$/;"	f	class:HDNodeType
has_code	protob/messages.pb.h	/^inline bool ButtonRequest::has_code() const {$/;"	f	class:ButtonRequest
has_code	protob/messages.pb.h	/^inline bool Failure::has_code() const {$/;"	f	class:Failure
has_coin_name	protob/messages.pb.h	/^inline bool EstimateTxSize::has_coin_name() const {$/;"	f	class:EstimateTxSize
has_coin_name	protob/messages.pb.h	/^inline bool GetAddress::has_coin_name() const {$/;"	f	class:GetAddress
has_coin_name	protob/messages.pb.h	/^inline bool SignMessage::has_coin_name() const {$/;"	f	class:SignMessage
has_coin_name	protob/messages.pb.h	/^inline bool SignTx::has_coin_name() const {$/;"	f	class:SignTx
has_coin_name	protob/messages.pb.h	/^inline bool SimpleSignTx::has_coin_name() const {$/;"	f	class:SimpleSignTx
has_coin_name	protob/types.pb.h	/^inline bool CoinType::has_coin_name() const {$/;"	f	class:CoinType
has_coin_shortcut	protob/types.pb.h	/^inline bool CoinType::has_coin_shortcut() const {$/;"	f	class:CoinType
has_cpu_sn	protob/messages.pb.h	/^inline bool Features::has_cpu_sn() const {$/;"	f	class:Features
has_data	protob/messages.pb.h	/^inline bool ButtonRequest::has_data() const {$/;"	f	class:ButtonRequest
has_delay_time	protob/messages.pb.h	/^inline bool TestScreen::has_delay_time() const {$/;"	f	class:TestScreen
has_depth	protob/types.pb.h	/^inline bool HDNodeType::has_depth() const {$/;"	f	class:HDNodeType
has_details	protob/messages.pb.h	/^inline bool TxRequest::has_details() const {$/;"	f	class:TxRequest
has_device_id	protob/messages.pb.h	/^inline bool Features::has_device_id() const {$/;"	f	class:Features
has_display_only	protob/messages.pb.h	/^inline bool EncryptMessage::has_display_only() const {$/;"	f	class:EncryptMessage
has_display_random	protob/messages.pb.h	/^inline bool ResetDevice::has_display_random() const {$/;"	f	class:ResetDevice
has_encrypt	protob/messages.pb.h	/^inline bool CipherKeyValue::has_encrypt() const {$/;"	f	class:CipherKeyValue
has_enforce_wordlist	protob/messages.pb.h	/^inline bool RecoveryDevice::has_enforce_wordlist() const {$/;"	f	class:RecoveryDevice
has_entropy	protob/messages.pb.h	/^inline bool Entropy::has_entropy() const {$/;"	f	class:Entropy
has_entropy	protob/messages.pb.h	/^inline bool EntropyAck::has_entropy() const {$/;"	f	class:EntropyAck
has_fingerprint	protob/types.pb.h	/^inline bool HDNodeType::has_fingerprint() const {$/;"	f	class:HDNodeType
has_imported	protob/messages.pb.h	/^inline bool Features::has_imported() const {$/;"	f	class:Features
has_imported	protob/storage.pb.h	/^inline bool Storage::has_imported() const {$/;"	f	class:Storage
has_initialized	protob/messages.pb.h	/^inline bool Features::has_initialized() const {$/;"	f	class:Features
has_inputs_cnt	protob/types.pb.h	/^inline bool TransactionType::has_inputs_cnt() const {$/;"	f	class:TransactionType
has_inputs_count	protob/messages.pb.h	/^inline bool EstimateTxSize::has_inputs_count() const {$/;"	f	class:EstimateTxSize
has_inputs_count	protob/messages.pb.h	/^inline bool SignTx::has_inputs_count() const {$/;"	f	class:SignTx
has_key	protob/messages.pb.h	/^inline bool CipherKeyValue::has_key() const {$/;"	f	class:CipherKeyValue
has_label	protob/messages.pb.h	/^inline bool ApplySettings::has_label() const {$/;"	f	class:ApplySettings
has_label	protob/messages.pb.h	/^inline bool Features::has_label() const {$/;"	f	class:Features
has_label	protob/messages.pb.h	/^inline bool LoadDevice::has_label() const {$/;"	f	class:LoadDevice
has_label	protob/messages.pb.h	/^inline bool RecoveryDevice::has_label() const {$/;"	f	class:RecoveryDevice
has_label	protob/messages.pb.h	/^inline bool ResetDevice::has_label() const {$/;"	f	class:ResetDevice
has_label	protob/storage.pb.h	/^inline bool Storage::has_label() const {$/;"	f	class:Storage
has_language	protob/messages.pb.h	/^inline bool ApplySettings::has_language() const {$/;"	f	class:ApplySettings
has_language	protob/messages.pb.h	/^inline bool Features::has_language() const {$/;"	f	class:Features
has_language	protob/messages.pb.h	/^inline bool LoadDevice::has_language() const {$/;"	f	class:LoadDevice
has_language	protob/messages.pb.h	/^inline bool RecoveryDevice::has_language() const {$/;"	f	class:RecoveryDevice
has_language	protob/messages.pb.h	/^inline bool ResetDevice::has_language() const {$/;"	f	class:ResetDevice
has_language	protob/storage.pb.h	/^inline bool Storage::has_language() const {$/;"	f	class:Storage
has_layout	protob/messages.pb.h	/^inline bool DebugLinkState::has_layout() const {$/;"	f	class:DebugLinkState
has_level	protob/messages.pb.h	/^inline bool DebugLinkLog::has_level() const {$/;"	f	class:DebugLinkLog
has_lock_time	protob/types.pb.h	/^inline bool TransactionType::has_lock_time() const {$/;"	f	class:TransactionType
has_major_version	protob/messages.pb.h	/^inline bool Features::has_major_version() const {$/;"	f	class:Features
has_matrix	protob/messages.pb.h	/^inline bool DebugLinkState::has_matrix() const {$/;"	f	class:DebugLinkState
has_maxfee_kb	protob/types.pb.h	/^inline bool CoinType::has_maxfee_kb() const {$/;"	f	class:CoinType
has_message	protob/messages.pb.h	/^inline bool DecryptMessage::has_message() const {$/;"	f	class:DecryptMessage
has_message	protob/messages.pb.h	/^inline bool EncryptMessage::has_message() const {$/;"	f	class:EncryptMessage
has_message	protob/messages.pb.h	/^inline bool Failure::has_message() const {$/;"	f	class:Failure
has_message	protob/messages.pb.h	/^inline bool Ping::has_message() const {$/;"	f	class:Ping
has_message	protob/messages.pb.h	/^inline bool SignMessage::has_message() const {$/;"	f	class:SignMessage
has_message	protob/messages.pb.h	/^inline bool Success::has_message() const {$/;"	f	class:Success
has_message	protob/messages.pb.h	/^inline bool VerifyMessage::has_message() const {$/;"	f	class:VerifyMessage
has_minor_version	protob/messages.pb.h	/^inline bool Features::has_minor_version() const {$/;"	f	class:Features
has_mnemonic	protob/messages.pb.h	/^inline bool DebugLinkState::has_mnemonic() const {$/;"	f	class:DebugLinkState
has_mnemonic	protob/messages.pb.h	/^inline bool LoadDevice::has_mnemonic() const {$/;"	f	class:LoadDevice
has_mnemonic	protob/storage.pb.h	/^inline bool Storage::has_mnemonic() const {$/;"	f	class:Storage
has_multisig	protob/types.pb.h	/^inline bool TxInputType::has_multisig() const {$/;"	f	class:TxInputType
has_node	protob/messages.pb.h	/^inline bool DebugLinkState::has_node() const {$/;"	f	class:DebugLinkState
has_node	protob/messages.pb.h	/^inline bool LoadDevice::has_node() const {$/;"	f	class:LoadDevice
has_node	protob/messages.pb.h	/^inline bool PublicKey::has_node() const {$/;"	f	class:PublicKey
has_node	protob/storage.pb.h	/^inline bool Storage::has_node() const {$/;"	f	class:Storage
has_outputs_cnt	protob/types.pb.h	/^inline bool TransactionType::has_outputs_cnt() const {$/;"	f	class:TransactionType
has_outputs_count	protob/messages.pb.h	/^inline bool EstimateTxSize::has_outputs_count() const {$/;"	f	class:EstimateTxSize
has_outputs_count	protob/messages.pb.h	/^inline bool SignTx::has_outputs_count() const {$/;"	f	class:SignTx
has_passphrase	protob/messages.pb.h	/^inline bool PassphraseAck::has_passphrase() const {$/;"	f	class:PassphraseAck
has_passphrase_protection	protob/messages.pb.h	/^inline bool DebugLinkState::has_passphrase_protection() const {$/;"	f	class:DebugLinkState
has_passphrase_protection	protob/messages.pb.h	/^inline bool Features::has_passphrase_protection() const {$/;"	f	class:Features
has_passphrase_protection	protob/messages.pb.h	/^inline bool LoadDevice::has_passphrase_protection() const {$/;"	f	class:LoadDevice
has_passphrase_protection	protob/messages.pb.h	/^inline bool Ping::has_passphrase_protection() const {$/;"	f	class:Ping
has_passphrase_protection	protob/messages.pb.h	/^inline bool RecoveryDevice::has_passphrase_protection() const {$/;"	f	class:RecoveryDevice
has_passphrase_protection	protob/messages.pb.h	/^inline bool ResetDevice::has_passphrase_protection() const {$/;"	f	class:ResetDevice
has_passphrase_protection	protob/storage.pb.h	/^inline bool Storage::has_passphrase_protection() const {$/;"	f	class:Storage
has_patch_version	protob/messages.pb.h	/^inline bool Features::has_patch_version() const {$/;"	f	class:Features
has_path	protob/config.pb.h	/^inline bool DeviceDescriptor::has_path() const {$/;"	f	class:DeviceDescriptor
has_payload	protob/messages.pb.h	/^inline bool FirmwareUpload::has_payload() const {$/;"	f	class:FirmwareUpload
has_payload	protob/messages.pb.h	/^inline bool Success::has_payload() const {$/;"	f	class:Success
has_pin	protob/messages.pb.h	/^inline bool DebugLinkState::has_pin() const {$/;"	f	class:DebugLinkState
has_pin	protob/messages.pb.h	/^inline bool LoadDevice::has_pin() const {$/;"	f	class:LoadDevice
has_pin	protob/messages.pb.h	/^inline bool PinMatrixAck::has_pin() const {$/;"	f	class:PinMatrixAck
has_pin	protob/storage.pb.h	/^inline bool Storage::has_pin() const {$/;"	f	class:Storage
has_pin_failed_attempts	protob/storage.pb.h	/^inline bool Storage::has_pin_failed_attempts() const {$/;"	f	class:Storage
has_pin_protection	protob/messages.pb.h	/^inline bool Features::has_pin_protection() const {$/;"	f	class:Features
has_pin_protection	protob/messages.pb.h	/^inline bool Ping::has_pin_protection() const {$/;"	f	class:Ping
has_pin_protection	protob/messages.pb.h	/^inline bool RecoveryDevice::has_pin_protection() const {$/;"	f	class:RecoveryDevice
has_pin_protection	protob/messages.pb.h	/^inline bool ResetDevice::has_pin_protection() const {$/;"	f	class:ResetDevice
has_prev_hash	protob/types.pb.h	/^inline bool TxInputType::has_prev_hash() const {$/;"	f	class:TxInputType
has_prev_index	protob/types.pb.h	/^inline bool TxInputType::has_prev_index() const {$/;"	f	class:TxInputType
has_private_key	protob/types.pb.h	/^inline bool HDNodeType::has_private_key() const {$/;"	f	class:HDNodeType
has_product_id	protob/config.pb.h	/^inline bool DeviceDescriptor::has_product_id() const {$/;"	f	class:DeviceDescriptor
has_pubkey	protob/messages.pb.h	/^inline bool EncryptMessage::has_pubkey() const {$/;"	f	class:EncryptMessage
has_public_key	protob/types.pb.h	/^inline bool HDNodeType::has_public_key() const {$/;"	f	class:HDNodeType
has_recovery_fake_word	protob/messages.pb.h	/^inline bool DebugLinkState::has_recovery_fake_word() const {$/;"	f	class:DebugLinkState
has_recovery_word_pos	protob/messages.pb.h	/^inline bool DebugLinkState::has_recovery_word_pos() const {$/;"	f	class:DebugLinkState
has_remove	protob/messages.pb.h	/^inline bool ChangePin::has_remove() const {$/;"	f	class:ChangePin
has_request_index	protob/types.pb.h	/^inline bool TxRequestDetailsType::has_request_index() const {$/;"	f	class:TxRequestDetailsType
has_request_type	protob/messages.pb.h	/^inline bool TxRequest::has_request_type() const {$/;"	f	class:TxRequest
has_reset_entropy	protob/messages.pb.h	/^inline bool DebugLinkState::has_reset_entropy() const {$/;"	f	class:DebugLinkState
has_reset_word	protob/messages.pb.h	/^inline bool DebugLinkState::has_reset_word() const {$/;"	f	class:DebugLinkState
has_revision	protob/messages.pb.h	/^inline bool Features::has_revision() const {$/;"	f	class:Features
has_script_pubkey	protob/types.pb.h	/^inline bool TxOutputBinType::has_script_pubkey() const {$/;"	f	class:TxOutputBinType
has_script_sig	protob/types.pb.h	/^inline bool TxInputType::has_script_sig() const {$/;"	f	class:TxInputType
has_script_type	protob/types.pb.h	/^inline bool TxInputType::has_script_type() const {$/;"	f	class:TxInputType
has_script_type	protob/types.pb.h	/^inline bool TxOutputType::has_script_type() const {$/;"	f	class:TxOutputType
has_sequence	protob/types.pb.h	/^inline bool TxInputType::has_sequence() const {$/;"	f	class:TxInputType
has_serial_number	protob/config.pb.h	/^inline bool DeviceDescriptor::has_serial_number() const {$/;"	f	class:DeviceDescriptor
has_serialized	protob/messages.pb.h	/^inline bool TxRequest::has_serialized() const {$/;"	f	class:TxRequest
has_serialized_tx	protob/types.pb.h	/^inline bool TxRequestSerializedType::has_serialized_tx() const {$/;"	f	class:TxRequestSerializedType
has_show_display	protob/messages.pb.h	/^inline bool GetAddress::has_show_display() const {$/;"	f	class:GetAddress
has_signature	protob/messages.pb.h	/^inline bool MessageSignature::has_signature() const {$/;"	f	class:MessageSignature
has_signature	protob/messages.pb.h	/^inline bool VerifyMessage::has_signature() const {$/;"	f	class:VerifyMessage
has_signature	protob/types.pb.h	/^inline bool TxRequestSerializedType::has_signature() const {$/;"	f	class:TxRequestSerializedType
has_signature_index	protob/types.pb.h	/^inline bool TxRequestSerializedType::has_signature_index() const {$/;"	f	class:TxRequestSerializedType
has_size	protob/messages.pb.h	/^inline bool GetEntropy::has_size() const {$/;"	f	class:GetEntropy
has_skip_checksum	protob/messages.pb.h	/^inline bool LoadDevice::has_skip_checksum() const {$/;"	f	class:LoadDevice
has_strength	protob/messages.pb.h	/^inline bool ResetDevice::has_strength() const {$/;"	f	class:ResetDevice
has_text	protob/messages.pb.h	/^inline bool DebugLinkLog::has_text() const {$/;"	f	class:DebugLinkLog
has_tx	protob/messages.pb.h	/^inline bool TxAck::has_tx() const {$/;"	f	class:TxAck
has_tx_hash	protob/types.pb.h	/^inline bool TxRequestDetailsType::has_tx_hash() const {$/;"	f	class:TxRequestDetailsType
has_tx_size	protob/messages.pb.h	/^inline bool TxSize::has_tx_size() const {$/;"	f	class:TxSize
has_type	protob/messages.pb.h	/^inline bool PinMatrixRequest::has_type() const {$/;"	f	class:PinMatrixRequest
has_valid_until	protob/config.pb.h	/^inline bool Configuration::has_valid_until() const {$/;"	f	class:Configuration
has_value	protob/messages.pb.h	/^inline bool CipherKeyValue::has_value() const {$/;"	f	class:CipherKeyValue
has_vendor	protob/messages.pb.h	/^inline bool Features::has_vendor() const {$/;"	f	class:Features
has_vendor_id	protob/config.pb.h	/^inline bool DeviceDescriptor::has_vendor_id() const {$/;"	f	class:DeviceDescriptor
has_version	protob/storage.pb.h	/^inline bool Storage::has_version() const {$/;"	f	class:Storage
has_version	protob/types.pb.h	/^inline bool TransactionType::has_version() const {$/;"	f	class:TransactionType
has_wire_protocol	protob/config.pb.h	/^inline bool Configuration::has_wire_protocol() const {$/;"	f	class:Configuration
has_word	protob/messages.pb.h	/^inline bool WordAck::has_word() const {$/;"	f	class:WordAck
has_word_count	protob/messages.pb.h	/^inline bool RecoveryDevice::has_word_count() const {$/;"	f	class:RecoveryDevice
has_xpub	protob/messages.pb.h	/^inline bool PublicKey::has_xpub() const {$/;"	f	class:PublicKey
has_yes_no	protob/messages.pb.h	/^inline bool DebugLinkDecision::has_yes_no() const {$/;"	f	class:DebugLinkDecision
header_read_error	wire.hpp	/^		typedef device::read_error header_read_error;$/;"	t	struct:wire::message
hid	wire.hpp	/^		hid_device *hid;$/;"	m	struct:wire::device
hid_mutex	wire.hpp	/^	static boost::shared_mutex hid_mutex;$/;"	m	namespace:wire
hitCounters	easylogging++.h	/^    inline base::RegisteredHitCounters* hitCounters(void) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
hitCounts	easylogging++.h	/^    inline std::size_t hitCounts(void) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::HitCounter
id	easylogging++.h	/^    inline const std::string& id(void) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
id	wire.hpp	/^		std::uint16_t id;$/;"	m	struct:wire::message
ignoreComments	easylogging++.h	/^        static void ignoreComments(std::string* line) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations::Parser
imported	protob/messages.pb.h	/^inline bool Features::imported() const {$/;"	f	class:Features
imported	protob/storage.pb.h	/^inline bool Storage::imported() const {$/;"	f	class:Storage
imported_	protob/messages.pb.h	/^  bool imported_;$/;"	m	class:Features
imported_	protob/storage.pb.h	/^  bool imported_;$/;"	m	class:Storage
increment	easylogging++.h	/^    inline void increment(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::HitCounter
init	easylogging++.h	/^    inline void init(base::PerformanceTracker* performanceTracker, bool firstCheckpoint = false) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::DataType
init	easylogging++.h	/^    void init(int width) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::MillisecondsWidth
initUnflushedCount	easylogging++.h	/^    void initUnflushedCount(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
initialize	easylogging++.h	/^    void initialize(Logger* logger) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::MessageBuilder
initialized	protob/messages.pb.h	/^inline bool Features::initialized() const {$/;"	f	class:Features
initialized_	protob/messages.pb.h	/^  bool initialized_;$/;"	m	class:Features
inputs	protob/messages.pb.h	/^SimpleSignTx::inputs() const {$/;"	f	class:SimpleSignTx
inputs	protob/messages.pb.h	/^inline const ::TxInputType& SimpleSignTx::inputs(int index) const {$/;"	f	class:SimpleSignTx
inputs	protob/types.pb.h	/^TransactionType::inputs() const {$/;"	f	class:TransactionType
inputs	protob/types.pb.h	/^inline const ::TxInputType& TransactionType::inputs(int index) const {$/;"	f	class:TransactionType
inputs_	protob/messages.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::TxInputType > inputs_;$/;"	m	class:SimpleSignTx
inputs_	protob/types.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::TxInputType > inputs_;$/;"	m	class:TransactionType
inputs_cnt	protob/types.pb.h	/^inline ::google::protobuf::uint32 TransactionType::inputs_cnt() const {$/;"	f	class:TransactionType
inputs_cnt_	protob/types.pb.h	/^  ::google::protobuf::uint32 inputs_cnt_;$/;"	m	class:TransactionType
inputs_count	protob/messages.pb.h	/^inline ::google::protobuf::uint32 EstimateTxSize::inputs_count() const {$/;"	f	class:EstimateTxSize
inputs_count	protob/messages.pb.h	/^inline ::google::protobuf::uint32 SignTx::inputs_count() const {$/;"	f	class:SignTx
inputs_count_	protob/messages.pb.h	/^  ::google::protobuf::uint32 inputs_count_;$/;"	m	class:EstimateTxSize
inputs_count_	protob/messages.pb.h	/^  ::google::protobuf::uint32 inputs_count_;$/;"	m	class:SignTx
inputs_size	protob/messages.pb.h	/^inline int SimpleSignTx::inputs_size() const {$/;"	f	class:SimpleSignTx
inputs_size	protob/types.pb.h	/^inline int TransactionType::inputs_size() const {$/;"	f	class:TransactionType
insertFile	easylogging++.h	/^    void insertFile(Level level, const std::string& fullFilename) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
installCustomFormatSpecifier	easylogging++.h	/^    inline void installCustomFormatSpecifier(const CustomFormatSpecifier& customFormatSpecifier) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
installCustomFormatSpecifier	easylogging++.h	/^    static inline void installCustomFormatSpecifier(const CustomFormatSpecifier& customFormatSpecifier) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Helpers
installLogDispatchCallback	easylogging++.h	/^    inline bool installLogDispatchCallback(const std::string& id) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
installLogDispatchCallback	easylogging++.h	/^    static inline bool installLogDispatchCallback(const std::string& id) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Helpers
installPerformanceTrackingCallback	easylogging++.h	/^    inline bool installPerformanceTrackingCallback(const std::string& id) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
installPerformanceTrackingCallback	easylogging++.h	/^    static inline bool installPerformanceTrackingCallback(const std::string& id) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Helpers
installPreRollOutCallback	easylogging++.h	/^    static inline void installPreRollOutCallback(const PreRollOutCallback& callback) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Helpers
internal	easylogging++.h	/^namespace internal {$/;"	n	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::threading
isComment	easylogging++.h	/^        static inline bool isComment(const std::string& line) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations::Parser
isConfig	easylogging++.h	/^        static inline bool isConfig(const std::string& line) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations::Parser
isDigit	easylogging++.h	/^    static inline bool isDigit(char c) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Str
isFlushNeeded	easylogging++.h	/^    inline bool isFlushNeeded(Level level) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
isLevel	easylogging++.h	/^        static inline bool isLevel(const std::string& line) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations::Parser
isValidId	easylogging++.h	/^    static inline bool isValidId(const std::string& id) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
iterator	easylogging++.h	/^    typedef typename Container::iterator iterator;$/;"	t	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::AbstractRegistry
iterator	easylogging++.h	/^    typedef typename Container::iterator iterator;$/;"	t	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::workarounds::IterableContainer
iterator	easylogging++.h	/^    typedef typename Registry<T_Ptr, T_Key>::iterator iterator;$/;"	t	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::Registry
iterator	easylogging++.h	/^    typedef typename RegistryWithPred<T_Ptr, Pred>::iterator iterator;$/;"	t	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::RegistryWithPred
kAddressFieldNumber	protob/messages.pb.cc	/^const int Address::kAddressFieldNumber;$/;"	m	class:Address	file:
kAddressFieldNumber	protob/messages.pb.cc	/^const int MessageSignature::kAddressFieldNumber;$/;"	m	class:MessageSignature	file:
kAddressFieldNumber	protob/messages.pb.cc	/^const int VerifyMessage::kAddressFieldNumber;$/;"	m	class:VerifyMessage	file:
kAddressFieldNumber	protob/messages.pb.h	/^  static const int kAddressFieldNumber = 1;$/;"	m	class:Address
kAddressFieldNumber	protob/messages.pb.h	/^  static const int kAddressFieldNumber = 1;$/;"	m	class:MessageSignature
kAddressFieldNumber	protob/messages.pb.h	/^  static const int kAddressFieldNumber = 1;$/;"	m	class:VerifyMessage
kAddressFieldNumber	protob/types.pb.cc	/^const int TxOutputType::kAddressFieldNumber;$/;"	m	class:TxOutputType	file:
kAddressFieldNumber	protob/types.pb.h	/^  static const int kAddressFieldNumber = 1;$/;"	m	class:TxOutputType
kAddressNFieldNumber	protob/messages.pb.cc	/^const int CipherKeyValue::kAddressNFieldNumber;$/;"	m	class:CipherKeyValue	file:
kAddressNFieldNumber	protob/messages.pb.cc	/^const int DecryptMessage::kAddressNFieldNumber;$/;"	m	class:DecryptMessage	file:
kAddressNFieldNumber	protob/messages.pb.cc	/^const int EncryptMessage::kAddressNFieldNumber;$/;"	m	class:EncryptMessage	file:
kAddressNFieldNumber	protob/messages.pb.cc	/^const int GetAddress::kAddressNFieldNumber;$/;"	m	class:GetAddress	file:
kAddressNFieldNumber	protob/messages.pb.cc	/^const int GetPublicKey::kAddressNFieldNumber;$/;"	m	class:GetPublicKey	file:
kAddressNFieldNumber	protob/messages.pb.cc	/^const int SignMessage::kAddressNFieldNumber;$/;"	m	class:SignMessage	file:
kAddressNFieldNumber	protob/messages.pb.h	/^  static const int kAddressNFieldNumber = 1;$/;"	m	class:CipherKeyValue
kAddressNFieldNumber	protob/messages.pb.h	/^  static const int kAddressNFieldNumber = 1;$/;"	m	class:DecryptMessage
kAddressNFieldNumber	protob/messages.pb.h	/^  static const int kAddressNFieldNumber = 1;$/;"	m	class:GetAddress
kAddressNFieldNumber	protob/messages.pb.h	/^  static const int kAddressNFieldNumber = 1;$/;"	m	class:GetPublicKey
kAddressNFieldNumber	protob/messages.pb.h	/^  static const int kAddressNFieldNumber = 1;$/;"	m	class:SignMessage
kAddressNFieldNumber	protob/messages.pb.h	/^  static const int kAddressNFieldNumber = 4;$/;"	m	class:EncryptMessage
kAddressNFieldNumber	protob/types.pb.cc	/^const int TxInputType::kAddressNFieldNumber;$/;"	m	class:TxInputType	file:
kAddressNFieldNumber	protob/types.pb.cc	/^const int TxOutputType::kAddressNFieldNumber;$/;"	m	class:TxOutputType	file:
kAddressNFieldNumber	protob/types.pb.h	/^  static const int kAddressNFieldNumber = 1;$/;"	m	class:TxInputType
kAddressNFieldNumber	protob/types.pb.h	/^  static const int kAddressNFieldNumber = 2;$/;"	m	class:TxOutputType
kAddressTypeFieldNumber	protob/types.pb.cc	/^const int CoinType::kAddressTypeFieldNumber;$/;"	m	class:CoinType	file:
kAddressTypeFieldNumber	protob/types.pb.h	/^  static const int kAddressTypeFieldNumber = 3;$/;"	m	class:CoinType
kAm	easylogging++.h	/^    static const char* kAm                              =      "AM";$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kAmountFieldNumber	protob/types.pb.cc	/^const int TxOutputBinType::kAmountFieldNumber;$/;"	m	class:TxOutputBinType	file:
kAmountFieldNumber	protob/types.pb.cc	/^const int TxOutputType::kAmountFieldNumber;$/;"	m	class:TxOutputType	file:
kAmountFieldNumber	protob/types.pb.h	/^  static const int kAmountFieldNumber = 1;$/;"	m	class:TxOutputBinType
kAmountFieldNumber	protob/types.pb.h	/^  static const int kAmountFieldNumber = 3;$/;"	m	class:TxOutputType
kAppNameFormatSpecifier	easylogging++.h	/^    static const base::type::char_t* kAppNameFormatSpecifier          =      ELPP_LITERAL("%app");$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kAskOnDecryptFieldNumber	protob/messages.pb.cc	/^const int CipherKeyValue::kAskOnDecryptFieldNumber;$/;"	m	class:CipherKeyValue	file:
kAskOnDecryptFieldNumber	protob/messages.pb.h	/^  static const int kAskOnDecryptFieldNumber = 6;$/;"	m	class:CipherKeyValue
kAskOnEncryptFieldNumber	protob/messages.pb.cc	/^const int CipherKeyValue::kAskOnEncryptFieldNumber;$/;"	m	class:CipherKeyValue	file:
kAskOnEncryptFieldNumber	protob/messages.pb.h	/^  static const int kAskOnEncryptFieldNumber = 5;$/;"	m	class:CipherKeyValue
kBinOutputsFieldNumber	protob/types.pb.cc	/^const int TransactionType::kBinOutputsFieldNumber;$/;"	m	class:TransactionType	file:
kBinOutputsFieldNumber	protob/types.pb.h	/^  static const int kBinOutputsFieldNumber = 3;$/;"	m	class:TransactionType
kBlacklistUrlsFieldNumber	protob/config.pb.cc	/^const int Configuration::kBlacklistUrlsFieldNumber;$/;"	m	class:Configuration	file:
kBlacklistUrlsFieldNumber	protob/config.pb.h	/^  static const int kBlacklistUrlsFieldNumber = 2;$/;"	m	class:Configuration
kBootloaderHashFieldNumber	protob/messages.pb.cc	/^const int Features::kBootloaderHashFieldNumber;$/;"	m	class:Features	file:
kBootloaderHashFieldNumber	protob/messages.pb.h	/^  static const int kBootloaderHashFieldNumber = 14;$/;"	m	class:Features
kBootloaderModeFieldNumber	protob/messages.pb.cc	/^const int Features::kBootloaderModeFieldNumber;$/;"	m	class:Features	file:
kBootloaderModeFieldNumber	protob/messages.pb.h	/^  static const int kBootloaderModeFieldNumber = 5;$/;"	m	class:Features
kBucketFieldNumber	protob/messages.pb.cc	/^const int DebugLinkLog::kBucketFieldNumber;$/;"	m	class:DebugLinkLog	file:
kBucketFieldNumber	protob/messages.pb.h	/^  static const int kBucketFieldNumber = 2;$/;"	m	class:DebugLinkLog
kButtonProtectionFieldNumber	protob/messages.pb.cc	/^const int Ping::kButtonProtectionFieldNumber;$/;"	m	class:Ping	file:
kButtonProtectionFieldNumber	protob/messages.pb.h	/^  static const int kButtonProtectionFieldNumber = 2;$/;"	m	class:Ping
kChainCodeFieldNumber	protob/types.pb.cc	/^const int HDNodeType::kChainCodeFieldNumber;$/;"	m	class:HDNodeType	file:
kChainCodeFieldNumber	protob/types.pb.h	/^  static const int kChainCodeFieldNumber = 4;$/;"	m	class:HDNodeType
kChildNumFieldNumber	protob/types.pb.cc	/^const int HDNodeType::kChildNumFieldNumber;$/;"	m	class:HDNodeType	file:
kChildNumFieldNumber	protob/types.pb.h	/^  static const int kChildNumFieldNumber = 3;$/;"	m	class:HDNodeType
kCodeFieldNumber	protob/messages.pb.cc	/^const int ButtonRequest::kCodeFieldNumber;$/;"	m	class:ButtonRequest	file:
kCodeFieldNumber	protob/messages.pb.cc	/^const int Failure::kCodeFieldNumber;$/;"	m	class:Failure	file:
kCodeFieldNumber	protob/messages.pb.h	/^  static const int kCodeFieldNumber = 1;$/;"	m	class:ButtonRequest
kCodeFieldNumber	protob/messages.pb.h	/^  static const int kCodeFieldNumber = 1;$/;"	m	class:Failure
kCoinNameFieldNumber	protob/messages.pb.cc	/^const int EstimateTxSize::kCoinNameFieldNumber;$/;"	m	class:EstimateTxSize	file:
kCoinNameFieldNumber	protob/messages.pb.cc	/^const int GetAddress::kCoinNameFieldNumber;$/;"	m	class:GetAddress	file:
kCoinNameFieldNumber	protob/messages.pb.cc	/^const int SignMessage::kCoinNameFieldNumber;$/;"	m	class:SignMessage	file:
kCoinNameFieldNumber	protob/messages.pb.cc	/^const int SignTx::kCoinNameFieldNumber;$/;"	m	class:SignTx	file:
kCoinNameFieldNumber	protob/messages.pb.cc	/^const int SimpleSignTx::kCoinNameFieldNumber;$/;"	m	class:SimpleSignTx	file:
kCoinNameFieldNumber	protob/messages.pb.h	/^  static const int kCoinNameFieldNumber = 2;$/;"	m	class:GetAddress
kCoinNameFieldNumber	protob/messages.pb.h	/^  static const int kCoinNameFieldNumber = 3;$/;"	m	class:EstimateTxSize
kCoinNameFieldNumber	protob/messages.pb.h	/^  static const int kCoinNameFieldNumber = 3;$/;"	m	class:SignMessage
kCoinNameFieldNumber	protob/messages.pb.h	/^  static const int kCoinNameFieldNumber = 3;$/;"	m	class:SignTx
kCoinNameFieldNumber	protob/messages.pb.h	/^  static const int kCoinNameFieldNumber = 4;$/;"	m	class:SimpleSignTx
kCoinNameFieldNumber	protob/types.pb.cc	/^const int CoinType::kCoinNameFieldNumber;$/;"	m	class:CoinType	file:
kCoinNameFieldNumber	protob/types.pb.h	/^  static const int kCoinNameFieldNumber = 1;$/;"	m	class:CoinType
kCoinShortcutFieldNumber	protob/types.pb.cc	/^const int CoinType::kCoinShortcutFieldNumber;$/;"	m	class:CoinType	file:
kCoinShortcutFieldNumber	protob/types.pb.h	/^  static const int kCoinShortcutFieldNumber = 2;$/;"	m	class:CoinType
kCoinsFieldNumber	protob/messages.pb.cc	/^const int Features::kCoinsFieldNumber;$/;"	m	class:Features	file:
kCoinsFieldNumber	protob/messages.pb.h	/^  static const int kCoinsFieldNumber = 11;$/;"	m	class:Features
kConfigurationComment	easylogging++.h	/^    static const char* kConfigurationComment                   =      "##";$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kConfigurationLevel	easylogging++.h	/^    static const char* kConfigurationLevel                     =      "*";$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kConfigurationLoggerId	easylogging++.h	/^    static const char* kConfigurationLoggerId                  =      "--";$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kCpuSnFieldNumber	protob/messages.pb.cc	/^const int Features::kCpuSnFieldNumber;$/;"	m	class:Features	file:
kCpuSnFieldNumber	protob/messages.pb.h	/^  static const int kCpuSnFieldNumber = 16;$/;"	m	class:Features
kCrashSignals	easylogging++.h	/^    } kCrashSignals[] = {$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts	typeref:struct:el::Level::ConfigurationType::LoggingFlag::base::consts::__anon10
kCrashSignalsCount	easylogging++.h	/^    static const int kCrashSignalsCount                          =      sizeof(kCrashSignals) \/ sizeof(kCrashSignals[0]);$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kCurrentHostFormatSpecifier	easylogging++.h	/^    static const base::type::char_t* kCurrentHostFormatSpecifier      =      ELPP_LITERAL("%host");$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kCurrentUserFormatSpecifier	easylogging++.h	/^    static const base::type::char_t* kCurrentUserFormatSpecifier      =      ELPP_LITERAL("%user");$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kDataFieldNumber	protob/messages.pb.cc	/^const int ButtonRequest::kDataFieldNumber;$/;"	m	class:ButtonRequest	file:
kDataFieldNumber	protob/messages.pb.h	/^  static const int kDataFieldNumber = 2;$/;"	m	class:ButtonRequest
kDateTimeFormatSpecifier	easylogging++.h	/^    static const base::type::char_t* kDateTimeFormatSpecifier         =      ELPP_LITERAL("%datetime");$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kDateTimeFormatSpecifierForFilename	easylogging++.h	/^    static const char* kDateTimeFormatSpecifierForFilename            =      "%datetime";$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kDays	easylogging++.h	/^    static const char* kDays[7]                         =      { "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" };$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kDaysAbbrev	easylogging++.h	/^    static const char* kDaysAbbrev[7]                   =      { "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" };$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kDebugLevelLogValue	easylogging++.h	/^    static const base::type::char_t* kDebugLevelLogValue    =   ELPP_LITERAL("DEBUG");$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kDebugLevelShortLogValue	easylogging++.h	/^    static const base::type::char_t* kDebugLevelShortLogValue    =   ELPP_LITERAL("D");$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kDefaultDateTimeFormat	easylogging++.h	/^    static const char* kDefaultDateTimeFormat           =      "%d\/%M\/%Y %H:%m:%s,%g";$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kDefaultDateTimeFormatInFilename	easylogging++.h	/^    static const char* kDefaultDateTimeFormatInFilename =      "%d-%M-%Y_%H-%m";$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kDefaultLogFile	easylogging++.h	/^    static const char* kDefaultLogFile                         =      "logs\/myeasylog.log";$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kDefaultLogFile	easylogging++.h	/^    static const char* kDefaultLogFile                         =      "logs\\\\myeasylog.log";$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kDefaultLogFile	easylogging++.h	/^    static const char* kDefaultLogFile                         =      _ELPP_DEFAULT_LOG_FILE;$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kDefaultLogFileParam	easylogging++.h	/^    static const char* kDefaultLogFileParam                    =      "--default-log-file";$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kDefaultLoggerId	easylogging++.h	/^    static const char* kDefaultLoggerId                        =      "default";$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kDefaultMillisecondsWidth	easylogging++.h	/^    static const unsigned int  kDefaultMillisecondsWidth       =      3;$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kDelayTimeFieldNumber	protob/messages.pb.cc	/^const int TestScreen::kDelayTimeFieldNumber;$/;"	m	class:TestScreen	file:
kDelayTimeFieldNumber	protob/messages.pb.h	/^  static const int kDelayTimeFieldNumber = 1;$/;"	m	class:TestScreen
kDepthFieldNumber	protob/types.pb.cc	/^const int HDNodeType::kDepthFieldNumber;$/;"	m	class:HDNodeType	file:
kDepthFieldNumber	protob/types.pb.h	/^  static const int kDepthFieldNumber = 1;$/;"	m	class:HDNodeType
kDetailsFieldNumber	protob/messages.pb.cc	/^const int TxRequest::kDetailsFieldNumber;$/;"	m	class:TxRequest	file:
kDetailsFieldNumber	protob/messages.pb.h	/^  static const int kDetailsFieldNumber = 2;$/;"	m	class:TxRequest
kDeviceIdFieldNumber	protob/messages.pb.cc	/^const int Features::kDeviceIdFieldNumber;$/;"	m	class:Features	file:
kDeviceIdFieldNumber	protob/messages.pb.h	/^  static const int kDeviceIdFieldNumber = 6;$/;"	m	class:Features
kDisplayOnlyFieldNumber	protob/messages.pb.cc	/^const int EncryptMessage::kDisplayOnlyFieldNumber;$/;"	m	class:EncryptMessage	file:
kDisplayOnlyFieldNumber	protob/messages.pb.h	/^  static const int kDisplayOnlyFieldNumber = 3;$/;"	m	class:EncryptMessage
kDisplayRandomFieldNumber	protob/messages.pb.cc	/^const int ResetDevice::kDisplayRandomFieldNumber;$/;"	m	class:ResetDevice	file:
kDisplayRandomFieldNumber	protob/messages.pb.h	/^  static const int kDisplayRandomFieldNumber = 1;$/;"	m	class:ResetDevice
kEncryptFieldNumber	protob/messages.pb.cc	/^const int CipherKeyValue::kEncryptFieldNumber;$/;"	m	class:CipherKeyValue	file:
kEncryptFieldNumber	protob/messages.pb.h	/^  static const int kEncryptFieldNumber = 4;$/;"	m	class:CipherKeyValue
kEnforceWordlistFieldNumber	protob/messages.pb.cc	/^const int RecoveryDevice::kEnforceWordlistFieldNumber;$/;"	m	class:RecoveryDevice	file:
kEnforceWordlistFieldNumber	protob/messages.pb.h	/^  static const int kEnforceWordlistFieldNumber = 6;$/;"	m	class:RecoveryDevice
kEntropyFieldNumber	protob/messages.pb.cc	/^const int Entropy::kEntropyFieldNumber;$/;"	m	class:Entropy	file:
kEntropyFieldNumber	protob/messages.pb.cc	/^const int EntropyAck::kEntropyFieldNumber;$/;"	m	class:EntropyAck	file:
kEntropyFieldNumber	protob/messages.pb.h	/^  static const int kEntropyFieldNumber = 1;$/;"	m	class:Entropy
kEntropyFieldNumber	protob/messages.pb.h	/^  static const int kEntropyFieldNumber = 1;$/;"	m	class:EntropyAck
kErrorLevelLogValue	easylogging++.h	/^    static const base::type::char_t* kErrorLevelLogValue    =   ELPP_LITERAL("ERROR");$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kErrorLevelShortLogValue	easylogging++.h	/^    static const base::type::char_t* kErrorLevelShortLogValue    =   ELPP_LITERAL("E");$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kFatalLevelLogValue	easylogging++.h	/^    static const base::type::char_t* kFatalLevelLogValue    =   ELPP_LITERAL("FATAL");$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kFatalLevelShortLogValue	easylogging++.h	/^    static const base::type::char_t* kFatalLevelShortLogValue    =   ELPP_LITERAL("F");$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kFilePathSeperator	easylogging++.h	/^    static const char* kFilePathSeperator                      =      "\/";$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kFilePathSeperator	easylogging++.h	/^    static const char* kFilePathSeperator                      =      "\\\\";$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kFingerprintFieldNumber	protob/types.pb.cc	/^const int HDNodeType::kFingerprintFieldNumber;$/;"	m	class:HDNodeType	file:
kFingerprintFieldNumber	protob/types.pb.h	/^  static const int kFingerprintFieldNumber = 2;$/;"	m	class:HDNodeType
kFormatSpecifierChar	easylogging++.h	/^    static const char  kFormatSpecifierChar                    =      '%';$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kFormatSpecifierCharValue	easylogging++.h	/^    static const char  kFormatSpecifierCharValue               =      'v';$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kImportedFieldNumber	protob/messages.pb.cc	/^const int Features::kImportedFieldNumber;$/;"	m	class:Features	file:
kImportedFieldNumber	protob/messages.pb.h	/^  static const int kImportedFieldNumber = 15;$/;"	m	class:Features
kImportedFieldNumber	protob/storage.pb.cc	/^const int Storage::kImportedFieldNumber;$/;"	m	class:Storage	file:
kImportedFieldNumber	protob/storage.pb.h	/^  static const int kImportedFieldNumber = 9;$/;"	m	class:Storage
kInfoLevelLogValue	easylogging++.h	/^    static const base::type::char_t* kInfoLevelLogValue     =   ELPP_LITERAL("INFO ");$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kInfoLevelShortLogValue	easylogging++.h	/^    static const base::type::char_t* kInfoLevelShortLogValue     =   ELPP_LITERAL("I");$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kInitializedFieldNumber	protob/messages.pb.cc	/^const int Features::kInitializedFieldNumber;$/;"	m	class:Features	file:
kInitializedFieldNumber	protob/messages.pb.h	/^  static const int kInitializedFieldNumber = 12;$/;"	m	class:Features
kInputsCntFieldNumber	protob/types.pb.cc	/^const int TransactionType::kInputsCntFieldNumber;$/;"	m	class:TransactionType	file:
kInputsCntFieldNumber	protob/types.pb.h	/^  static const int kInputsCntFieldNumber = 6;$/;"	m	class:TransactionType
kInputsCountFieldNumber	protob/messages.pb.cc	/^const int EstimateTxSize::kInputsCountFieldNumber;$/;"	m	class:EstimateTxSize	file:
kInputsCountFieldNumber	protob/messages.pb.cc	/^const int SignTx::kInputsCountFieldNumber;$/;"	m	class:SignTx	file:
kInputsCountFieldNumber	protob/messages.pb.h	/^  static const int kInputsCountFieldNumber = 2;$/;"	m	class:EstimateTxSize
kInputsCountFieldNumber	protob/messages.pb.h	/^  static const int kInputsCountFieldNumber = 2;$/;"	m	class:SignTx
kInputsFieldNumber	protob/messages.pb.cc	/^const int SimpleSignTx::kInputsFieldNumber;$/;"	m	class:SimpleSignTx	file:
kInputsFieldNumber	protob/messages.pb.h	/^  static const int kInputsFieldNumber = 1;$/;"	m	class:SimpleSignTx
kInputsFieldNumber	protob/types.pb.cc	/^const int TransactionType::kInputsFieldNumber;$/;"	m	class:TransactionType	file:
kInputsFieldNumber	protob/types.pb.h	/^  static const int kInputsFieldNumber = 2;$/;"	m	class:TransactionType
kKeyFieldNumber	protob/messages.pb.cc	/^const int CipherKeyValue::kKeyFieldNumber;$/;"	m	class:CipherKeyValue	file:
kKeyFieldNumber	protob/messages.pb.h	/^  static const int kKeyFieldNumber = 2;$/;"	m	class:CipherKeyValue
kKnownDevicesFieldNumber	protob/config.pb.cc	/^const int Configuration::kKnownDevicesFieldNumber;$/;"	m	class:Configuration	file:
kKnownDevicesFieldNumber	protob/config.pb.h	/^  static const int kKnownDevicesFieldNumber = 4;$/;"	m	class:Configuration
kLabelFieldNumber	protob/messages.pb.cc	/^const int ApplySettings::kLabelFieldNumber;$/;"	m	class:ApplySettings	file:
kLabelFieldNumber	protob/messages.pb.cc	/^const int Features::kLabelFieldNumber;$/;"	m	class:Features	file:
kLabelFieldNumber	protob/messages.pb.cc	/^const int LoadDevice::kLabelFieldNumber;$/;"	m	class:LoadDevice	file:
kLabelFieldNumber	protob/messages.pb.cc	/^const int RecoveryDevice::kLabelFieldNumber;$/;"	m	class:RecoveryDevice	file:
kLabelFieldNumber	protob/messages.pb.cc	/^const int ResetDevice::kLabelFieldNumber;$/;"	m	class:ResetDevice	file:
kLabelFieldNumber	protob/messages.pb.h	/^  static const int kLabelFieldNumber = 10;$/;"	m	class:Features
kLabelFieldNumber	protob/messages.pb.h	/^  static const int kLabelFieldNumber = 2;$/;"	m	class:ApplySettings
kLabelFieldNumber	protob/messages.pb.h	/^  static const int kLabelFieldNumber = 5;$/;"	m	class:RecoveryDevice
kLabelFieldNumber	protob/messages.pb.h	/^  static const int kLabelFieldNumber = 6;$/;"	m	class:LoadDevice
kLabelFieldNumber	protob/messages.pb.h	/^  static const int kLabelFieldNumber = 6;$/;"	m	class:ResetDevice
kLabelFieldNumber	protob/storage.pb.cc	/^const int Storage::kLabelFieldNumber;$/;"	m	class:Storage	file:
kLabelFieldNumber	protob/storage.pb.h	/^  static const int kLabelFieldNumber = 8;$/;"	m	class:Storage
kLanguageFieldNumber	protob/messages.pb.cc	/^const int ApplySettings::kLanguageFieldNumber;$/;"	m	class:ApplySettings	file:
kLanguageFieldNumber	protob/messages.pb.cc	/^const int Features::kLanguageFieldNumber;$/;"	m	class:Features	file:
kLanguageFieldNumber	protob/messages.pb.cc	/^const int LoadDevice::kLanguageFieldNumber;$/;"	m	class:LoadDevice	file:
kLanguageFieldNumber	protob/messages.pb.cc	/^const int RecoveryDevice::kLanguageFieldNumber;$/;"	m	class:RecoveryDevice	file:
kLanguageFieldNumber	protob/messages.pb.cc	/^const int ResetDevice::kLanguageFieldNumber;$/;"	m	class:ResetDevice	file:
kLanguageFieldNumber	protob/messages.pb.h	/^  static const int kLanguageFieldNumber = 1;$/;"	m	class:ApplySettings
kLanguageFieldNumber	protob/messages.pb.h	/^  static const int kLanguageFieldNumber = 4;$/;"	m	class:RecoveryDevice
kLanguageFieldNumber	protob/messages.pb.h	/^  static const int kLanguageFieldNumber = 5;$/;"	m	class:LoadDevice
kLanguageFieldNumber	protob/messages.pb.h	/^  static const int kLanguageFieldNumber = 5;$/;"	m	class:ResetDevice
kLanguageFieldNumber	protob/messages.pb.h	/^  static const int kLanguageFieldNumber = 9;$/;"	m	class:Features
kLanguageFieldNumber	protob/storage.pb.cc	/^const int Storage::kLanguageFieldNumber;$/;"	m	class:Storage	file:
kLanguageFieldNumber	protob/storage.pb.h	/^  static const int kLanguageFieldNumber = 7;$/;"	m	class:Storage
kLayoutFieldNumber	protob/messages.pb.cc	/^const int DebugLinkState::kLayoutFieldNumber;$/;"	m	class:DebugLinkState	file:
kLayoutFieldNumber	protob/messages.pb.h	/^  static const int kLayoutFieldNumber = 1;$/;"	m	class:DebugLinkState
kLevelFieldNumber	protob/messages.pb.cc	/^const int DebugLinkLog::kLevelFieldNumber;$/;"	m	class:DebugLinkLog	file:
kLevelFieldNumber	protob/messages.pb.h	/^  static const int kLevelFieldNumber = 1;$/;"	m	class:DebugLinkLog
kLockTimeFieldNumber	protob/types.pb.cc	/^const int TransactionType::kLockTimeFieldNumber;$/;"	m	class:TransactionType	file:
kLockTimeFieldNumber	protob/types.pb.h	/^  static const int kLockTimeFieldNumber = 4;$/;"	m	class:TransactionType
kLogFileBaseFormatSpecifier	easylogging++.h	/^    static const base::type::char_t* kLogFileBaseFormatSpecifier      =      ELPP_LITERAL("%fbase");$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kLogFileFormatSpecifier	easylogging++.h	/^    static const base::type::char_t* kLogFileFormatSpecifier          =      ELPP_LITERAL("%file");$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kLogFunctionFormatSpecifier	easylogging++.h	/^    static const base::type::char_t* kLogFunctionFormatSpecifier      =      ELPP_LITERAL("%func");$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kLogLineFormatSpecifier	easylogging++.h	/^    static const base::type::char_t* kLogLineFormatSpecifier          =      ELPP_LITERAL("%line");$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kLogLocationFormatSpecifier	easylogging++.h	/^    static const base::type::char_t* kLogLocationFormatSpecifier      =      ELPP_LITERAL("%loc");$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kLoggerIdFormatSpecifier	easylogging++.h	/^    static const base::type::char_t* kLoggerIdFormatSpecifier         =      ELPP_LITERAL("%logger");$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kLoggingFlagsParam	easylogging++.h	/^    static const char* kLoggingFlagsParam                      =      "--logging-flags";$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kMajorVersionFieldNumber	protob/messages.pb.cc	/^const int Features::kMajorVersionFieldNumber;$/;"	m	class:Features	file:
kMajorVersionFieldNumber	protob/messages.pb.h	/^  static const int kMajorVersionFieldNumber = 2;$/;"	m	class:Features
kMatrixFieldNumber	protob/messages.pb.cc	/^const int DebugLinkState::kMatrixFieldNumber;$/;"	m	class:DebugLinkState	file:
kMatrixFieldNumber	protob/messages.pb.h	/^  static const int kMatrixFieldNumber = 3;$/;"	m	class:DebugLinkState
kMaxLogPerContainer	easylogging++.h	/^    static const unsigned int kMaxLogPerContainer              =      100;$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kMaxLogPerCounter	easylogging++.h	/^    static const unsigned int kMaxLogPerCounter                =      100000;$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kMaxStack	easylogging++.h	/^    static const std::size_t kMaxStack = 64;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::debug::StackTrace
kMaxValid	easylogging++.h	/^    static const base::type::EnumType kMaxValid = static_cast<base::type::EnumType>(ConfigurationType::MaxLogFileSize);$/;"	m	class:el::Level::ConfigurationType::ConfigurationTypeHelper
kMaxValid	easylogging++.h	/^    static const base::type::EnumType kMaxValid = static_cast<base::type::EnumType>(Level::Info);$/;"	m	class:el::Level::LevelHelper
kMaxVerboseLevel	easylogging++.h	/^    static const base::type::VerboseLevel kMaxVerboseLevel     =      9;$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kMaxfeeKbFieldNumber	protob/types.pb.cc	/^const int CoinType::kMaxfeeKbFieldNumber;$/;"	m	class:CoinType	file:
kMaxfeeKbFieldNumber	protob/types.pb.h	/^  static const int kMaxfeeKbFieldNumber = 4;$/;"	m	class:CoinType
kMessageFieldNumber	protob/messages.pb.cc	/^const int DecryptMessage::kMessageFieldNumber;$/;"	m	class:DecryptMessage	file:
kMessageFieldNumber	protob/messages.pb.cc	/^const int EncryptMessage::kMessageFieldNumber;$/;"	m	class:EncryptMessage	file:
kMessageFieldNumber	protob/messages.pb.cc	/^const int Failure::kMessageFieldNumber;$/;"	m	class:Failure	file:
kMessageFieldNumber	protob/messages.pb.cc	/^const int Ping::kMessageFieldNumber;$/;"	m	class:Ping	file:
kMessageFieldNumber	protob/messages.pb.cc	/^const int SignMessage::kMessageFieldNumber;$/;"	m	class:SignMessage	file:
kMessageFieldNumber	protob/messages.pb.cc	/^const int Success::kMessageFieldNumber;$/;"	m	class:Success	file:
kMessageFieldNumber	protob/messages.pb.cc	/^const int VerifyMessage::kMessageFieldNumber;$/;"	m	class:VerifyMessage	file:
kMessageFieldNumber	protob/messages.pb.h	/^  static const int kMessageFieldNumber = 1;$/;"	m	class:Ping
kMessageFieldNumber	protob/messages.pb.h	/^  static const int kMessageFieldNumber = 1;$/;"	m	class:Success
kMessageFieldNumber	protob/messages.pb.h	/^  static const int kMessageFieldNumber = 2;$/;"	m	class:DecryptMessage
kMessageFieldNumber	protob/messages.pb.h	/^  static const int kMessageFieldNumber = 2;$/;"	m	class:EncryptMessage
kMessageFieldNumber	protob/messages.pb.h	/^  static const int kMessageFieldNumber = 2;$/;"	m	class:Failure
kMessageFieldNumber	protob/messages.pb.h	/^  static const int kMessageFieldNumber = 2;$/;"	m	class:SignMessage
kMessageFieldNumber	protob/messages.pb.h	/^  static const int kMessageFieldNumber = 3;$/;"	m	class:VerifyMessage
kMessageFormatSpecifier	easylogging++.h	/^    static const base::type::char_t* kMessageFormatSpecifier          =      ELPP_LITERAL("%msg");$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kMinValid	easylogging++.h	/^    static const base::type::EnumType kMinValid = static_cast<base::type::EnumType>(ConfigurationType::Enabled);$/;"	m	class:el::Level::ConfigurationType::ConfigurationTypeHelper
kMinValid	easylogging++.h	/^    static const base::type::EnumType kMinValid = static_cast<base::type::EnumType>(Level::Trace);$/;"	m	class:el::Level::LevelHelper
kMinorVersionFieldNumber	protob/messages.pb.cc	/^const int Features::kMinorVersionFieldNumber;$/;"	m	class:Features	file:
kMinorVersionFieldNumber	protob/messages.pb.h	/^  static const int kMinorVersionFieldNumber = 3;$/;"	m	class:Features
kMnemonicFieldNumber	protob/messages.pb.cc	/^const int DebugLinkState::kMnemonicFieldNumber;$/;"	m	class:DebugLinkState	file:
kMnemonicFieldNumber	protob/messages.pb.cc	/^const int LoadDevice::kMnemonicFieldNumber;$/;"	m	class:LoadDevice	file:
kMnemonicFieldNumber	protob/messages.pb.h	/^  static const int kMnemonicFieldNumber = 1;$/;"	m	class:LoadDevice
kMnemonicFieldNumber	protob/messages.pb.h	/^  static const int kMnemonicFieldNumber = 4;$/;"	m	class:DebugLinkState
kMnemonicFieldNumber	protob/storage.pb.cc	/^const int Storage::kMnemonicFieldNumber;$/;"	m	class:Storage	file:
kMnemonicFieldNumber	protob/storage.pb.h	/^  static const int kMnemonicFieldNumber = 3;$/;"	m	class:Storage
kMonths	easylogging++.h	/^    static const char* kMonths[12]                      =      { "January", "February", "March", "Apri", "May", "June", "July", "August",$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kMonthsAbbrev	easylogging++.h	/^    static const char* kMonthsAbbrev[12]                =      { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" };$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kMultisigFieldNumber	protob/types.pb.cc	/^const int TxInputType::kMultisigFieldNumber;$/;"	m	class:TxInputType	file:
kMultisigFieldNumber	protob/types.pb.h	/^  static const int kMultisigFieldNumber = 7;$/;"	m	class:TxInputType
kNodeFieldNumber	protob/messages.pb.cc	/^const int DebugLinkState::kNodeFieldNumber;$/;"	m	class:DebugLinkState	file:
kNodeFieldNumber	protob/messages.pb.cc	/^const int LoadDevice::kNodeFieldNumber;$/;"	m	class:LoadDevice	file:
kNodeFieldNumber	protob/messages.pb.cc	/^const int PublicKey::kNodeFieldNumber;$/;"	m	class:PublicKey	file:
kNodeFieldNumber	protob/messages.pb.h	/^  static const int kNodeFieldNumber = 1;$/;"	m	class:PublicKey
kNodeFieldNumber	protob/messages.pb.h	/^  static const int kNodeFieldNumber = 2;$/;"	m	class:LoadDevice
kNodeFieldNumber	protob/messages.pb.h	/^  static const int kNodeFieldNumber = 5;$/;"	m	class:DebugLinkState
kNodeFieldNumber	protob/storage.pb.cc	/^const int Storage::kNodeFieldNumber;$/;"	m	class:Storage	file:
kNodeFieldNumber	protob/storage.pb.h	/^  static const int kNodeFieldNumber = 2;$/;"	m	class:Storage
kNullPointer	easylogging++.h	/^    static const char* kNullPointer                            =      "nullptr";$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kOutputsCntFieldNumber	protob/types.pb.cc	/^const int TransactionType::kOutputsCntFieldNumber;$/;"	m	class:TransactionType	file:
kOutputsCntFieldNumber	protob/types.pb.h	/^  static const int kOutputsCntFieldNumber = 7;$/;"	m	class:TransactionType
kOutputsCountFieldNumber	protob/messages.pb.cc	/^const int EstimateTxSize::kOutputsCountFieldNumber;$/;"	m	class:EstimateTxSize	file:
kOutputsCountFieldNumber	protob/messages.pb.cc	/^const int SignTx::kOutputsCountFieldNumber;$/;"	m	class:SignTx	file:
kOutputsCountFieldNumber	protob/messages.pb.h	/^  static const int kOutputsCountFieldNumber = 1;$/;"	m	class:EstimateTxSize
kOutputsCountFieldNumber	protob/messages.pb.h	/^  static const int kOutputsCountFieldNumber = 1;$/;"	m	class:SignTx
kOutputsFieldNumber	protob/messages.pb.cc	/^const int SimpleSignTx::kOutputsFieldNumber;$/;"	m	class:SimpleSignTx	file:
kOutputsFieldNumber	protob/messages.pb.h	/^  static const int kOutputsFieldNumber = 2;$/;"	m	class:SimpleSignTx
kOutputsFieldNumber	protob/types.pb.cc	/^const int TransactionType::kOutputsFieldNumber;$/;"	m	class:TransactionType	file:
kOutputsFieldNumber	protob/types.pb.h	/^  static const int kOutputsFieldNumber = 5;$/;"	m	class:TransactionType
kPassphraseFieldNumber	protob/messages.pb.cc	/^const int PassphraseAck::kPassphraseFieldNumber;$/;"	m	class:PassphraseAck	file:
kPassphraseFieldNumber	protob/messages.pb.h	/^  static const int kPassphraseFieldNumber = 1;$/;"	m	class:PassphraseAck
kPassphraseProtectionFieldNumber	protob/messages.pb.cc	/^const int DebugLinkState::kPassphraseProtectionFieldNumber;$/;"	m	class:DebugLinkState	file:
kPassphraseProtectionFieldNumber	protob/messages.pb.cc	/^const int Features::kPassphraseProtectionFieldNumber;$/;"	m	class:Features	file:
kPassphraseProtectionFieldNumber	protob/messages.pb.cc	/^const int LoadDevice::kPassphraseProtectionFieldNumber;$/;"	m	class:LoadDevice	file:
kPassphraseProtectionFieldNumber	protob/messages.pb.cc	/^const int Ping::kPassphraseProtectionFieldNumber;$/;"	m	class:Ping	file:
kPassphraseProtectionFieldNumber	protob/messages.pb.cc	/^const int RecoveryDevice::kPassphraseProtectionFieldNumber;$/;"	m	class:RecoveryDevice	file:
kPassphraseProtectionFieldNumber	protob/messages.pb.cc	/^const int ResetDevice::kPassphraseProtectionFieldNumber;$/;"	m	class:ResetDevice	file:
kPassphraseProtectionFieldNumber	protob/messages.pb.h	/^  static const int kPassphraseProtectionFieldNumber = 2;$/;"	m	class:RecoveryDevice
kPassphraseProtectionFieldNumber	protob/messages.pb.h	/^  static const int kPassphraseProtectionFieldNumber = 3;$/;"	m	class:ResetDevice
kPassphraseProtectionFieldNumber	protob/messages.pb.h	/^  static const int kPassphraseProtectionFieldNumber = 4;$/;"	m	class:LoadDevice
kPassphraseProtectionFieldNumber	protob/messages.pb.h	/^  static const int kPassphraseProtectionFieldNumber = 4;$/;"	m	class:Ping
kPassphraseProtectionFieldNumber	protob/messages.pb.h	/^  static const int kPassphraseProtectionFieldNumber = 6;$/;"	m	class:DebugLinkState
kPassphraseProtectionFieldNumber	protob/messages.pb.h	/^  static const int kPassphraseProtectionFieldNumber = 8;$/;"	m	class:Features
kPassphraseProtectionFieldNumber	protob/storage.pb.cc	/^const int Storage::kPassphraseProtectionFieldNumber;$/;"	m	class:Storage	file:
kPassphraseProtectionFieldNumber	protob/storage.pb.h	/^  static const int kPassphraseProtectionFieldNumber = 4;$/;"	m	class:Storage
kPatchVersionFieldNumber	protob/messages.pb.cc	/^const int Features::kPatchVersionFieldNumber;$/;"	m	class:Features	file:
kPatchVersionFieldNumber	protob/messages.pb.h	/^  static const int kPatchVersionFieldNumber = 4;$/;"	m	class:Features
kPathFieldNumber	protob/config.pb.cc	/^const int DeviceDescriptor::kPathFieldNumber;$/;"	m	class:DeviceDescriptor	file:
kPathFieldNumber	protob/config.pb.h	/^  static const int kPathFieldNumber = 4;$/;"	m	class:DeviceDescriptor
kPayloadFieldNumber	protob/messages.pb.cc	/^const int FirmwareUpload::kPayloadFieldNumber;$/;"	m	class:FirmwareUpload	file:
kPayloadFieldNumber	protob/messages.pb.cc	/^const int Success::kPayloadFieldNumber;$/;"	m	class:Success	file:
kPayloadFieldNumber	protob/messages.pb.h	/^  static const int kPayloadFieldNumber = 1;$/;"	m	class:FirmwareUpload
kPayloadFieldNumber	protob/messages.pb.h	/^  static const int kPayloadFieldNumber = 2;$/;"	m	class:Success
kPerformanceLoggerId	easylogging++.h	/^    static const char* kPerformanceLoggerId                    =      "performance";$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kPerformanceTrackerDefaultLevel	easylogging++.h	/^    static const Level kPerformanceTrackerDefaultLevel         =      Level::Info;$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kPinFailedAttemptsFieldNumber	protob/storage.pb.cc	/^const int Storage::kPinFailedAttemptsFieldNumber;$/;"	m	class:Storage	file:
kPinFailedAttemptsFieldNumber	protob/storage.pb.h	/^  static const int kPinFailedAttemptsFieldNumber = 5;$/;"	m	class:Storage
kPinFieldNumber	protob/messages.pb.cc	/^const int DebugLinkState::kPinFieldNumber;$/;"	m	class:DebugLinkState	file:
kPinFieldNumber	protob/messages.pb.cc	/^const int LoadDevice::kPinFieldNumber;$/;"	m	class:LoadDevice	file:
kPinFieldNumber	protob/messages.pb.cc	/^const int PinMatrixAck::kPinFieldNumber;$/;"	m	class:PinMatrixAck	file:
kPinFieldNumber	protob/messages.pb.h	/^  static const int kPinFieldNumber = 1;$/;"	m	class:PinMatrixAck
kPinFieldNumber	protob/messages.pb.h	/^  static const int kPinFieldNumber = 2;$/;"	m	class:DebugLinkState
kPinFieldNumber	protob/messages.pb.h	/^  static const int kPinFieldNumber = 3;$/;"	m	class:LoadDevice
kPinFieldNumber	protob/storage.pb.cc	/^const int Storage::kPinFieldNumber;$/;"	m	class:Storage	file:
kPinFieldNumber	protob/storage.pb.h	/^  static const int kPinFieldNumber = 6;$/;"	m	class:Storage
kPinProtectionFieldNumber	protob/messages.pb.cc	/^const int Features::kPinProtectionFieldNumber;$/;"	m	class:Features	file:
kPinProtectionFieldNumber	protob/messages.pb.cc	/^const int Ping::kPinProtectionFieldNumber;$/;"	m	class:Ping	file:
kPinProtectionFieldNumber	protob/messages.pb.cc	/^const int RecoveryDevice::kPinProtectionFieldNumber;$/;"	m	class:RecoveryDevice	file:
kPinProtectionFieldNumber	protob/messages.pb.cc	/^const int ResetDevice::kPinProtectionFieldNumber;$/;"	m	class:ResetDevice	file:
kPinProtectionFieldNumber	protob/messages.pb.h	/^  static const int kPinProtectionFieldNumber = 3;$/;"	m	class:Ping
kPinProtectionFieldNumber	protob/messages.pb.h	/^  static const int kPinProtectionFieldNumber = 3;$/;"	m	class:RecoveryDevice
kPinProtectionFieldNumber	protob/messages.pb.h	/^  static const int kPinProtectionFieldNumber = 4;$/;"	m	class:ResetDevice
kPinProtectionFieldNumber	protob/messages.pb.h	/^  static const int kPinProtectionFieldNumber = 7;$/;"	m	class:Features
kPm	easylogging++.h	/^    static const char* kPm                              =      "PM";$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kPrevHashFieldNumber	protob/types.pb.cc	/^const int TxInputType::kPrevHashFieldNumber;$/;"	m	class:TxInputType	file:
kPrevHashFieldNumber	protob/types.pb.h	/^  static const int kPrevHashFieldNumber = 2;$/;"	m	class:TxInputType
kPrevIndexFieldNumber	protob/types.pb.cc	/^const int TxInputType::kPrevIndexFieldNumber;$/;"	m	class:TxInputType	file:
kPrevIndexFieldNumber	protob/types.pb.h	/^  static const int kPrevIndexFieldNumber = 3;$/;"	m	class:TxInputType
kPrivateKeyFieldNumber	protob/types.pb.cc	/^const int HDNodeType::kPrivateKeyFieldNumber;$/;"	m	class:HDNodeType	file:
kPrivateKeyFieldNumber	protob/types.pb.h	/^  static const int kPrivateKeyFieldNumber = 5;$/;"	m	class:HDNodeType
kProductIdFieldNumber	protob/config.pb.cc	/^const int DeviceDescriptor::kProductIdFieldNumber;$/;"	m	class:DeviceDescriptor	file:
kProductIdFieldNumber	protob/config.pb.h	/^  static const int kProductIdFieldNumber = 2;$/;"	m	class:DeviceDescriptor
kPubkeyFieldNumber	protob/messages.pb.cc	/^const int EncryptMessage::kPubkeyFieldNumber;$/;"	m	class:EncryptMessage	file:
kPubkeyFieldNumber	protob/messages.pb.h	/^  static const int kPubkeyFieldNumber = 1;$/;"	m	class:EncryptMessage
kPubkeysFieldNumber	protob/types.pb.cc	/^const int MultisigRedeemScriptType::kPubkeysFieldNumber;$/;"	m	class:MultisigRedeemScriptType	file:
kPubkeysFieldNumber	protob/types.pb.h	/^  static const int kPubkeysFieldNumber = 1;$/;"	m	class:MultisigRedeemScriptType
kPublicKeyFieldNumber	protob/types.pb.cc	/^const int HDNodeType::kPublicKeyFieldNumber;$/;"	m	class:HDNodeType	file:
kPublicKeyFieldNumber	protob/types.pb.h	/^  static const int kPublicKeyFieldNumber = 6;$/;"	m	class:HDNodeType
kRecoveryFakeWordFieldNumber	protob/messages.pb.cc	/^const int DebugLinkState::kRecoveryFakeWordFieldNumber;$/;"	m	class:DebugLinkState	file:
kRecoveryFakeWordFieldNumber	protob/messages.pb.h	/^  static const int kRecoveryFakeWordFieldNumber = 9;$/;"	m	class:DebugLinkState
kRecoveryWordPosFieldNumber	protob/messages.pb.cc	/^const int DebugLinkState::kRecoveryWordPosFieldNumber;$/;"	m	class:DebugLinkState	file:
kRecoveryWordPosFieldNumber	protob/messages.pb.h	/^  static const int kRecoveryWordPosFieldNumber = 10;$/;"	m	class:DebugLinkState
kRemoveFieldNumber	protob/messages.pb.cc	/^const int ChangePin::kRemoveFieldNumber;$/;"	m	class:ChangePin	file:
kRemoveFieldNumber	protob/messages.pb.h	/^  static const int kRemoveFieldNumber = 1;$/;"	m	class:ChangePin
kRequestIndexFieldNumber	protob/types.pb.cc	/^const int TxRequestDetailsType::kRequestIndexFieldNumber;$/;"	m	class:TxRequestDetailsType	file:
kRequestIndexFieldNumber	protob/types.pb.h	/^  static const int kRequestIndexFieldNumber = 1;$/;"	m	class:TxRequestDetailsType
kRequestTypeFieldNumber	protob/messages.pb.cc	/^const int TxRequest::kRequestTypeFieldNumber;$/;"	m	class:TxRequest	file:
kRequestTypeFieldNumber	protob/messages.pb.h	/^  static const int kRequestTypeFieldNumber = 1;$/;"	m	class:TxRequest
kResetEntropyFieldNumber	protob/messages.pb.cc	/^const int DebugLinkState::kResetEntropyFieldNumber;$/;"	m	class:DebugLinkState	file:
kResetEntropyFieldNumber	protob/messages.pb.h	/^  static const int kResetEntropyFieldNumber = 8;$/;"	m	class:DebugLinkState
kResetWordFieldNumber	protob/messages.pb.cc	/^const int DebugLinkState::kResetWordFieldNumber;$/;"	m	class:DebugLinkState	file:
kResetWordFieldNumber	protob/messages.pb.h	/^  static const int kResetWordFieldNumber = 7;$/;"	m	class:DebugLinkState
kRevisionFieldNumber	protob/messages.pb.cc	/^const int Features::kRevisionFieldNumber;$/;"	m	class:Features	file:
kRevisionFieldNumber	protob/messages.pb.h	/^  static const int kRevisionFieldNumber = 13;$/;"	m	class:Features
kScriptPubkeyFieldNumber	protob/types.pb.cc	/^const int TxOutputBinType::kScriptPubkeyFieldNumber;$/;"	m	class:TxOutputBinType	file:
kScriptPubkeyFieldNumber	protob/types.pb.h	/^  static const int kScriptPubkeyFieldNumber = 2;$/;"	m	class:TxOutputBinType
kScriptSigFieldNumber	protob/types.pb.cc	/^const int TxInputType::kScriptSigFieldNumber;$/;"	m	class:TxInputType	file:
kScriptSigFieldNumber	protob/types.pb.h	/^  static const int kScriptSigFieldNumber = 4;$/;"	m	class:TxInputType
kScriptTypeFieldNumber	protob/types.pb.cc	/^const int TxInputType::kScriptTypeFieldNumber;$/;"	m	class:TxInputType	file:
kScriptTypeFieldNumber	protob/types.pb.cc	/^const int TxOutputType::kScriptTypeFieldNumber;$/;"	m	class:TxOutputType	file:
kScriptTypeFieldNumber	protob/types.pb.h	/^  static const int kScriptTypeFieldNumber = 4;$/;"	m	class:TxOutputType
kScriptTypeFieldNumber	protob/types.pb.h	/^  static const int kScriptTypeFieldNumber = 6;$/;"	m	class:TxInputType
kSequenceFieldNumber	protob/types.pb.cc	/^const int TxInputType::kSequenceFieldNumber;$/;"	m	class:TxInputType	file:
kSequenceFieldNumber	protob/types.pb.h	/^  static const int kSequenceFieldNumber = 5;$/;"	m	class:TxInputType
kSerialNumberFieldNumber	protob/config.pb.cc	/^const int DeviceDescriptor::kSerialNumberFieldNumber;$/;"	m	class:DeviceDescriptor	file:
kSerialNumberFieldNumber	protob/config.pb.h	/^  static const int kSerialNumberFieldNumber = 3;$/;"	m	class:DeviceDescriptor
kSerializedFieldNumber	protob/messages.pb.cc	/^const int TxRequest::kSerializedFieldNumber;$/;"	m	class:TxRequest	file:
kSerializedFieldNumber	protob/messages.pb.h	/^  static const int kSerializedFieldNumber = 3;$/;"	m	class:TxRequest
kSerializedTxFieldNumber	protob/types.pb.cc	/^const int TxRequestSerializedType::kSerializedTxFieldNumber;$/;"	m	class:TxRequestSerializedType	file:
kSerializedTxFieldNumber	protob/types.pb.h	/^  static const int kSerializedTxFieldNumber = 3;$/;"	m	class:TxRequestSerializedType
kSeverityLevelFormatSpecifier	easylogging++.h	/^    static const base::type::char_t* kSeverityLevelFormatSpecifier    =      ELPP_LITERAL("%level");$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kSeverityLevelShortFormatSpecifier	easylogging++.h	/^    static const base::type::char_t* kSeverityLevelShortFormatSpecifier    =      ELPP_LITERAL("%levshort");$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kShowDisplayFieldNumber	protob/messages.pb.cc	/^const int GetAddress::kShowDisplayFieldNumber;$/;"	m	class:GetAddress	file:
kShowDisplayFieldNumber	protob/messages.pb.h	/^  static const int kShowDisplayFieldNumber = 3;$/;"	m	class:GetAddress
kSignatureFieldNumber	protob/messages.pb.cc	/^const int MessageSignature::kSignatureFieldNumber;$/;"	m	class:MessageSignature	file:
kSignatureFieldNumber	protob/messages.pb.cc	/^const int VerifyMessage::kSignatureFieldNumber;$/;"	m	class:VerifyMessage	file:
kSignatureFieldNumber	protob/messages.pb.h	/^  static const int kSignatureFieldNumber = 2;$/;"	m	class:MessageSignature
kSignatureFieldNumber	protob/messages.pb.h	/^  static const int kSignatureFieldNumber = 2;$/;"	m	class:VerifyMessage
kSignatureFieldNumber	protob/types.pb.cc	/^const int TxRequestSerializedType::kSignatureFieldNumber;$/;"	m	class:TxRequestSerializedType	file:
kSignatureFieldNumber	protob/types.pb.h	/^  static const int kSignatureFieldNumber = 2;$/;"	m	class:TxRequestSerializedType
kSignatureIndexFieldNumber	protob/types.pb.cc	/^const int TxRequestSerializedType::kSignatureIndexFieldNumber;$/;"	m	class:TxRequestSerializedType	file:
kSignatureIndexFieldNumber	protob/types.pb.h	/^  static const int kSignatureIndexFieldNumber = 1;$/;"	m	class:TxRequestSerializedType
kSignaturesFieldNumber	protob/types.pb.cc	/^const int MultisigRedeemScriptType::kSignaturesFieldNumber;$/;"	m	class:MultisigRedeemScriptType	file:
kSignaturesFieldNumber	protob/types.pb.h	/^  static const int kSignaturesFieldNumber = 2;$/;"	m	class:MultisigRedeemScriptType
kSizeFieldNumber	protob/messages.pb.cc	/^const int GetEntropy::kSizeFieldNumber;$/;"	m	class:GetEntropy	file:
kSizeFieldNumber	protob/messages.pb.h	/^  static const int kSizeFieldNumber = 1;$/;"	m	class:GetEntropy
kSkipChecksumFieldNumber	protob/messages.pb.cc	/^const int LoadDevice::kSkipChecksumFieldNumber;$/;"	m	class:LoadDevice	file:
kSkipChecksumFieldNumber	protob/messages.pb.h	/^  static const int kSkipChecksumFieldNumber = 7;$/;"	m	class:LoadDevice
kSourceFilenameMaxLength	easylogging++.h	/^    static const std::size_t kSourceFilenameMaxLength          =      100;$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kSourceLineMaxLength	easylogging++.h	/^    static const std::size_t kSourceLineMaxLength              =      10;$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kStackStart	easylogging++.h	/^    static const std::size_t kStackStart = 2;  \/\/ We want to skip c'tor and StackTrace::generateNew()$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::debug::StackTrace
kStrengthFieldNumber	protob/messages.pb.cc	/^const int ResetDevice::kStrengthFieldNumber;$/;"	m	class:ResetDevice	file:
kStrengthFieldNumber	protob/messages.pb.h	/^  static const int kStrengthFieldNumber = 2;$/;"	m	class:ResetDevice
kSysLogLoggerId	easylogging++.h	/^    static const char* kSysLogLoggerId                         =      "syslog";$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kTextFieldNumber	protob/messages.pb.cc	/^const int DebugLinkLog::kTextFieldNumber;$/;"	m	class:DebugLinkLog	file:
kTextFieldNumber	protob/messages.pb.h	/^  static const int kTextFieldNumber = 3;$/;"	m	class:DebugLinkLog
kThreadIdFormatSpecifier	easylogging++.h	/^    static const base::type::char_t* kThreadIdFormatSpecifier         =      ELPP_LITERAL("%thread");$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kTimeFormats	easylogging++.h	/^    } kTimeFormats[] = {$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts	typeref:struct:el::Level::ConfigurationType::LoggingFlag::base::consts::__anon9
kTimeFormatsCount	easylogging++.h	/^    static const int kTimeFormatsCount                           =      sizeof(kTimeFormats) \/ sizeof(kTimeFormats[0]);$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kTraceLevelLogValue	easylogging++.h	/^    static const base::type::char_t* kTraceLevelLogValue    =   ELPP_LITERAL("TRACE");$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kTraceLevelShortLogValue	easylogging++.h	/^    static const base::type::char_t* kTraceLevelShortLogValue    =   ELPP_LITERAL("T");$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kTransactionsFieldNumber	protob/messages.pb.cc	/^const int SimpleSignTx::kTransactionsFieldNumber;$/;"	m	class:SimpleSignTx	file:
kTransactionsFieldNumber	protob/messages.pb.h	/^  static const int kTransactionsFieldNumber = 3;$/;"	m	class:SimpleSignTx
kTxFieldNumber	protob/messages.pb.cc	/^const int TxAck::kTxFieldNumber;$/;"	m	class:TxAck	file:
kTxFieldNumber	protob/messages.pb.h	/^  static const int kTxFieldNumber = 1;$/;"	m	class:TxAck
kTxHashFieldNumber	protob/types.pb.cc	/^const int TxRequestDetailsType::kTxHashFieldNumber;$/;"	m	class:TxRequestDetailsType	file:
kTxHashFieldNumber	protob/types.pb.h	/^  static const int kTxHashFieldNumber = 2;$/;"	m	class:TxRequestDetailsType
kTxSizeFieldNumber	protob/messages.pb.cc	/^const int TxSize::kTxSizeFieldNumber;$/;"	m	class:TxSize	file:
kTxSizeFieldNumber	protob/messages.pb.h	/^  static const int kTxSizeFieldNumber = 1;$/;"	m	class:TxSize
kTypeFieldNumber	protob/messages.pb.cc	/^const int PinMatrixRequest::kTypeFieldNumber;$/;"	m	class:PinMatrixRequest	file:
kTypeFieldNumber	protob/messages.pb.h	/^  static const int kTypeFieldNumber = 1;$/;"	m	class:PinMatrixRequest
kUnknownHost	easylogging++.h	/^    static const char* kUnknownHost                            =      "unknown-host";$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kUnknownUser	easylogging++.h	/^    static const char* kUnknownUser                            =      "user";$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kValidLoggerIdSymbols	easylogging++.h	/^    static const char* kValidLoggerIdSymbols                   =      "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-._";$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kValidUntilFieldNumber	protob/config.pb.cc	/^const int Configuration::kValidUntilFieldNumber;$/;"	m	class:Configuration	file:
kValidUntilFieldNumber	protob/config.pb.h	/^  static const int kValidUntilFieldNumber = 5;$/;"	m	class:Configuration
kValueFieldNumber	protob/messages.pb.cc	/^const int CipherKeyValue::kValueFieldNumber;$/;"	m	class:CipherKeyValue	file:
kValueFieldNumber	protob/messages.pb.h	/^  static const int kValueFieldNumber = 3;$/;"	m	class:CipherKeyValue
kVendorFieldNumber	protob/messages.pb.cc	/^const int Features::kVendorFieldNumber;$/;"	m	class:Features	file:
kVendorFieldNumber	protob/messages.pb.h	/^  static const int kVendorFieldNumber = 1;$/;"	m	class:Features
kVendorIdFieldNumber	protob/config.pb.cc	/^const int DeviceDescriptor::kVendorIdFieldNumber;$/;"	m	class:DeviceDescriptor	file:
kVendorIdFieldNumber	protob/config.pb.h	/^  static const int kVendorIdFieldNumber = 1;$/;"	m	class:DeviceDescriptor
kVerboseLevelFormatSpecifier	easylogging++.h	/^    static const base::type::char_t* kVerboseLevelFormatSpecifier     =      ELPP_LITERAL("%vlevel");$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kVerboseLevelLogValue	easylogging++.h	/^    static const base::type::char_t* kVerboseLevelLogValue  =   ELPP_LITERAL("VER");$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kVerboseLevelShortLogValue	easylogging++.h	/^    static const base::type::char_t* kVerboseLevelShortLogValue  =   ELPP_LITERAL("V");$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kVersionFieldNumber	protob/storage.pb.cc	/^const int Storage::kVersionFieldNumber;$/;"	m	class:Storage	file:
kVersionFieldNumber	protob/storage.pb.h	/^  static const int kVersionFieldNumber = 1;$/;"	m	class:Storage
kVersionFieldNumber	protob/types.pb.cc	/^const int TransactionType::kVersionFieldNumber;$/;"	m	class:TransactionType	file:
kVersionFieldNumber	protob/types.pb.h	/^  static const int kVersionFieldNumber = 1;$/;"	m	class:TransactionType
kWarningLevelLogValue	easylogging++.h	/^    static const base::type::char_t* kWarningLevelLogValue  =   ELPP_LITERAL("WARN ");$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kWarningLevelShortLogValue	easylogging++.h	/^    static const base::type::char_t* kWarningLevelShortLogValue  =   ELPP_LITERAL("W");$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kWhitelistUrlsFieldNumber	protob/config.pb.cc	/^const int Configuration::kWhitelistUrlsFieldNumber;$/;"	m	class:Configuration	file:
kWhitelistUrlsFieldNumber	protob/config.pb.h	/^  static const int kWhitelistUrlsFieldNumber = 1;$/;"	m	class:Configuration
kWireDebugInFieldNumber	protob/types.pb.h	/^static const int kWireDebugInFieldNumber = 50004;$/;"	v
kWireDebugOutFieldNumber	protob/types.pb.h	/^static const int kWireDebugOutFieldNumber = 50005;$/;"	v
kWireInFieldNumber	protob/types.pb.h	/^static const int kWireInFieldNumber = 50002;$/;"	v
kWireOutFieldNumber	protob/types.pb.h	/^static const int kWireOutFieldNumber = 50003;$/;"	v
kWireProtocolFieldNumber	protob/config.pb.cc	/^const int Configuration::kWireProtocolFieldNumber;$/;"	m	class:Configuration	file:
kWireProtocolFieldNumber	protob/config.pb.h	/^  static const int kWireProtocolFieldNumber = 3;$/;"	m	class:Configuration
kWordCountFieldNumber	protob/messages.pb.cc	/^const int RecoveryDevice::kWordCountFieldNumber;$/;"	m	class:RecoveryDevice	file:
kWordCountFieldNumber	protob/messages.pb.h	/^  static const int kWordCountFieldNumber = 1;$/;"	m	class:RecoveryDevice
kWordFieldNumber	protob/messages.pb.cc	/^const int WordAck::kWordFieldNumber;$/;"	m	class:WordAck	file:
kWordFieldNumber	protob/messages.pb.h	/^  static const int kWordFieldNumber = 1;$/;"	m	class:WordAck
kXpubFieldNumber	protob/messages.pb.cc	/^const int PublicKey::kXpubFieldNumber;$/;"	m	class:PublicKey	file:
kXpubFieldNumber	protob/messages.pb.h	/^  static const int kXpubFieldNumber = 2;$/;"	m	class:PublicKey
kYearBase	easylogging++.h	/^    static const int kYearBase                          =      1900;$/;"	m	namespace:el::Level::ConfigurationType::LoggingFlag::base::consts
kYesNoFieldNumber	protob/messages.pb.cc	/^const int DebugLinkDecision::kYesNoFieldNumber;$/;"	m	class:DebugLinkDecision	file:
kYesNoFieldNumber	protob/messages.pb.h	/^  static const int kYesNoFieldNumber = 1;$/;"	m	class:DebugLinkDecision
key	protob/messages.pb.h	/^inline const ::std::string& CipherKeyValue::key() const {$/;"	f	class:CipherKeyValue
key_	protob/messages.pb.h	/^  ::std::string* key_;$/;"	m	class:CipherKeyValue
known_devices	protob/config.pb.h	/^Configuration::known_devices() const {$/;"	f	class:Configuration
known_devices	protob/config.pb.h	/^inline const ::DeviceDescriptor& Configuration::known_devices(int index) const {$/;"	f	class:Configuration
known_devices_	protob/config.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::DeviceDescriptor > known_devices_;$/;"	m	class:Configuration
known_devices_size	protob/config.pb.h	/^inline int Configuration::known_devices_size() const {$/;"	f	class:Configuration
label	protob/messages.pb.h	/^inline const ::std::string& ApplySettings::label() const {$/;"	f	class:ApplySettings
label	protob/messages.pb.h	/^inline const ::std::string& Features::label() const {$/;"	f	class:Features
label	protob/messages.pb.h	/^inline const ::std::string& LoadDevice::label() const {$/;"	f	class:LoadDevice
label	protob/messages.pb.h	/^inline const ::std::string& RecoveryDevice::label() const {$/;"	f	class:RecoveryDevice
label	protob/messages.pb.h	/^inline const ::std::string& ResetDevice::label() const {$/;"	f	class:ResetDevice
label	protob/storage.pb.h	/^inline const ::std::string& Storage::label() const {$/;"	f	class:Storage
label_	protob/messages.pb.h	/^  ::std::string* label_;$/;"	m	class:ApplySettings
label_	protob/messages.pb.h	/^  ::std::string* label_;$/;"	m	class:Features
label_	protob/messages.pb.h	/^  ::std::string* label_;$/;"	m	class:LoadDevice
label_	protob/messages.pb.h	/^  ::std::string* label_;$/;"	m	class:RecoveryDevice
label_	protob/messages.pb.h	/^  ::std::string* label_;$/;"	m	class:ResetDevice
label_	protob/storage.pb.h	/^  ::std::string* label_;$/;"	m	class:Storage
language	protob/messages.pb.h	/^inline const ::std::string& ApplySettings::language() const {$/;"	f	class:ApplySettings
language	protob/messages.pb.h	/^inline const ::std::string& Features::language() const {$/;"	f	class:Features
language	protob/messages.pb.h	/^inline const ::std::string& LoadDevice::language() const {$/;"	f	class:LoadDevice
language	protob/messages.pb.h	/^inline const ::std::string& RecoveryDevice::language() const {$/;"	f	class:RecoveryDevice
language	protob/messages.pb.h	/^inline const ::std::string& ResetDevice::language() const {$/;"	f	class:ResetDevice
language	protob/storage.pb.h	/^inline const ::std::string& Storage::language() const {$/;"	f	class:Storage
language_	protob/messages.pb.h	/^  ::std::string* language_;$/;"	m	class:ApplySettings
language_	protob/messages.pb.h	/^  ::std::string* language_;$/;"	m	class:Features
language_	protob/messages.pb.h	/^  ::std::string* language_;$/;"	m	class:LoadDevice
language_	protob/messages.pb.h	/^  ::std::string* language_;$/;"	m	class:RecoveryDevice
language_	protob/messages.pb.h	/^  ::std::string* language_;$/;"	m	class:ResetDevice
language_	protob/storage.pb.h	/^  ::std::string* language_;$/;"	m	class:Storage
lastCheckpointTime	easylogging++.h	/^inline const struct timeval* PerformanceTrackingData::lastCheckpointTime() const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::PerformanceTrackingData
layout	protob/messages.pb.h	/^inline const ::std::string& DebugLinkState::layout() const {$/;"	f	class:DebugLinkState
layout_	protob/messages.pb.h	/^  ::std::string* layout_;$/;"	m	class:DebugLinkState
level	easylogging++.h	/^    inline Level level(void) const { return m_level; }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogMessage
level	easylogging++.h	/^    inline Level level(void) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configuration
level	easylogging++.h	/^    inline Level level(void) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogFormat
level	easylogging++.h	/^    inline base::type::VerboseLevel level(void) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::VRegistry
level	protob/messages.pb.h	/^inline ::google::protobuf::uint32 DebugLinkLog::level() const {$/;"	f	class:DebugLinkLog
level_	protob/messages.pb.h	/^  ::google::protobuf::uint32 level_;$/;"	m	class:DebugLinkLog
line	easylogging++.h	/^    inline unsigned long int line(void) const { return m_line; } \/\/ NOLINT$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogMessage
line	easylogging++.h	/^    inline unsigned long int line(void) const { return m_line; }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::DataType
lineNumber	easylogging++.h	/^    inline unsigned long int lineNumber(void) const {  \/\/ NOLINT$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::HitCounter
lock	easylogging++.h	/^    inline void lock(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::threading::internal::Mutex
lock_time	protob/types.pb.h	/^inline ::google::protobuf::uint32 TransactionType::lock_time() const {$/;"	f	class:TransactionType
lock_time_	protob/types.pb.h	/^  ::google::protobuf::uint32 lock_time_;$/;"	m	class:TransactionType
log	easylogging++.h	/^    inline void Logger::log(Level level, const T& log) { $/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::Logger
log	easylogging++.h	/^    virtual inline void log(el::base::type::ostream_t& os) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configuration
log	easylogging++.h	/^    virtual inline void log(el::base::type::ostream_t& os) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
log	easylogging++.h	/^    virtual void log(el::base::type::ostream_t& os) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogFormat
log	easylogging++.h	/^    void Logger::log(Level level, const char* s, const T& value, const Args&... args) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::Logger
logBuilder	easylogging++.h	/^    inline LogBuilder* logBuilder(void) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
logCrashReason	easylogging++.h	/^    static inline void logCrashReason(int sig, bool stackTraceIfAvailable = false,$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Helpers
logCrashReason	easylogging++.h	/^static void logCrashReason(int sig, bool stackTraceIfAvailable, Level level, const char* logger) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::debug::StackTrace
logDispatchCallback	easylogging++.h	/^    inline T* logDispatchCallback(const std::string& id) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
logDispatchCallback	easylogging++.h	/^    static inline T* logDispatchCallback(const std::string& id) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Helpers
logFlushThreshold	easylogging++.h	/^    inline std::size_t logFlushThreshold(Level level) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
logFormat	easylogging++.h	/^    inline const base::LogFormat& logFormat(Level level) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
logMessage	easylogging++.h	/^    inline const LogMessage* logMessage(void) const { return m_logMessage; }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogDispatchData
logStreamsReference	easylogging++.h	/^    inline base::LogStreamsReferenceMap* logStreamsReference(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::RegisteredLoggers
logStreamsReference	easylogging++.h	/^    static inline const base::LogStreamsReferenceMap* logStreamsReference(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Loggers
log_	easylogging++.h	/^    inline void Logger::log_(Level level, int vlevel, const T& log) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::Logger
log_	easylogging++.h	/^    void Logger::log_(Level level, int vlevel, const char* s, const T& value, const Args&... args) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::Logger
logger	easylogging++.h	/^    inline Logger* logger(void) const { return m_logger; }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogMessage
loggerId	easylogging++.h	/^inline const std::string& PerformanceTrackingData::loggerId(void) const { return m_performanceTracker->m_loggerId; }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::PerformanceTrackingData
ltrim	easylogging++.h	/^    static inline std::string& ltrim(std::string& str) {  \/\/ NOLINT$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Str
m_addr	easylogging++.h	/^        std::string m_addr;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::debug::StackTrace::StackTraceEntry
m_argc	easylogging++.h	/^    int m_argc;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::CommandLineArgs
m_argv	easylogging++.h	/^    char** m_argv;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::CommandLineArgs
m_checkpointId	easylogging++.h	/^    std::string m_checkpointId;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::DataType
m_commandLineArgs	easylogging++.h	/^    base::utils::CommandLineArgs m_commandLineArgs;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
m_configurationFile	easylogging++.h	/^    std::string m_configurationFile;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations
m_configurationType	easylogging++.h	/^        ConfigurationType m_configurationType;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configuration::Predicate
m_configurationType	easylogging++.h	/^    ConfigurationType m_configurationType;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configuration
m_configurations	easylogging++.h	/^    Configurations m_configurations;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
m_configurations	easylogging++.h	/^    Configurations* m_configurations;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
m_containerLogSeperator	easylogging++.h	/^    const base::type::char_t* m_containerLogSeperator;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::MessageBuilder
m_customFormatSpecifiers	easylogging++.h	/^    std::vector<CustomFormatSpecifier> m_customFormatSpecifiers;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
m_data	easylogging++.h	/^    const LogDispatchData* m_data;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::DefaultLogDispatchCallback
m_data	easylogging++.h	/^    const PerformanceTrackingData* m_data;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::PerformanceTracker::DefaultPerformanceTrackingCallback
m_dataType	easylogging++.h	/^    PerformanceTrackingData::DataType m_dataType;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::DataType
m_dateTimeFormat	easylogging++.h	/^    std::string m_dateTimeFormat;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogFormat
m_defaultConfigurations	easylogging++.h	/^    Configurations m_defaultConfigurations;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::RegisteredLoggers
m_defaultLogBuilder	easylogging++.h	/^    LogBuilderPtr m_defaultLogBuilder;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::RegisteredLoggers
m_demangled	easylogging++.h	/^        std::string m_demangled;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::debug::StackTrace::StackTraceEntry
m_dispatchAction	easylogging++.h	/^    base::DispatchAction m_dispatchAction;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogDispatchData
m_dispatchAction	easylogging++.h	/^    base::DispatchAction m_dispatchAction;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::LogDispatcher
m_enabled	easylogging++.h	/^    bool m_enabled;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Callback
m_enabledMap	easylogging++.h	/^    std::map<Level, bool> m_enabledMap;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
m_file	easylogging++.h	/^    const char* m_file;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::DataType
m_file	easylogging++.h	/^    std::string m_file;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogMessage
m_fileStreamMap	easylogging++.h	/^    std::map<Level, base::FileStreamPtr> m_fileStreamMap;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
m_filename	easylogging++.h	/^        const char* m_filename;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::HitCounter::Predicate
m_filename	easylogging++.h	/^    const char* m_filename;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::HitCounter
m_filenameMap	easylogging++.h	/^    std::map<Level, std::string> m_filenameMap;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
m_firstCheckpoint	easylogging++.h	/^    bool m_firstCheckpoint;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::DataType
m_flag	easylogging++.h	/^        LoggingFlag m_flag;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Loggers::ScopedAddFlag
m_flag	easylogging++.h	/^        LoggingFlag m_flag;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Loggers::ScopedRemoveFlag
m_flags	easylogging++.h	/^    base::type::EnumType m_flags;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogFormat
m_flags	easylogging++.h	/^    base::type::EnumType m_flags;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
m_format	easylogging++.h	/^    base::type::string_t m_format;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogFormat
m_formatSpecifier	easylogging++.h	/^    const char* m_formatSpecifier;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::CustomFormatSpecifier
m_formattedTimeTaken	easylogging++.h	/^    base::type::string_t m_formattedTimeTaken;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::DataType
m_func	easylogging++.h	/^    const char* m_func;    $/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::DataType
m_func	easylogging++.h	/^    std::string m_func;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogMessage
m_handler	easylogging++.h	/^    Handler m_handler;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::debug::StackTrace::CrashHandler
m_hex	easylogging++.h	/^        std::string m_hex;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::debug::StackTrace::StackTraceEntry
m_hitCounts	easylogging++.h	/^    std::size_t m_hitCounts;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::HitCounter
m_id	easylogging++.h	/^    std::string m_id;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
m_index	easylogging++.h	/^        std::size_t m_index;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::debug::StackTrace::StackTraceEntry
m_isConfigured	easylogging++.h	/^    bool m_isConfigured;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
m_isFromFile	easylogging++.h	/^    bool m_isFromFile;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations
m_level	easylogging++.h	/^        Level m_level;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configuration::Predicate
m_level	easylogging++.h	/^    Level m_level;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configuration
m_level	easylogging++.h	/^    Level m_level;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogFormat
m_level	easylogging++.h	/^    Level m_level;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogMessage
m_level	easylogging++.h	/^    base::type::VerboseLevel m_level;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::VRegistry
m_line	easylogging++.h	/^    unsigned long int m_line;  \/\/ NOLINT$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogMessage
m_line	easylogging++.h	/^    unsigned long int m_line;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::DataType
m_lineNumber	easylogging++.h	/^        unsigned long int m_lineNumber;  \/\/ NOLINT$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::HitCounter::Predicate
m_lineNumber	easylogging++.h	/^    unsigned long int m_lineNumber;  \/\/ NOLINT$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::HitCounter
m_list	easylogging++.h	/^    Container m_list;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::AbstractRegistry
m_location	easylogging++.h	/^        std::string m_location;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::debug::StackTrace::StackTraceEntry
m_logBuilder	easylogging++.h	/^    LogBuilderPtr m_logBuilder;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
m_logDispatchCallbacks	easylogging++.h	/^    std::map<std::string, base::type::LogDispatchCallbackPtr> m_logDispatchCallbacks;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
m_logFlushThresholdMap	easylogging++.h	/^    std::map<Level, std::size_t> m_logFlushThresholdMap;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
m_logFormatMap	easylogging++.h	/^    std::map<Level, base::LogFormat> m_logFormatMap;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
m_logMessage	easylogging++.h	/^    LogMessage m_logMessage;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::LogDispatcher
m_logMessage	easylogging++.h	/^    LogMessage* m_logMessage;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogDispatchData
m_logStreamsReference	easylogging++.h	/^    base::LogStreamsReferenceMap m_logStreamsReference;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::RegisteredLoggers
m_logStreamsReference	easylogging++.h	/^    base::LogStreamsReferenceMap* m_logStreamsReference;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
m_logStreamsReference	easylogging++.h	/^    base::LogStreamsReferenceMap* m_logStreamsReference;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
m_logger	easylogging++.h	/^    Logger* m_logger;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogMessage
m_logger	easylogging++.h	/^    Logger* m_logger;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::MessageBuilder
m_loggingLevel	easylogging++.h	/^    Level m_loggingLevel;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
m_maxLogFileSizeMap	easylogging++.h	/^    std::map<Level, std::size_t> m_maxLogFileSizeMap;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
m_message	easylogging++.h	/^    base::type::string_t m_message;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogMessage
m_millisecondsWidthMap	easylogging++.h	/^    std::map<Level, base::MillisecondsWidth> m_millisecondsWidthMap;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
m_modules	easylogging++.h	/^    std::map<std::string, base::type::VerboseLevel> m_modules;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::VRegistry
m_mutex	easylogging++.h	/^    M* m_mutex;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::threading::internal::ScopedLock
m_mutex	easylogging++.h	/^    base::threading::Mutex m_mutex;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::threading::ThreadSafe
m_offset	easylogging++.h	/^    int m_width; unsigned int m_offset;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::MillisecondsWidth
m_pFlags	easylogging++.h	/^    base::type::EnumType* m_pFlags;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::VRegistry
m_params	easylogging++.h	/^    std::vector<std::string> m_params;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::CommandLineArgs
m_paramsWithValue	easylogging++.h	/^    std::map<std::string, std::string> m_paramsWithValue;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::CommandLineArgs
m_parentApplicationName	easylogging++.h	/^    std::string m_parentApplicationName;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
m_performanceTracker	easylogging++.h	/^    base::PerformanceTracker* m_performanceTracker;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::DataType
m_performanceTrackingCallbacks	easylogging++.h	/^    std::map<std::string, base::type::PerformanceTrackingCallbackPtr> m_performanceTrackingCallbacks;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
m_performanceTrackingMap	easylogging++.h	/^    std::map<Level, bool> m_performanceTrackingMap;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
m_preRollOutCallback	easylogging++.h	/^    PreRollOutCallback m_preRollOutCallback;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
m_proceed	easylogging++.h	/^    bool m_proceed;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::LogDispatcher
m_registeredHitCounters	easylogging++.h	/^    base::RegisteredHitCounters* m_registeredHitCounters;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
m_registeredLoggers	easylogging++.h	/^    base::RegisteredLoggers* m_registeredLoggers;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
m_resolver	easylogging++.h	/^    FormatSpecifierValueResolver m_resolver;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::CustomFormatSpecifier
m_stack	easylogging++.h	/^    std::vector<StackTraceEntry> m_stack;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::debug::StackTrace
m_stream	easylogging++.h	/^    base::type::stringstream_t m_stream;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
m_toFileMap	easylogging++.h	/^    std::map<Level, bool> m_toFileMap;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
m_toStandardOutputMap	easylogging++.h	/^    std::map<Level, bool> m_toStandardOutputMap;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
m_typedConfigurations	easylogging++.h	/^    base::TypedConfigurations* m_typedConfigurations;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
m_underlyingMutex	easylogging++.h	/^    CRITICAL_SECTION m_underlyingMutex;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::threading::internal::Mutex
m_underlyingMutex	easylogging++.h	/^    pthread_mutex_t m_underlyingMutex;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::threading::internal::Mutex
m_unflushedCount	easylogging++.h	/^    std::map<Level, unsigned int> m_unflushedCount;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
m_userFormat	easylogging++.h	/^    base::type::string_t m_userFormat;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogFormat
m_vRegistry	easylogging++.h	/^    base::VRegistry* m_vRegistry;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
m_value	easylogging++.h	/^    std::string m_value;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configuration
m_verboseLevel	easylogging++.h	/^    base::type::VerboseLevel m_verboseLevel;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogMessage
m_width	easylogging++.h	/^    int m_width; unsigned int m_offset;$/;"	m	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::MillisecondsWidth
main	main.cpp	/^int main(int argc, char **argv)$/;"	f
major_version	protob/messages.pb.h	/^inline ::google::protobuf::uint32 Features::major_version() const {$/;"	f	class:Features
major_version_	protob/messages.pb.h	/^  ::google::protobuf::uint32 major_version_;$/;"	m	class:Features
matrix	protob/messages.pb.h	/^inline const ::std::string& DebugLinkState::matrix() const {$/;"	f	class:DebugLinkState
matrix_	protob/messages.pb.h	/^  ::std::string* matrix_;$/;"	m	class:DebugLinkState
maxLogFileSize	easylogging++.h	/^    inline std::size_t maxLogFileSize(Level level) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
maxfee_kb	protob/types.pb.h	/^inline ::google::protobuf::uint64 CoinType::maxfee_kb() const {$/;"	f	class:CoinType
maxfee_kb_	protob/types.pb.h	/^  ::google::protobuf::uint64 maxfee_kb_;$/;"	m	class:CoinType
message	easylogging++.h	/^    inline const base::type::string_t& message(void) const { return m_message; }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogMessage
message	protob/messages.pb.h	/^inline const ::std::string& DecryptMessage::message() const {$/;"	f	class:DecryptMessage
message	protob/messages.pb.h	/^inline const ::std::string& EncryptMessage::message() const {$/;"	f	class:EncryptMessage
message	protob/messages.pb.h	/^inline const ::std::string& Failure::message() const {$/;"	f	class:Failure
message	protob/messages.pb.h	/^inline const ::std::string& Ping::message() const {$/;"	f	class:Ping
message	protob/messages.pb.h	/^inline const ::std::string& SignMessage::message() const {$/;"	f	class:SignMessage
message	protob/messages.pb.h	/^inline const ::std::string& Success::message() const {$/;"	f	class:Success
message	protob/messages.pb.h	/^inline const ::std::string& VerifyMessage::message() const {$/;"	f	class:VerifyMessage
message	wire.hpp	/^	struct message {$/;"	s	namespace:wire
message_	protob/messages.pb.h	/^  ::std::string* message_;$/;"	m	class:DecryptMessage
message_	protob/messages.pb.h	/^  ::std::string* message_;$/;"	m	class:EncryptMessage
message_	protob/messages.pb.h	/^  ::std::string* message_;$/;"	m	class:Failure
message_	protob/messages.pb.h	/^  ::std::string* message_;$/;"	m	class:Ping
message_	protob/messages.pb.h	/^  ::std::string* message_;$/;"	m	class:SignMessage
message_	protob/messages.pb.h	/^  ::std::string* message_;$/;"	m	class:Success
message_	protob/messages.pb.h	/^  ::std::string* message_;$/;"	m	class:VerifyMessage
millisecondsWidth	easylogging++.h	/^    inline const base::MillisecondsWidth& millisecondsWidth(Level level = Level::Global) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
minor_version	protob/messages.pb.h	/^inline ::google::protobuf::uint32 Features::minor_version() const {$/;"	f	class:Features
minor_version_	protob/messages.pb.h	/^  ::google::protobuf::uint32 minor_version_;$/;"	m	class:Features
mnemonic	protob/messages.pb.h	/^inline const ::std::string& DebugLinkState::mnemonic() const {$/;"	f	class:DebugLinkState
mnemonic	protob/messages.pb.h	/^inline const ::std::string& LoadDevice::mnemonic() const {$/;"	f	class:LoadDevice
mnemonic	protob/storage.pb.h	/^inline const ::std::string& Storage::mnemonic() const {$/;"	f	class:Storage
mnemonic_	protob/messages.pb.h	/^  ::std::string* mnemonic_;$/;"	m	class:DebugLinkState
mnemonic_	protob/messages.pb.h	/^  ::std::string* mnemonic_;$/;"	m	class:LoadDevice
mnemonic_	protob/storage.pb.h	/^  ::std::string* mnemonic_;$/;"	m	class:Storage
modules	easylogging++.h	/^    inline const std::map<std::string, base::type::VerboseLevel>& modules(void) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::VRegistry
multisig	protob/types.pb.h	/^inline const ::MultisigRedeemScriptType& TxInputType::multisig() const {$/;"	f	class:TxInputType
multisig_	protob/types.pb.h	/^  ::MultisigRedeemScriptType* multisig_;$/;"	m	class:TxInputType
mutable_address	protob/messages.pb.h	/^inline ::std::string* Address::mutable_address() {$/;"	f	class:Address
mutable_address	protob/messages.pb.h	/^inline ::std::string* MessageSignature::mutable_address() {$/;"	f	class:MessageSignature
mutable_address	protob/messages.pb.h	/^inline ::std::string* VerifyMessage::mutable_address() {$/;"	f	class:VerifyMessage
mutable_address	protob/types.pb.h	/^inline ::std::string* TxOutputType::mutable_address() {$/;"	f	class:TxOutputType
mutable_address_n	protob/messages.pb.h	/^CipherKeyValue::mutable_address_n() {$/;"	f	class:CipherKeyValue
mutable_address_n	protob/messages.pb.h	/^DecryptMessage::mutable_address_n() {$/;"	f	class:DecryptMessage
mutable_address_n	protob/messages.pb.h	/^EncryptMessage::mutable_address_n() {$/;"	f	class:EncryptMessage
mutable_address_n	protob/messages.pb.h	/^GetAddress::mutable_address_n() {$/;"	f	class:GetAddress
mutable_address_n	protob/messages.pb.h	/^GetPublicKey::mutable_address_n() {$/;"	f	class:GetPublicKey
mutable_address_n	protob/messages.pb.h	/^SignMessage::mutable_address_n() {$/;"	f	class:SignMessage
mutable_address_n	protob/types.pb.h	/^TxInputType::mutable_address_n() {$/;"	f	class:TxInputType
mutable_address_n	protob/types.pb.h	/^TxOutputType::mutable_address_n() {$/;"	f	class:TxOutputType
mutable_bin_outputs	protob/types.pb.h	/^TransactionType::mutable_bin_outputs() {$/;"	f	class:TransactionType
mutable_bin_outputs	protob/types.pb.h	/^inline ::TxOutputBinType* TransactionType::mutable_bin_outputs(int index) {$/;"	f	class:TransactionType
mutable_blacklist_urls	protob/config.pb.h	/^Configuration::mutable_blacklist_urls() {$/;"	f	class:Configuration
mutable_blacklist_urls	protob/config.pb.h	/^inline ::std::string* Configuration::mutable_blacklist_urls(int index) {$/;"	f	class:Configuration
mutable_bootloader_hash	protob/messages.pb.h	/^inline ::std::string* Features::mutable_bootloader_hash() {$/;"	f	class:Features
mutable_bucket	protob/messages.pb.h	/^inline ::std::string* DebugLinkLog::mutable_bucket() {$/;"	f	class:DebugLinkLog
mutable_chain_code	protob/types.pb.h	/^inline ::std::string* HDNodeType::mutable_chain_code() {$/;"	f	class:HDNodeType
mutable_coin_name	protob/messages.pb.h	/^inline ::std::string* EstimateTxSize::mutable_coin_name() {$/;"	f	class:EstimateTxSize
mutable_coin_name	protob/messages.pb.h	/^inline ::std::string* GetAddress::mutable_coin_name() {$/;"	f	class:GetAddress
mutable_coin_name	protob/messages.pb.h	/^inline ::std::string* SignMessage::mutable_coin_name() {$/;"	f	class:SignMessage
mutable_coin_name	protob/messages.pb.h	/^inline ::std::string* SignTx::mutable_coin_name() {$/;"	f	class:SignTx
mutable_coin_name	protob/messages.pb.h	/^inline ::std::string* SimpleSignTx::mutable_coin_name() {$/;"	f	class:SimpleSignTx
mutable_coin_name	protob/types.pb.h	/^inline ::std::string* CoinType::mutable_coin_name() {$/;"	f	class:CoinType
mutable_coin_shortcut	protob/types.pb.h	/^inline ::std::string* CoinType::mutable_coin_shortcut() {$/;"	f	class:CoinType
mutable_coins	protob/messages.pb.h	/^Features::mutable_coins() {$/;"	f	class:Features
mutable_coins	protob/messages.pb.h	/^inline ::CoinType* Features::mutable_coins(int index) {$/;"	f	class:Features
mutable_cpu_sn	protob/messages.pb.h	/^inline ::std::string* Features::mutable_cpu_sn() {$/;"	f	class:Features
mutable_data	protob/messages.pb.h	/^inline ::std::string* ButtonRequest::mutable_data() {$/;"	f	class:ButtonRequest
mutable_details	protob/messages.pb.h	/^inline ::TxRequestDetailsType* TxRequest::mutable_details() {$/;"	f	class:TxRequest
mutable_device_id	protob/messages.pb.h	/^inline ::std::string* Features::mutable_device_id() {$/;"	f	class:Features
mutable_entropy	protob/messages.pb.h	/^inline ::std::string* Entropy::mutable_entropy() {$/;"	f	class:Entropy
mutable_entropy	protob/messages.pb.h	/^inline ::std::string* EntropyAck::mutable_entropy() {$/;"	f	class:EntropyAck
mutable_inputs	protob/messages.pb.h	/^SimpleSignTx::mutable_inputs() {$/;"	f	class:SimpleSignTx
mutable_inputs	protob/messages.pb.h	/^inline ::TxInputType* SimpleSignTx::mutable_inputs(int index) {$/;"	f	class:SimpleSignTx
mutable_inputs	protob/types.pb.h	/^TransactionType::mutable_inputs() {$/;"	f	class:TransactionType
mutable_inputs	protob/types.pb.h	/^inline ::TxInputType* TransactionType::mutable_inputs(int index) {$/;"	f	class:TransactionType
mutable_key	protob/messages.pb.h	/^inline ::std::string* CipherKeyValue::mutable_key() {$/;"	f	class:CipherKeyValue
mutable_known_devices	protob/config.pb.h	/^Configuration::mutable_known_devices() {$/;"	f	class:Configuration
mutable_known_devices	protob/config.pb.h	/^inline ::DeviceDescriptor* Configuration::mutable_known_devices(int index) {$/;"	f	class:Configuration
mutable_label	protob/messages.pb.h	/^inline ::std::string* ApplySettings::mutable_label() {$/;"	f	class:ApplySettings
mutable_label	protob/messages.pb.h	/^inline ::std::string* Features::mutable_label() {$/;"	f	class:Features
mutable_label	protob/messages.pb.h	/^inline ::std::string* LoadDevice::mutable_label() {$/;"	f	class:LoadDevice
mutable_label	protob/messages.pb.h	/^inline ::std::string* RecoveryDevice::mutable_label() {$/;"	f	class:RecoveryDevice
mutable_label	protob/messages.pb.h	/^inline ::std::string* ResetDevice::mutable_label() {$/;"	f	class:ResetDevice
mutable_label	protob/storage.pb.h	/^inline ::std::string* Storage::mutable_label() {$/;"	f	class:Storage
mutable_language	protob/messages.pb.h	/^inline ::std::string* ApplySettings::mutable_language() {$/;"	f	class:ApplySettings
mutable_language	protob/messages.pb.h	/^inline ::std::string* Features::mutable_language() {$/;"	f	class:Features
mutable_language	protob/messages.pb.h	/^inline ::std::string* LoadDevice::mutable_language() {$/;"	f	class:LoadDevice
mutable_language	protob/messages.pb.h	/^inline ::std::string* RecoveryDevice::mutable_language() {$/;"	f	class:RecoveryDevice
mutable_language	protob/messages.pb.h	/^inline ::std::string* ResetDevice::mutable_language() {$/;"	f	class:ResetDevice
mutable_language	protob/storage.pb.h	/^inline ::std::string* Storage::mutable_language() {$/;"	f	class:Storage
mutable_layout	protob/messages.pb.h	/^inline ::std::string* DebugLinkState::mutable_layout() {$/;"	f	class:DebugLinkState
mutable_matrix	protob/messages.pb.h	/^inline ::std::string* DebugLinkState::mutable_matrix() {$/;"	f	class:DebugLinkState
mutable_message	protob/messages.pb.h	/^inline ::std::string* DecryptMessage::mutable_message() {$/;"	f	class:DecryptMessage
mutable_message	protob/messages.pb.h	/^inline ::std::string* EncryptMessage::mutable_message() {$/;"	f	class:EncryptMessage
mutable_message	protob/messages.pb.h	/^inline ::std::string* Failure::mutable_message() {$/;"	f	class:Failure
mutable_message	protob/messages.pb.h	/^inline ::std::string* Ping::mutable_message() {$/;"	f	class:Ping
mutable_message	protob/messages.pb.h	/^inline ::std::string* SignMessage::mutable_message() {$/;"	f	class:SignMessage
mutable_message	protob/messages.pb.h	/^inline ::std::string* Success::mutable_message() {$/;"	f	class:Success
mutable_message	protob/messages.pb.h	/^inline ::std::string* VerifyMessage::mutable_message() {$/;"	f	class:VerifyMessage
mutable_mnemonic	protob/messages.pb.h	/^inline ::std::string* DebugLinkState::mutable_mnemonic() {$/;"	f	class:DebugLinkState
mutable_mnemonic	protob/messages.pb.h	/^inline ::std::string* LoadDevice::mutable_mnemonic() {$/;"	f	class:LoadDevice
mutable_mnemonic	protob/storage.pb.h	/^inline ::std::string* Storage::mutable_mnemonic() {$/;"	f	class:Storage
mutable_multisig	protob/types.pb.h	/^inline ::MultisigRedeemScriptType* TxInputType::mutable_multisig() {$/;"	f	class:TxInputType
mutable_node	protob/messages.pb.h	/^inline ::HDNodeType* DebugLinkState::mutable_node() {$/;"	f	class:DebugLinkState
mutable_node	protob/messages.pb.h	/^inline ::HDNodeType* LoadDevice::mutable_node() {$/;"	f	class:LoadDevice
mutable_node	protob/messages.pb.h	/^inline ::HDNodeType* PublicKey::mutable_node() {$/;"	f	class:PublicKey
mutable_node	protob/storage.pb.h	/^inline ::HDNodeType* Storage::mutable_node() {$/;"	f	class:Storage
mutable_outputs	protob/messages.pb.h	/^SimpleSignTx::mutable_outputs() {$/;"	f	class:SimpleSignTx
mutable_outputs	protob/messages.pb.h	/^inline ::TxOutputType* SimpleSignTx::mutable_outputs(int index) {$/;"	f	class:SimpleSignTx
mutable_outputs	protob/types.pb.h	/^TransactionType::mutable_outputs() {$/;"	f	class:TransactionType
mutable_outputs	protob/types.pb.h	/^inline ::TxOutputType* TransactionType::mutable_outputs(int index) {$/;"	f	class:TransactionType
mutable_passphrase	protob/messages.pb.h	/^inline ::std::string* PassphraseAck::mutable_passphrase() {$/;"	f	class:PassphraseAck
mutable_path	protob/config.pb.h	/^inline ::std::string* DeviceDescriptor::mutable_path() {$/;"	f	class:DeviceDescriptor
mutable_payload	protob/messages.pb.h	/^inline ::std::string* FirmwareUpload::mutable_payload() {$/;"	f	class:FirmwareUpload
mutable_payload	protob/messages.pb.h	/^inline ::std::string* Success::mutable_payload() {$/;"	f	class:Success
mutable_pin	protob/messages.pb.h	/^inline ::std::string* DebugLinkState::mutable_pin() {$/;"	f	class:DebugLinkState
mutable_pin	protob/messages.pb.h	/^inline ::std::string* LoadDevice::mutable_pin() {$/;"	f	class:LoadDevice
mutable_pin	protob/messages.pb.h	/^inline ::std::string* PinMatrixAck::mutable_pin() {$/;"	f	class:PinMatrixAck
mutable_pin	protob/storage.pb.h	/^inline ::std::string* Storage::mutable_pin() {$/;"	f	class:Storage
mutable_prev_hash	protob/types.pb.h	/^inline ::std::string* TxInputType::mutable_prev_hash() {$/;"	f	class:TxInputType
mutable_private_key	protob/types.pb.h	/^inline ::std::string* HDNodeType::mutable_private_key() {$/;"	f	class:HDNodeType
mutable_pubkey	protob/messages.pb.h	/^inline ::std::string* EncryptMessage::mutable_pubkey() {$/;"	f	class:EncryptMessage
mutable_pubkeys	protob/types.pb.h	/^MultisigRedeemScriptType::mutable_pubkeys() {$/;"	f	class:MultisigRedeemScriptType
mutable_pubkeys	protob/types.pb.h	/^inline ::std::string* MultisigRedeemScriptType::mutable_pubkeys(int index) {$/;"	f	class:MultisigRedeemScriptType
mutable_public_key	protob/types.pb.h	/^inline ::std::string* HDNodeType::mutable_public_key() {$/;"	f	class:HDNodeType
mutable_recovery_fake_word	protob/messages.pb.h	/^inline ::std::string* DebugLinkState::mutable_recovery_fake_word() {$/;"	f	class:DebugLinkState
mutable_reset_entropy	protob/messages.pb.h	/^inline ::std::string* DebugLinkState::mutable_reset_entropy() {$/;"	f	class:DebugLinkState
mutable_reset_word	protob/messages.pb.h	/^inline ::std::string* DebugLinkState::mutable_reset_word() {$/;"	f	class:DebugLinkState
mutable_revision	protob/messages.pb.h	/^inline ::std::string* Features::mutable_revision() {$/;"	f	class:Features
mutable_script_pubkey	protob/types.pb.h	/^inline ::std::string* TxOutputBinType::mutable_script_pubkey() {$/;"	f	class:TxOutputBinType
mutable_script_sig	protob/types.pb.h	/^inline ::std::string* TxInputType::mutable_script_sig() {$/;"	f	class:TxInputType
mutable_serial_number	protob/config.pb.h	/^inline ::std::string* DeviceDescriptor::mutable_serial_number() {$/;"	f	class:DeviceDescriptor
mutable_serialized	protob/messages.pb.h	/^inline ::TxRequestSerializedType* TxRequest::mutable_serialized() {$/;"	f	class:TxRequest
mutable_serialized_tx	protob/types.pb.h	/^inline ::std::string* TxRequestSerializedType::mutable_serialized_tx() {$/;"	f	class:TxRequestSerializedType
mutable_signature	protob/messages.pb.h	/^inline ::std::string* MessageSignature::mutable_signature() {$/;"	f	class:MessageSignature
mutable_signature	protob/messages.pb.h	/^inline ::std::string* VerifyMessage::mutable_signature() {$/;"	f	class:VerifyMessage
mutable_signature	protob/types.pb.h	/^inline ::std::string* TxRequestSerializedType::mutable_signature() {$/;"	f	class:TxRequestSerializedType
mutable_signatures	protob/types.pb.h	/^MultisigRedeemScriptType::mutable_signatures() {$/;"	f	class:MultisigRedeemScriptType
mutable_signatures	protob/types.pb.h	/^inline ::std::string* MultisigRedeemScriptType::mutable_signatures(int index) {$/;"	f	class:MultisigRedeemScriptType
mutable_text	protob/messages.pb.h	/^inline ::std::string* DebugLinkLog::mutable_text() {$/;"	f	class:DebugLinkLog
mutable_transactions	protob/messages.pb.h	/^SimpleSignTx::mutable_transactions() {$/;"	f	class:SimpleSignTx
mutable_transactions	protob/messages.pb.h	/^inline ::TransactionType* SimpleSignTx::mutable_transactions(int index) {$/;"	f	class:SimpleSignTx
mutable_tx	protob/messages.pb.h	/^inline ::TransactionType* TxAck::mutable_tx() {$/;"	f	class:TxAck
mutable_tx_hash	protob/types.pb.h	/^inline ::std::string* TxRequestDetailsType::mutable_tx_hash() {$/;"	f	class:TxRequestDetailsType
mutable_unknown_fields	protob/config.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:Configuration
mutable_unknown_fields	protob/config.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:DeviceDescriptor
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:Address
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:ApplySettings
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:ButtonAck
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:ButtonRequest
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:Cancel
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:ChangePin
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:CipherKeyValue
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:ClearSession
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:DebugLinkDecision
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:DebugLinkGetState
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:DebugLinkLog
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:DebugLinkState
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:DebugLinkStop
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:DecryptMessage
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:EncryptMessage
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:Entropy
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:EntropyAck
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:EntropyRequest
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:EstimateTxSize
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:Failure
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:Features
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:FirmwareErase
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:FirmwareUpload
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:GetAddress
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:GetEntropy
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:GetPublicKey
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:Initialize
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:LoadDevice
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:MessageSignature
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:PassphraseAck
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:PassphraseRequest
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:PinMatrixAck
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:PinMatrixRequest
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:Ping
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:PublicKey
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:RecoveryDevice
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:ResetDevice
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:SignMessage
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:SignTx
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:SimpleSignTx
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:Success
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:TestScreen
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:TxAck
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:TxRequest
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:TxSize
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:VerifyMessage
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:WipeDevice
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:WordAck
mutable_unknown_fields	protob/messages.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:WordRequest
mutable_unknown_fields	protob/storage.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:Storage
mutable_unknown_fields	protob/types.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:CoinType
mutable_unknown_fields	protob/types.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:HDNodeType
mutable_unknown_fields	protob/types.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:MultisigRedeemScriptType
mutable_unknown_fields	protob/types.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:TransactionType
mutable_unknown_fields	protob/types.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:TxInputType
mutable_unknown_fields	protob/types.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:TxOutputBinType
mutable_unknown_fields	protob/types.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:TxOutputType
mutable_unknown_fields	protob/types.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:TxRequestDetailsType
mutable_unknown_fields	protob/types.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:TxRequestSerializedType
mutable_value	protob/messages.pb.h	/^inline ::std::string* CipherKeyValue::mutable_value() {$/;"	f	class:CipherKeyValue
mutable_vendor	protob/messages.pb.h	/^inline ::std::string* Features::mutable_vendor() {$/;"	f	class:Features
mutable_whitelist_urls	protob/config.pb.h	/^Configuration::mutable_whitelist_urls() {$/;"	f	class:Configuration
mutable_whitelist_urls	protob/config.pb.h	/^inline ::std::string* Configuration::mutable_whitelist_urls(int index) {$/;"	f	class:Configuration
mutable_wire_protocol	protob/config.pb.h	/^inline ::google::protobuf::FileDescriptorSet* Configuration::mutable_wire_protocol() {$/;"	f	class:Configuration
mutable_word	protob/messages.pb.h	/^inline ::std::string* WordAck::mutable_word() {$/;"	f	class:WordAck
mutable_xpub	protob/messages.pb.h	/^inline ::std::string* PublicKey::mutable_xpub() {$/;"	f	class:PublicKey
name	easylogging++.h	/^        const char* name;$/;"	m	struct:el::Level::ConfigurationType::LoggingFlag::base::consts::__anon10
newFileStream	easylogging++.h	/^    static base::type::fstream_t* newFileStream(const std::string& filename) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File
node	protob/messages.pb.h	/^inline const ::HDNodeType& DebugLinkState::node() const {$/;"	f	class:DebugLinkState
node	protob/messages.pb.h	/^inline const ::HDNodeType& LoadDevice::node() const {$/;"	f	class:LoadDevice
node	protob/messages.pb.h	/^inline const ::HDNodeType& PublicKey::node() const {$/;"	f	class:PublicKey
node	protob/storage.pb.h	/^inline const ::HDNodeType& Storage::node() const {$/;"	f	class:Storage
node_	protob/messages.pb.h	/^  ::HDNodeType* node_;$/;"	m	class:DebugLinkState
node_	protob/messages.pb.h	/^  ::HDNodeType* node_;$/;"	m	class:LoadDevice
node_	protob/messages.pb.h	/^  ::HDNodeType* node_;$/;"	m	class:PublicKey
node_	protob/storage.pb.h	/^  ::HDNodeType* node_;$/;"	m	class:Storage
numb	easylogging++.h	/^        int numb;$/;"	m	struct:el::Level::ConfigurationType::LoggingFlag::base::consts::__anon10
open	core.hpp	/^		void open() {$/;"	f	struct:core::device_kernel
open_error	wire.hpp	/^		struct open_error : public std::runtime_error {$/;"	s	struct:wire::device
operator !=	easylogging++.h	/^    bool operator!=(const AbstractRegistry<T_Ptr, Container>& other) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::AbstractRegistry
operator ()	easylogging++.h	/^        inline bool operator()(const Configuration* conf) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configuration::Predicate
operator ()	easylogging++.h	/^        inline bool operator()(const HitCounter* counter) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::HitCounter::Predicate
operator <<	easylogging++.h	/^        friend std::ostream& operator<<(std::ostream& ss, const StackTraceEntry& si) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::debug::StackTrace::StackTraceEntry
operator <<	easylogging++.h	/^    friend inline base::type::ostream_t& operator<<(base::type::ostream_t& os, const RegistryWithPred& sr) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::RegistryWithPred
operator <<	easylogging++.h	/^    friend inline el::base::type::ostream_t& operator<<(el::base::type::ostream_t& os, const Loggable& loggable) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Loggable
operator <<	easylogging++.h	/^    friend inline std::ostream& operator<<(std::ostream& os, const StackTrace& st) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::debug::StackTrace
operator <<	easylogging++.h	/^    inline MessageBuilder& operator<<(QChar msg) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::MessageBuilder
operator <<	easylogging++.h	/^    inline MessageBuilder& operator<<(const QByteArray& msg) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::MessageBuilder
operator <<	easylogging++.h	/^    inline MessageBuilder& operator<<(const QHash<K, V>& hash_) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::MessageBuilder
operator <<	easylogging++.h	/^    inline MessageBuilder& operator<<(const QLatin1String& msg) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::MessageBuilder
operator <<	easylogging++.h	/^    inline MessageBuilder& operator<<(const QMap<K, V>& map_) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::MessageBuilder
operator <<	easylogging++.h	/^    inline MessageBuilder& operator<<(const QMultiHash<K, V>& multiHash_) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::MessageBuilder
operator <<	easylogging++.h	/^    inline MessageBuilder& operator<<(const QMultiMap<K, V>& map_) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::MessageBuilder
operator <<	easylogging++.h	/^    inline MessageBuilder& operator<<(const QPair<First, Second>& pair_) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::MessageBuilder
operator <<	easylogging++.h	/^    inline MessageBuilder& operator<<(const QString& msg) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::MessageBuilder
operator <<	easylogging++.h	/^    inline MessageBuilder& operator<<(const QStringRef& msg) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::MessageBuilder
operator <<	easylogging++.h	/^    inline MessageBuilder& operator<<(const std::array<T, Size>& array) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::MessageBuilder
operator <<	easylogging++.h	/^    inline MessageBuilder& operator<<(const std::bitset<Size>& bitset_) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::MessageBuilder
operator <<	easylogging++.h	/^    inline MessageBuilder& operator<<(const std::pair<First, Second>& pair_) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::MessageBuilder
operator <<	easylogging++.h	/^    inline MessageBuilder& operator<<(const std::priority_queue<T, Container, Comparator>& priorityQueue_) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::MessageBuilder
operator <<	easylogging++.h	/^    inline MessageBuilder& operator<<(const std::queue<T, Container>& queue_) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::MessageBuilder
operator <<	easylogging++.h	/^    inline MessageBuilder& operator<<(const std::stack<T, Container>& stack_) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::MessageBuilder
operator <<	easylogging++.h	/^    inline MessageBuilder& operator<<(const std::string& msg) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::MessageBuilder
operator <<	easylogging++.h	/^    inline MessageBuilder& operator<<(const std::wstring& msg) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::MessageBuilder
operator <<	easylogging++.h	/^    inline MessageBuilder& operator<<(const wchar_t* msg) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::MessageBuilder
operator <<	easylogging++.h	/^    inline MessageBuilder& operator<<(qint64 msg) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::MessageBuilder
operator <<	easylogging++.h	/^    inline MessageBuilder& operator<<(quint64 msg) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::MessageBuilder
operator <<	easylogging++.h	/^    inline NullWriter& operator<<(const T&) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::NullWriter
operator <<	easylogging++.h	/^    inline NullWriter& operator<<(std::ostream& (*)(std::ostream&)) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::NullWriter
operator <<	easylogging++.h	/^    inline Writer& operator<<(const T& log) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::Writer
operator <<	easylogging++.h	/^    inline friend base::type::ostream_t& operator<<(base::type::ostream_t& os, const CommandLineArgs& c) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::CommandLineArgs
operator =	easylogging++.h	/^    AbstractRegistry& operator=(AbstractRegistry&& sr) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::AbstractRegistry
operator =	easylogging++.h	/^    Configuration& operator=(const Configuration& c) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configuration
operator =	easylogging++.h	/^    HitCounter& operator=(const HitCounter& hitCounter) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::HitCounter
operator =	easylogging++.h	/^    LogFormat& operator=(const LogFormat& logFormat) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogFormat
operator =	easylogging++.h	/^    Logger& operator=(const Logger& logger) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
operator =	easylogging++.h	/^    Registry& operator=(const Registry& sr) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::Registry
operator =	easylogging++.h	/^    RegistryWithPred& operator=(const RegistryWithPred& sr) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::RegistryWithPred
operator =	protob/config.pb.h	/^  inline Configuration& operator=(const Configuration& from) {$/;"	f	class:Configuration
operator =	protob/config.pb.h	/^  inline DeviceDescriptor& operator=(const DeviceDescriptor& from) {$/;"	f	class:DeviceDescriptor
operator =	protob/messages.pb.h	/^  inline Address& operator=(const Address& from) {$/;"	f	class:Address
operator =	protob/messages.pb.h	/^  inline ApplySettings& operator=(const ApplySettings& from) {$/;"	f	class:ApplySettings
operator =	protob/messages.pb.h	/^  inline ButtonAck& operator=(const ButtonAck& from) {$/;"	f	class:ButtonAck
operator =	protob/messages.pb.h	/^  inline ButtonRequest& operator=(const ButtonRequest& from) {$/;"	f	class:ButtonRequest
operator =	protob/messages.pb.h	/^  inline Cancel& operator=(const Cancel& from) {$/;"	f	class:Cancel
operator =	protob/messages.pb.h	/^  inline ChangePin& operator=(const ChangePin& from) {$/;"	f	class:ChangePin
operator =	protob/messages.pb.h	/^  inline CipherKeyValue& operator=(const CipherKeyValue& from) {$/;"	f	class:CipherKeyValue
operator =	protob/messages.pb.h	/^  inline ClearSession& operator=(const ClearSession& from) {$/;"	f	class:ClearSession
operator =	protob/messages.pb.h	/^  inline DebugLinkDecision& operator=(const DebugLinkDecision& from) {$/;"	f	class:DebugLinkDecision
operator =	protob/messages.pb.h	/^  inline DebugLinkGetState& operator=(const DebugLinkGetState& from) {$/;"	f	class:DebugLinkGetState
operator =	protob/messages.pb.h	/^  inline DebugLinkLog& operator=(const DebugLinkLog& from) {$/;"	f	class:DebugLinkLog
operator =	protob/messages.pb.h	/^  inline DebugLinkState& operator=(const DebugLinkState& from) {$/;"	f	class:DebugLinkState
operator =	protob/messages.pb.h	/^  inline DebugLinkStop& operator=(const DebugLinkStop& from) {$/;"	f	class:DebugLinkStop
operator =	protob/messages.pb.h	/^  inline DecryptMessage& operator=(const DecryptMessage& from) {$/;"	f	class:DecryptMessage
operator =	protob/messages.pb.h	/^  inline EncryptMessage& operator=(const EncryptMessage& from) {$/;"	f	class:EncryptMessage
operator =	protob/messages.pb.h	/^  inline Entropy& operator=(const Entropy& from) {$/;"	f	class:Entropy
operator =	protob/messages.pb.h	/^  inline EntropyAck& operator=(const EntropyAck& from) {$/;"	f	class:EntropyAck
operator =	protob/messages.pb.h	/^  inline EntropyRequest& operator=(const EntropyRequest& from) {$/;"	f	class:EntropyRequest
operator =	protob/messages.pb.h	/^  inline EstimateTxSize& operator=(const EstimateTxSize& from) {$/;"	f	class:EstimateTxSize
operator =	protob/messages.pb.h	/^  inline Failure& operator=(const Failure& from) {$/;"	f	class:Failure
operator =	protob/messages.pb.h	/^  inline Features& operator=(const Features& from) {$/;"	f	class:Features
operator =	protob/messages.pb.h	/^  inline FirmwareErase& operator=(const FirmwareErase& from) {$/;"	f	class:FirmwareErase
operator =	protob/messages.pb.h	/^  inline FirmwareUpload& operator=(const FirmwareUpload& from) {$/;"	f	class:FirmwareUpload
operator =	protob/messages.pb.h	/^  inline GetAddress& operator=(const GetAddress& from) {$/;"	f	class:GetAddress
operator =	protob/messages.pb.h	/^  inline GetEntropy& operator=(const GetEntropy& from) {$/;"	f	class:GetEntropy
operator =	protob/messages.pb.h	/^  inline GetPublicKey& operator=(const GetPublicKey& from) {$/;"	f	class:GetPublicKey
operator =	protob/messages.pb.h	/^  inline Initialize& operator=(const Initialize& from) {$/;"	f	class:Initialize
operator =	protob/messages.pb.h	/^  inline LoadDevice& operator=(const LoadDevice& from) {$/;"	f	class:LoadDevice
operator =	protob/messages.pb.h	/^  inline MessageSignature& operator=(const MessageSignature& from) {$/;"	f	class:MessageSignature
operator =	protob/messages.pb.h	/^  inline PassphraseAck& operator=(const PassphraseAck& from) {$/;"	f	class:PassphraseAck
operator =	protob/messages.pb.h	/^  inline PassphraseRequest& operator=(const PassphraseRequest& from) {$/;"	f	class:PassphraseRequest
operator =	protob/messages.pb.h	/^  inline PinMatrixAck& operator=(const PinMatrixAck& from) {$/;"	f	class:PinMatrixAck
operator =	protob/messages.pb.h	/^  inline PinMatrixRequest& operator=(const PinMatrixRequest& from) {$/;"	f	class:PinMatrixRequest
operator =	protob/messages.pb.h	/^  inline Ping& operator=(const Ping& from) {$/;"	f	class:Ping
operator =	protob/messages.pb.h	/^  inline PublicKey& operator=(const PublicKey& from) {$/;"	f	class:PublicKey
operator =	protob/messages.pb.h	/^  inline RecoveryDevice& operator=(const RecoveryDevice& from) {$/;"	f	class:RecoveryDevice
operator =	protob/messages.pb.h	/^  inline ResetDevice& operator=(const ResetDevice& from) {$/;"	f	class:ResetDevice
operator =	protob/messages.pb.h	/^  inline SignMessage& operator=(const SignMessage& from) {$/;"	f	class:SignMessage
operator =	protob/messages.pb.h	/^  inline SignTx& operator=(const SignTx& from) {$/;"	f	class:SignTx
operator =	protob/messages.pb.h	/^  inline SimpleSignTx& operator=(const SimpleSignTx& from) {$/;"	f	class:SimpleSignTx
operator =	protob/messages.pb.h	/^  inline Success& operator=(const Success& from) {$/;"	f	class:Success
operator =	protob/messages.pb.h	/^  inline TestScreen& operator=(const TestScreen& from) {$/;"	f	class:TestScreen
operator =	protob/messages.pb.h	/^  inline TxAck& operator=(const TxAck& from) {$/;"	f	class:TxAck
operator =	protob/messages.pb.h	/^  inline TxRequest& operator=(const TxRequest& from) {$/;"	f	class:TxRequest
operator =	protob/messages.pb.h	/^  inline TxSize& operator=(const TxSize& from) {$/;"	f	class:TxSize
operator =	protob/messages.pb.h	/^  inline VerifyMessage& operator=(const VerifyMessage& from) {$/;"	f	class:VerifyMessage
operator =	protob/messages.pb.h	/^  inline WipeDevice& operator=(const WipeDevice& from) {$/;"	f	class:WipeDevice
operator =	protob/messages.pb.h	/^  inline WordAck& operator=(const WordAck& from) {$/;"	f	class:WordAck
operator =	protob/messages.pb.h	/^  inline WordRequest& operator=(const WordRequest& from) {$/;"	f	class:WordRequest
operator =	protob/storage.pb.h	/^  inline Storage& operator=(const Storage& from) {$/;"	f	class:Storage
operator =	protob/types.pb.h	/^  inline CoinType& operator=(const CoinType& from) {$/;"	f	class:CoinType
operator =	protob/types.pb.h	/^  inline HDNodeType& operator=(const HDNodeType& from) {$/;"	f	class:HDNodeType
operator =	protob/types.pb.h	/^  inline MultisigRedeemScriptType& operator=(const MultisigRedeemScriptType& from) {$/;"	f	class:MultisigRedeemScriptType
operator =	protob/types.pb.h	/^  inline TransactionType& operator=(const TransactionType& from) {$/;"	f	class:TransactionType
operator =	protob/types.pb.h	/^  inline TxInputType& operator=(const TxInputType& from) {$/;"	f	class:TxInputType
operator =	protob/types.pb.h	/^  inline TxOutputBinType& operator=(const TxOutputBinType& from) {$/;"	f	class:TxOutputBinType
operator =	protob/types.pb.h	/^  inline TxOutputType& operator=(const TxOutputType& from) {$/;"	f	class:TxOutputType
operator =	protob/types.pb.h	/^  inline TxRequestDetailsType& operator=(const TxRequestDetailsType& from) {$/;"	f	class:TxRequestDetailsType
operator =	protob/types.pb.h	/^  inline TxRequestSerializedType& operator=(const TxRequestSerializedType& from) {$/;"	f	class:TxRequestSerializedType
operator ==	easylogging++.h	/^    bool operator==(const AbstractRegistry<T_Ptr, Container>& other) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::AbstractRegistry
operator ==	easylogging++.h	/^    bool operator==(const MillisecondsWidth& msWidth) { return m_width == msWidth.m_width && m_offset == msWidth.m_offset; }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::MillisecondsWidth
operator ==	easylogging++.h	/^    inline bool operator==(const LogFormat& other) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogFormat
operator ==	easylogging++.h	/^    inline bool operator==(const char* formatSpecifier) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::CustomFormatSpecifier
operator ==	wire.hpp	/^		bool operator==(device_info const &rhs) const {$/;"	f	struct:wire::device_info
ostream_t	easylogging++.h	/^typedef std::wostream ostream_t;$/;"	t	namespace:el::base::type
outputs	protob/messages.pb.h	/^SimpleSignTx::outputs() const {$/;"	f	class:SimpleSignTx
outputs	protob/messages.pb.h	/^inline const ::TxOutputType& SimpleSignTx::outputs(int index) const {$/;"	f	class:SimpleSignTx
outputs	protob/types.pb.h	/^TransactionType::outputs() const {$/;"	f	class:TransactionType
outputs	protob/types.pb.h	/^inline const ::TxOutputType& TransactionType::outputs(int index) const {$/;"	f	class:TransactionType
outputs_	protob/messages.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::TxOutputType > outputs_;$/;"	m	class:SimpleSignTx
outputs_	protob/types.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::TxOutputType > outputs_;$/;"	m	class:TransactionType
outputs_cnt	protob/types.pb.h	/^inline ::google::protobuf::uint32 TransactionType::outputs_cnt() const {$/;"	f	class:TransactionType
outputs_cnt_	protob/types.pb.h	/^  ::google::protobuf::uint32 outputs_cnt_;$/;"	m	class:TransactionType
outputs_count	protob/messages.pb.h	/^inline ::google::protobuf::uint32 EstimateTxSize::outputs_count() const {$/;"	f	class:EstimateTxSize
outputs_count	protob/messages.pb.h	/^inline ::google::protobuf::uint32 SignTx::outputs_count() const {$/;"	f	class:SignTx
outputs_count_	protob/messages.pb.h	/^  ::google::protobuf::uint32 outputs_count_;$/;"	m	class:EstimateTxSize
outputs_count_	protob/messages.pb.h	/^  ::google::protobuf::uint32 outputs_count_;$/;"	m	class:SignTx
outputs_size	protob/messages.pb.h	/^inline int SimpleSignTx::outputs_size() const {$/;"	f	class:SimpleSignTx
outputs_size	protob/types.pb.h	/^inline int TransactionType::outputs_size() const {$/;"	f	class:TransactionType
parentApplicationName	easylogging++.h	/^    inline const std::string& parentApplicationName(void) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
parseFromFile	easylogging++.h	/^        static bool parseFromFile(const std::string& configurationFile, Configurations* sender, Configurations* base = nullptr) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations::Parser
parseFromFile	easylogging++.h	/^    inline bool parseFromFile(const std::string& configurationFile, Configurations* base = nullptr) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations
parseFromFormat	easylogging++.h	/^    void parseFromFormat(const base::type::string_t& userFormat) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogFormat
parseFromText	easylogging++.h	/^        static bool parseFromText(const std::string& configurationsString, Configurations* sender, Configurations* base = nullptr) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations::Parser
parseFromText	easylogging++.h	/^    inline bool parseFromText(const std::string& configurationsString, Configurations* base = nullptr) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations
parseLine	easylogging++.h	/^        static bool parseLine(std::string* line, std::string* currConfigStr, std::string* currLevelStr, Level* currLevel, Configurations* conf) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations::Parser
passphrase	protob/messages.pb.h	/^inline const ::std::string& PassphraseAck::passphrase() const {$/;"	f	class:PassphraseAck
passphrase_	protob/messages.pb.h	/^  ::std::string* passphrase_;$/;"	m	class:PassphraseAck
passphrase_protection	protob/messages.pb.h	/^inline bool DebugLinkState::passphrase_protection() const {$/;"	f	class:DebugLinkState
passphrase_protection	protob/messages.pb.h	/^inline bool Features::passphrase_protection() const {$/;"	f	class:Features
passphrase_protection	protob/messages.pb.h	/^inline bool LoadDevice::passphrase_protection() const {$/;"	f	class:LoadDevice
passphrase_protection	protob/messages.pb.h	/^inline bool Ping::passphrase_protection() const {$/;"	f	class:Ping
passphrase_protection	protob/messages.pb.h	/^inline bool RecoveryDevice::passphrase_protection() const {$/;"	f	class:RecoveryDevice
passphrase_protection	protob/messages.pb.h	/^inline bool ResetDevice::passphrase_protection() const {$/;"	f	class:ResetDevice
passphrase_protection	protob/storage.pb.h	/^inline bool Storage::passphrase_protection() const {$/;"	f	class:Storage
passphrase_protection_	protob/messages.pb.h	/^  bool passphrase_protection_;$/;"	m	class:DebugLinkState
passphrase_protection_	protob/messages.pb.h	/^  bool passphrase_protection_;$/;"	m	class:Features
passphrase_protection_	protob/messages.pb.h	/^  bool passphrase_protection_;$/;"	m	class:LoadDevice
passphrase_protection_	protob/messages.pb.h	/^  bool passphrase_protection_;$/;"	m	class:Ping
passphrase_protection_	protob/messages.pb.h	/^  bool passphrase_protection_;$/;"	m	class:RecoveryDevice
passphrase_protection_	protob/messages.pb.h	/^  bool passphrase_protection_;$/;"	m	class:ResetDevice
passphrase_protection_	protob/storage.pb.h	/^  bool passphrase_protection_;$/;"	m	class:Storage
patch_version	protob/messages.pb.h	/^inline ::google::protobuf::uint32 Features::patch_version() const {$/;"	f	class:Features
patch_version_	protob/messages.pb.h	/^  ::google::protobuf::uint32 patch_version_;$/;"	m	class:Features
path	protob/config.pb.h	/^inline const ::std::string& DeviceDescriptor::path() const {$/;"	f	class:DeviceDescriptor
path	wire.hpp	/^		std::string path;$/;"	m	struct:wire::device_info
pathExists	easylogging++.h	/^    static inline bool pathExists(const char* path, bool considerFile = false) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File
path_	protob/config.pb.h	/^  ::std::string* path_;$/;"	m	class:DeviceDescriptor
payload	protob/messages.pb.h	/^inline const ::std::string& FirmwareUpload::payload() const {$/;"	f	class:FirmwareUpload
payload	protob/messages.pb.h	/^inline const ::std::string& Success::payload() const {$/;"	f	class:Success
payload_	protob/messages.pb.h	/^  ::std::string* payload_;$/;"	m	class:FirmwareUpload
payload_	protob/messages.pb.h	/^  ::std::string* payload_;$/;"	m	class:Success
performanceTracker	easylogging++.h	/^    inline const base::PerformanceTracker* performanceTracker(void) const { return m_performanceTracker; }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::DataType
performanceTracking	easylogging++.h	/^    inline bool performanceTracking(Level level = Level::Global) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
performanceTrackingCallback	easylogging++.h	/^    inline T* performanceTrackingCallback(const std::string& id) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
performanceTrackingCallback	easylogging++.h	/^    static inline T* performanceTrackingCallback(const std::string& id) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Helpers
pin	protob/messages.pb.h	/^inline const ::std::string& DebugLinkState::pin() const {$/;"	f	class:DebugLinkState
pin	protob/messages.pb.h	/^inline const ::std::string& LoadDevice::pin() const {$/;"	f	class:LoadDevice
pin	protob/messages.pb.h	/^inline const ::std::string& PinMatrixAck::pin() const {$/;"	f	class:PinMatrixAck
pin	protob/storage.pb.h	/^inline const ::std::string& Storage::pin() const {$/;"	f	class:Storage
pin_	protob/messages.pb.h	/^  ::std::string* pin_;$/;"	m	class:DebugLinkState
pin_	protob/messages.pb.h	/^  ::std::string* pin_;$/;"	m	class:LoadDevice
pin_	protob/messages.pb.h	/^  ::std::string* pin_;$/;"	m	class:PinMatrixAck
pin_	protob/storage.pb.h	/^  ::std::string* pin_;$/;"	m	class:Storage
pin_failed_attempts	protob/storage.pb.h	/^inline ::google::protobuf::uint32 Storage::pin_failed_attempts() const {$/;"	f	class:Storage
pin_failed_attempts_	protob/storage.pb.h	/^  ::google::protobuf::uint32 pin_failed_attempts_;$/;"	m	class:Storage
pin_protection	protob/messages.pb.h	/^inline bool Features::pin_protection() const {$/;"	f	class:Features
pin_protection	protob/messages.pb.h	/^inline bool Ping::pin_protection() const {$/;"	f	class:Ping
pin_protection	protob/messages.pb.h	/^inline bool RecoveryDevice::pin_protection() const {$/;"	f	class:RecoveryDevice
pin_protection	protob/messages.pb.h	/^inline bool ResetDevice::pin_protection() const {$/;"	f	class:ResetDevice
pin_protection_	protob/messages.pb.h	/^  bool pin_protection_;$/;"	m	class:Features
pin_protection_	protob/messages.pb.h	/^  bool pin_protection_;$/;"	m	class:Ping
pin_protection_	protob/messages.pb.h	/^  bool pin_protection_;$/;"	m	class:RecoveryDevice
pin_protection_	protob/messages.pb.h	/^  bool pin_protection_;$/;"	m	class:ResetDevice
populateAllLoggerIds	easylogging++.h	/^    static inline std::vector<std::string>* populateAllLoggerIds(std::vector<std::string>* targetList) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Loggers
preRollOutCallback	easylogging++.h	/^    inline PreRollOutCallback& preRollOutCallback(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
prev_hash	protob/types.pb.h	/^inline const ::std::string& TxInputType::prev_hash() const {$/;"	f	class:TxInputType
prev_hash_	protob/types.pb.h	/^  ::std::string* prev_hash_;$/;"	m	class:TxInputType
prev_index	protob/types.pb.h	/^inline ::google::protobuf::uint32 TxInputType::prev_index() const {$/;"	f	class:TxInputType
prev_index_	protob/types.pb.h	/^  ::google::protobuf::uint32 prev_index_;$/;"	m	class:TxInputType
private_key	protob/types.pb.h	/^inline const ::std::string& HDNodeType::private_key() const {$/;"	f	class:HDNodeType
private_key_	protob/types.pb.h	/^  ::std::string* private_key_;$/;"	m	class:HDNodeType
product_id	protob/config.pb.h	/^inline ::google::protobuf::uint32 DeviceDescriptor::product_id() const {$/;"	f	class:DeviceDescriptor
product_id	wire.hpp	/^		std::uint16_t product_id;$/;"	m	struct:wire::device_info
product_id_	protob/config.pb.h	/^  ::google::protobuf::uint32 product_id_;$/;"	m	class:DeviceDescriptor
protobuf	protob/config.pb.h	/^namespace protobuf {$/;"	n	namespace:google
protobuf	protob/messages.pb.h	/^namespace protobuf {$/;"	n	namespace:google
protobuf	protob/storage.pb.h	/^namespace protobuf {$/;"	n	namespace:google
protobuf	protob/types.pb.h	/^namespace protobuf {$/;"	n	namespace:google
protobuf_AddDesc_config_2eproto	protob/config.pb.cc	/^void protobuf_AddDesc_config_2eproto() {$/;"	f
protobuf_AddDesc_messages_2eproto	protob/messages.pb.cc	/^void protobuf_AddDesc_messages_2eproto() {$/;"	f
protobuf_AddDesc_storage_2eproto	protob/storage.pb.cc	/^void protobuf_AddDesc_storage_2eproto() {$/;"	f
protobuf_AddDesc_types_2eproto	protob/types.pb.cc	/^void protobuf_AddDesc_types_2eproto() {$/;"	f
protobuf_AssignDesc_config_2eproto	protob/config.pb.cc	/^void protobuf_AssignDesc_config_2eproto() {$/;"	f
protobuf_AssignDesc_messages_2eproto	protob/messages.pb.cc	/^void protobuf_AssignDesc_messages_2eproto() {$/;"	f
protobuf_AssignDesc_storage_2eproto	protob/storage.pb.cc	/^void protobuf_AssignDesc_storage_2eproto() {$/;"	f
protobuf_AssignDesc_types_2eproto	protob/types.pb.cc	/^void protobuf_AssignDesc_types_2eproto() {$/;"	f
protobuf_AssignDescriptorsOnce	protob/config.pb.cc	/^inline void protobuf_AssignDescriptorsOnce() {$/;"	f	namespace:__anon8
protobuf_AssignDescriptorsOnce	protob/messages.pb.cc	/^inline void protobuf_AssignDescriptorsOnce() {$/;"	f	namespace:__anon2
protobuf_AssignDescriptorsOnce	protob/storage.pb.cc	/^inline void protobuf_AssignDescriptorsOnce() {$/;"	f	namespace:__anon6
protobuf_AssignDescriptorsOnce	protob/types.pb.cc	/^inline void protobuf_AssignDescriptorsOnce() {$/;"	f	namespace:__anon4
protobuf_RegisterTypes	protob/config.pb.cc	/^void protobuf_RegisterTypes(const ::std::string&) {$/;"	f	namespace:__anon8
protobuf_RegisterTypes	protob/messages.pb.cc	/^void protobuf_RegisterTypes(const ::std::string&) {$/;"	f	namespace:__anon2
protobuf_RegisterTypes	protob/storage.pb.cc	/^void protobuf_RegisterTypes(const ::std::string&) {$/;"	f	namespace:__anon6
protobuf_RegisterTypes	protob/types.pb.cc	/^void protobuf_RegisterTypes(const ::std::string&) {$/;"	f	namespace:__anon4
protobuf_ShutdownFile_config_2eproto	protob/config.pb.cc	/^void protobuf_ShutdownFile_config_2eproto() {$/;"	f
protobuf_ShutdownFile_messages_2eproto	protob/messages.pb.cc	/^void protobuf_ShutdownFile_messages_2eproto() {$/;"	f
protobuf_ShutdownFile_storage_2eproto	protob/storage.pb.cc	/^void protobuf_ShutdownFile_storage_2eproto() {$/;"	f
protobuf_ShutdownFile_types_2eproto	protob/types.pb.cc	/^void protobuf_ShutdownFile_types_2eproto() {$/;"	f
pubkey	protob/messages.pb.h	/^inline const ::std::string& EncryptMessage::pubkey() const {$/;"	f	class:EncryptMessage
pubkey_	protob/messages.pb.h	/^  ::std::string* pubkey_;$/;"	m	class:EncryptMessage
pubkeys	protob/types.pb.h	/^MultisigRedeemScriptType::pubkeys() const {$/;"	f	class:MultisigRedeemScriptType
pubkeys	protob/types.pb.h	/^inline const ::std::string& MultisigRedeemScriptType::pubkeys(int index) const {$/;"	f	class:MultisigRedeemScriptType
pubkeys_	protob/types.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::std::string> pubkeys_;$/;"	m	class:MultisigRedeemScriptType
pubkeys_size	protob/types.pb.h	/^inline int MultisigRedeemScriptType::pubkeys_size() const {$/;"	f	class:MultisigRedeemScriptType
public_key	protob/types.pb.h	/^inline const ::std::string& HDNodeType::public_key() const {$/;"	f	class:HDNodeType
public_key_	protob/types.pb.h	/^  ::std::string* public_key_;$/;"	m	class:HDNodeType
read_buffer	wire.hpp	/^		buffer_type read_buffer;$/;"	m	struct:wire::device
read_buffered	wire.hpp	/^		void read_buffered(char_type *data, size_type len) {$/;"	f	struct:wire::device
read_error	wire.hpp	/^		struct read_error : public std::runtime_error {$/;"	s	struct:wire::device
read_from	wire.hpp	/^		void read_from(device &device) {$/;"	f	struct:wire::message
read_report_form_buffer	wire.hpp	/^		size_type read_report_form_buffer(char_type *data, size_type len) {$/;"	f	struct:wire::device
reconfigure	easylogging++.h	/^    inline void reconfigure(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
reconfigureAllLoggers	easylogging++.h	/^    static inline void reconfigureAllLoggers(ConfigurationType configurationType, const std::string& value) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Loggers
reconfigureAllLoggers	easylogging++.h	/^    static inline void reconfigureAllLoggers(Level level, ConfigurationType configurationType, $/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Loggers
reconfigureAllLoggers	easylogging++.h	/^    static inline void reconfigureAllLoggers(const Configurations& configurations) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Loggers
reconfigureLogger	easylogging++.h	/^    static inline Logger* reconfigureLogger(Logger* logger, const Configurations& configurations) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Loggers
reconfigureLogger	easylogging++.h	/^    static inline Logger* reconfigureLogger(const std::string& identity, ConfigurationType configurationType,$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Loggers
reconfigureLogger	easylogging++.h	/^    static inline Logger* reconfigureLogger(const std::string& identity, const Configurations& configurations) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Loggers
recovery_fake_word	protob/messages.pb.h	/^inline const ::std::string& DebugLinkState::recovery_fake_word() const {$/;"	f	class:DebugLinkState
recovery_fake_word_	protob/messages.pb.h	/^  ::std::string* recovery_fake_word_;$/;"	m	class:DebugLinkState
recovery_word_pos	protob/messages.pb.h	/^inline ::google::protobuf::uint32 DebugLinkState::recovery_word_pos() const {$/;"	f	class:DebugLinkState
recovery_word_pos_	protob/messages.pb.h	/^  ::google::protobuf::uint32 recovery_word_pos_;$/;"	m	class:DebugLinkState
registeredLoggers	easylogging++.h	/^    inline base::RegisteredLoggers* registeredLoggers(void) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
reinitDeepCopy	easylogging++.h	/^    void reinitDeepCopy(const AbstractRegistry<T_Ptr, Container>& sr) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::AbstractRegistry
releaseDate	easylogging++.h	/^    static inline const std::string releaseDate(void) { return std::string("27-07-2014 1432hrs"); }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::VersionInfo
release_address	protob/messages.pb.h	/^inline ::std::string* Address::release_address() {$/;"	f	class:Address
release_address	protob/messages.pb.h	/^inline ::std::string* MessageSignature::release_address() {$/;"	f	class:MessageSignature
release_address	protob/messages.pb.h	/^inline ::std::string* VerifyMessage::release_address() {$/;"	f	class:VerifyMessage
release_address	protob/types.pb.h	/^inline ::std::string* TxOutputType::release_address() {$/;"	f	class:TxOutputType
release_bootloader_hash	protob/messages.pb.h	/^inline ::std::string* Features::release_bootloader_hash() {$/;"	f	class:Features
release_bucket	protob/messages.pb.h	/^inline ::std::string* DebugLinkLog::release_bucket() {$/;"	f	class:DebugLinkLog
release_chain_code	protob/types.pb.h	/^inline ::std::string* HDNodeType::release_chain_code() {$/;"	f	class:HDNodeType
release_coin_name	protob/messages.pb.h	/^inline ::std::string* EstimateTxSize::release_coin_name() {$/;"	f	class:EstimateTxSize
release_coin_name	protob/messages.pb.h	/^inline ::std::string* GetAddress::release_coin_name() {$/;"	f	class:GetAddress
release_coin_name	protob/messages.pb.h	/^inline ::std::string* SignMessage::release_coin_name() {$/;"	f	class:SignMessage
release_coin_name	protob/messages.pb.h	/^inline ::std::string* SignTx::release_coin_name() {$/;"	f	class:SignTx
release_coin_name	protob/messages.pb.h	/^inline ::std::string* SimpleSignTx::release_coin_name() {$/;"	f	class:SimpleSignTx
release_coin_name	protob/types.pb.h	/^inline ::std::string* CoinType::release_coin_name() {$/;"	f	class:CoinType
release_coin_shortcut	protob/types.pb.h	/^inline ::std::string* CoinType::release_coin_shortcut() {$/;"	f	class:CoinType
release_cpu_sn	protob/messages.pb.h	/^inline ::std::string* Features::release_cpu_sn() {$/;"	f	class:Features
release_data	protob/messages.pb.h	/^inline ::std::string* ButtonRequest::release_data() {$/;"	f	class:ButtonRequest
release_details	protob/messages.pb.h	/^inline ::TxRequestDetailsType* TxRequest::release_details() {$/;"	f	class:TxRequest
release_device_id	protob/messages.pb.h	/^inline ::std::string* Features::release_device_id() {$/;"	f	class:Features
release_entropy	protob/messages.pb.h	/^inline ::std::string* Entropy::release_entropy() {$/;"	f	class:Entropy
release_entropy	protob/messages.pb.h	/^inline ::std::string* EntropyAck::release_entropy() {$/;"	f	class:EntropyAck
release_key	protob/messages.pb.h	/^inline ::std::string* CipherKeyValue::release_key() {$/;"	f	class:CipherKeyValue
release_label	protob/messages.pb.h	/^inline ::std::string* ApplySettings::release_label() {$/;"	f	class:ApplySettings
release_label	protob/messages.pb.h	/^inline ::std::string* Features::release_label() {$/;"	f	class:Features
release_label	protob/messages.pb.h	/^inline ::std::string* LoadDevice::release_label() {$/;"	f	class:LoadDevice
release_label	protob/messages.pb.h	/^inline ::std::string* RecoveryDevice::release_label() {$/;"	f	class:RecoveryDevice
release_label	protob/messages.pb.h	/^inline ::std::string* ResetDevice::release_label() {$/;"	f	class:ResetDevice
release_label	protob/storage.pb.h	/^inline ::std::string* Storage::release_label() {$/;"	f	class:Storage
release_language	protob/messages.pb.h	/^inline ::std::string* ApplySettings::release_language() {$/;"	f	class:ApplySettings
release_language	protob/messages.pb.h	/^inline ::std::string* Features::release_language() {$/;"	f	class:Features
release_language	protob/messages.pb.h	/^inline ::std::string* LoadDevice::release_language() {$/;"	f	class:LoadDevice
release_language	protob/messages.pb.h	/^inline ::std::string* RecoveryDevice::release_language() {$/;"	f	class:RecoveryDevice
release_language	protob/messages.pb.h	/^inline ::std::string* ResetDevice::release_language() {$/;"	f	class:ResetDevice
release_language	protob/storage.pb.h	/^inline ::std::string* Storage::release_language() {$/;"	f	class:Storage
release_layout	protob/messages.pb.h	/^inline ::std::string* DebugLinkState::release_layout() {$/;"	f	class:DebugLinkState
release_matrix	protob/messages.pb.h	/^inline ::std::string* DebugLinkState::release_matrix() {$/;"	f	class:DebugLinkState
release_message	protob/messages.pb.h	/^inline ::std::string* DecryptMessage::release_message() {$/;"	f	class:DecryptMessage
release_message	protob/messages.pb.h	/^inline ::std::string* EncryptMessage::release_message() {$/;"	f	class:EncryptMessage
release_message	protob/messages.pb.h	/^inline ::std::string* Failure::release_message() {$/;"	f	class:Failure
release_message	protob/messages.pb.h	/^inline ::std::string* Ping::release_message() {$/;"	f	class:Ping
release_message	protob/messages.pb.h	/^inline ::std::string* SignMessage::release_message() {$/;"	f	class:SignMessage
release_message	protob/messages.pb.h	/^inline ::std::string* Success::release_message() {$/;"	f	class:Success
release_message	protob/messages.pb.h	/^inline ::std::string* VerifyMessage::release_message() {$/;"	f	class:VerifyMessage
release_mnemonic	protob/messages.pb.h	/^inline ::std::string* DebugLinkState::release_mnemonic() {$/;"	f	class:DebugLinkState
release_mnemonic	protob/messages.pb.h	/^inline ::std::string* LoadDevice::release_mnemonic() {$/;"	f	class:LoadDevice
release_mnemonic	protob/storage.pb.h	/^inline ::std::string* Storage::release_mnemonic() {$/;"	f	class:Storage
release_multisig	protob/types.pb.h	/^inline ::MultisigRedeemScriptType* TxInputType::release_multisig() {$/;"	f	class:TxInputType
release_node	protob/messages.pb.h	/^inline ::HDNodeType* DebugLinkState::release_node() {$/;"	f	class:DebugLinkState
release_node	protob/messages.pb.h	/^inline ::HDNodeType* LoadDevice::release_node() {$/;"	f	class:LoadDevice
release_node	protob/messages.pb.h	/^inline ::HDNodeType* PublicKey::release_node() {$/;"	f	class:PublicKey
release_node	protob/storage.pb.h	/^inline ::HDNodeType* Storage::release_node() {$/;"	f	class:Storage
release_passphrase	protob/messages.pb.h	/^inline ::std::string* PassphraseAck::release_passphrase() {$/;"	f	class:PassphraseAck
release_path	protob/config.pb.h	/^inline ::std::string* DeviceDescriptor::release_path() {$/;"	f	class:DeviceDescriptor
release_payload	protob/messages.pb.h	/^inline ::std::string* FirmwareUpload::release_payload() {$/;"	f	class:FirmwareUpload
release_payload	protob/messages.pb.h	/^inline ::std::string* Success::release_payload() {$/;"	f	class:Success
release_pin	protob/messages.pb.h	/^inline ::std::string* DebugLinkState::release_pin() {$/;"	f	class:DebugLinkState
release_pin	protob/messages.pb.h	/^inline ::std::string* LoadDevice::release_pin() {$/;"	f	class:LoadDevice
release_pin	protob/messages.pb.h	/^inline ::std::string* PinMatrixAck::release_pin() {$/;"	f	class:PinMatrixAck
release_pin	protob/storage.pb.h	/^inline ::std::string* Storage::release_pin() {$/;"	f	class:Storage
release_prev_hash	protob/types.pb.h	/^inline ::std::string* TxInputType::release_prev_hash() {$/;"	f	class:TxInputType
release_private_key	protob/types.pb.h	/^inline ::std::string* HDNodeType::release_private_key() {$/;"	f	class:HDNodeType
release_pubkey	protob/messages.pb.h	/^inline ::std::string* EncryptMessage::release_pubkey() {$/;"	f	class:EncryptMessage
release_public_key	protob/types.pb.h	/^inline ::std::string* HDNodeType::release_public_key() {$/;"	f	class:HDNodeType
release_recovery_fake_word	protob/messages.pb.h	/^inline ::std::string* DebugLinkState::release_recovery_fake_word() {$/;"	f	class:DebugLinkState
release_reset_entropy	protob/messages.pb.h	/^inline ::std::string* DebugLinkState::release_reset_entropy() {$/;"	f	class:DebugLinkState
release_reset_word	protob/messages.pb.h	/^inline ::std::string* DebugLinkState::release_reset_word() {$/;"	f	class:DebugLinkState
release_revision	protob/messages.pb.h	/^inline ::std::string* Features::release_revision() {$/;"	f	class:Features
release_script_pubkey	protob/types.pb.h	/^inline ::std::string* TxOutputBinType::release_script_pubkey() {$/;"	f	class:TxOutputBinType
release_script_sig	protob/types.pb.h	/^inline ::std::string* TxInputType::release_script_sig() {$/;"	f	class:TxInputType
release_serial_number	protob/config.pb.h	/^inline ::std::string* DeviceDescriptor::release_serial_number() {$/;"	f	class:DeviceDescriptor
release_serialized	protob/messages.pb.h	/^inline ::TxRequestSerializedType* TxRequest::release_serialized() {$/;"	f	class:TxRequest
release_serialized_tx	protob/types.pb.h	/^inline ::std::string* TxRequestSerializedType::release_serialized_tx() {$/;"	f	class:TxRequestSerializedType
release_signature	protob/messages.pb.h	/^inline ::std::string* MessageSignature::release_signature() {$/;"	f	class:MessageSignature
release_signature	protob/messages.pb.h	/^inline ::std::string* VerifyMessage::release_signature() {$/;"	f	class:VerifyMessage
release_signature	protob/types.pb.h	/^inline ::std::string* TxRequestSerializedType::release_signature() {$/;"	f	class:TxRequestSerializedType
release_text	protob/messages.pb.h	/^inline ::std::string* DebugLinkLog::release_text() {$/;"	f	class:DebugLinkLog
release_tx	protob/messages.pb.h	/^inline ::TransactionType* TxAck::release_tx() {$/;"	f	class:TxAck
release_tx_hash	protob/types.pb.h	/^inline ::std::string* TxRequestDetailsType::release_tx_hash() {$/;"	f	class:TxRequestDetailsType
release_value	protob/messages.pb.h	/^inline ::std::string* CipherKeyValue::release_value() {$/;"	f	class:CipherKeyValue
release_vendor	protob/messages.pb.h	/^inline ::std::string* Features::release_vendor() {$/;"	f	class:Features
release_wire_protocol	protob/config.pb.h	/^inline ::google::protobuf::FileDescriptorSet* Configuration::release_wire_protocol() {$/;"	f	class:Configuration
release_word	protob/messages.pb.h	/^inline ::std::string* WordAck::release_word() {$/;"	f	class:WordAck
release_xpub	protob/messages.pb.h	/^inline ::std::string* PublicKey::release_xpub() {$/;"	f	class:PublicKey
remove	easylogging++.h	/^    bool remove(const std::string& id) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::RegisteredLoggers
remove	protob/messages.pb.h	/^inline bool ChangePin::remove() const {$/;"	f	class:ChangePin
removeFlag	easylogging++.h	/^    inline void removeFlag(LoggingFlag flag) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
removeFlag	easylogging++.h	/^    static inline void removeFlag(LoggingFlag flag) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Loggers
removeFlag	easylogging++.h	/^static inline void removeFlag(Enum e, base::type::EnumType* flag) {$/;"	f	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils
remove_	protob/messages.pb.h	/^  bool remove_;$/;"	m	class:ChangePin
replaceAll	easylogging++.h	/^    static inline std::string& replaceAll(std::string& str, char replaceWhat, char replaceWith) {  \/\/ NOLINT$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Str
replaceAll	easylogging++.h	/^    static inline std::string& replaceAll(std::string& str, const std::string& replaceWhat, \/\/ NOLINT$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Str
replaceFirstWithEscape	easylogging++.h	/^    static void replaceFirstWithEscape(base::type::string_t& str, const base::type::string_t& replaceWhat, \/\/ NOLINT$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Str
report_type	wire.hpp	/^		typedef std::array<char_type, 64> report_type;$/;"	t	struct:wire::device
request_index	protob/types.pb.h	/^inline ::google::protobuf::uint32 TxRequestDetailsType::request_index() const {$/;"	f	class:TxRequestDetailsType
request_index_	protob/types.pb.h	/^  ::google::protobuf::uint32 request_index_;$/;"	m	class:TxRequestDetailsType
request_type	protob/messages.pb.h	/^inline ::RequestType TxRequest::request_type() const {$/;"	f	class:TxRequest
request_type_	protob/messages.pb.h	/^  int request_type_;$/;"	m	class:TxRequest
resetLocation	easylogging++.h	/^    inline void resetLocation(const char* filename, unsigned long int lineNumber) {  \/\/ NOLINT$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::HitCounter
reset_entropy	protob/messages.pb.h	/^inline const ::std::string& DebugLinkState::reset_entropy() const {$/;"	f	class:DebugLinkState
reset_entropy_	protob/messages.pb.h	/^  ::std::string* reset_entropy_;$/;"	m	class:DebugLinkState
reset_word	protob/messages.pb.h	/^inline const ::std::string& DebugLinkState::reset_word() const {$/;"	f	class:DebugLinkState
reset_word_	protob/messages.pb.h	/^  ::std::string* reset_word_;$/;"	m	class:DebugLinkState
resolveFilename	easylogging++.h	/^    std::string resolveFilename(const std::string& filename) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
resolveLoggerFormatSpec	easylogging++.h	/^    void resolveLoggerFormatSpec(void) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
resolver	easylogging++.h	/^    inline const FormatSpecifierValueResolver& resolver(void) const { return m_resolver; }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::CustomFormatSpecifier
revision	protob/messages.pb.h	/^inline const ::std::string& Features::revision() const {$/;"	f	class:Features
revision_	protob/messages.pb.h	/^  ::std::string* revision_;$/;"	m	class:Features
rtrim	easylogging++.h	/^    static inline std::string& rtrim(std::string& str) {  \/\/ NOLINT$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Str
safeDelete	easylogging++.h	/^static inline safeDelete(T*& pointer) {  \/\/ NOLINT$/;"	f	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils
script_pubkey	protob/types.pb.h	/^inline const ::std::string& TxOutputBinType::script_pubkey() const {$/;"	f	class:TxOutputBinType
script_pubkey_	protob/types.pb.h	/^  ::std::string* script_pubkey_;$/;"	m	class:TxOutputBinType
script_sig	protob/types.pb.h	/^inline const ::std::string& TxInputType::script_sig() const {$/;"	f	class:TxInputType
script_sig_	protob/types.pb.h	/^  ::std::string* script_sig_;$/;"	m	class:TxInputType
script_type	protob/types.pb.h	/^inline ::InputScriptType TxInputType::script_type() const {$/;"	f	class:TxInputType
script_type	protob/types.pb.h	/^inline ::OutputScriptType TxOutputType::script_type() const {$/;"	f	class:TxOutputType
script_type_	protob/types.pb.h	/^  int script_type_;$/;"	m	class:TxInputType
script_type_	protob/types.pb.h	/^  int script_type_;$/;"	m	class:TxOutputType
sequence	protob/types.pb.h	/^inline ::google::protobuf::uint32 TxInputType::sequence() const {$/;"	f	class:TxInputType
sequence_	protob/types.pb.h	/^  ::google::protobuf::uint32 sequence_;$/;"	m	class:TxInputType
serial_number	protob/config.pb.h	/^inline const ::std::string& DeviceDescriptor::serial_number() const {$/;"	f	class:DeviceDescriptor
serial_number	wire.hpp	/^		std::wstring serial_number;$/;"	m	struct:wire::device_info
serial_number_	protob/config.pb.h	/^  ::std::string* serial_number_;$/;"	m	class:DeviceDescriptor
serialized	protob/messages.pb.h	/^inline const ::TxRequestSerializedType& TxRequest::serialized() const {$/;"	f	class:TxRequest
serialized_	protob/messages.pb.h	/^  ::TxRequestSerializedType* serialized_;$/;"	m	class:TxRequest
serialized_tx	protob/types.pb.h	/^inline const ::std::string& TxRequestSerializedType::serialized_tx() const {$/;"	f	class:TxRequestSerializedType
serialized_tx_	protob/types.pb.h	/^  ::std::string* serialized_tx_;$/;"	m	class:TxRequestSerializedType
set	easylogging++.h	/^    inline void set(Configuration* conf) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations
set	easylogging++.h	/^    inline void set(Level level, ConfigurationType configurationType, const std::string& value) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations
setApplicationArguments	easylogging++.h	/^    void setApplicationArguments(int argc, char** argv) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
setArgs	easylogging++.h	/^    inline void setArgs(int argc, char** argv) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::CommandLineArgs
setArgs	easylogging++.h	/^    inline void setArgs(int argc, const char** argv) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::CommandLineArgs
setArgs	easylogging++.h	/^    static inline void setArgs(int argc, char** argv) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Helpers
setArgs	easylogging++.h	/^    static inline void setArgs(int argc, const char** argv) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Helpers
setCrashHandler	easylogging++.h	/^    static inline void setCrashHandler(const el::base::debug::CrashHandler::Handler& crashHandler) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Helpers
setDefaultConfigurations	easylogging++.h	/^    inline void setDefaultConfigurations(const Configurations& configurations) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::RegisteredLoggers
setDefaultConfigurations	easylogging++.h	/^    static inline void setDefaultConfigurations(const Configurations& configurations, bool reconfigureExistingLoggers = false) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Loggers
setDispatchAction	easylogging++.h	/^    inline void setDispatchAction(base::DispatchAction dispatchAction) { m_dispatchAction = dispatchAction; }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogDispatchData
setEnabled	easylogging++.h	/^    inline void setEnabled(bool enabled) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Callback
setFlags	easylogging++.h	/^    inline void setFlags(unsigned int flags) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
setFromArgs	easylogging++.h	/^    void setFromArgs(const base::utils::CommandLineArgs* commandLineArgs) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::VRegistry
setFromBase	easylogging++.h	/^    inline void setFromBase(Configurations* base) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations
setGlobally	easylogging++.h	/^    inline void setGlobally(ConfigurationType configurationType, const std::string& value) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations
setGlobally	easylogging++.h	/^    void setGlobally(ConfigurationType configurationType, const std::string& value, bool includeGlobalLevel) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations
setHandler	easylogging++.h	/^    void setHandler(const Handler& cHandler) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::debug::StackTrace::CrashHandler
setLevel	easylogging++.h	/^    inline void setLevel(base::type::VerboseLevel level) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::VRegistry
setLogBuilder	easylogging++.h	/^    inline void setLogBuilder(const LogBuilderPtr& logBuilder) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
setLogMessage	easylogging++.h	/^    inline void setLogMessage(LogMessage* logMessage) { m_logMessage = logMessage; }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogDispatchData
setLoggingLevel	easylogging++.h	/^    inline void setLoggingLevel(Level level) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
setLoggingLevel	easylogging++.h	/^    static inline void setLoggingLevel(Level level) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Loggers
setModules	easylogging++.h	/^    void setModules(const char* modules) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::VRegistry
setParentApplicationName	easylogging++.h	/^    inline void setParentApplicationName(const std::string& parentApplicationName) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
setPreRollOutCallback	easylogging++.h	/^    inline void setPreRollOutCallback(const PreRollOutCallback& callback) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
setRemainingToDefault	easylogging++.h	/^    void setRemainingToDefault(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations
setStorage	easylogging++.h	/^    static inline void setStorage(base::type::StoragePointer storage) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Helpers
setToDefault	easylogging++.h	/^    void setToDefault(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations
setValue	easylogging++.h	/^    inline void setValue(const std::string& value) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configuration
setValue	easylogging++.h	/^    void setValue(Level level, const Conf_T& value, std::map<Level, Conf_T>* confMap, bool includeGlobalLevel = true) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
set_address	protob/messages.pb.h	/^inline void Address::set_address(const ::std::string& value) {$/;"	f	class:Address
set_address	protob/messages.pb.h	/^inline void Address::set_address(const char* value) {$/;"	f	class:Address
set_address	protob/messages.pb.h	/^inline void Address::set_address(const char* value, size_t size) {$/;"	f	class:Address
set_address	protob/messages.pb.h	/^inline void MessageSignature::set_address(const ::std::string& value) {$/;"	f	class:MessageSignature
set_address	protob/messages.pb.h	/^inline void MessageSignature::set_address(const char* value) {$/;"	f	class:MessageSignature
set_address	protob/messages.pb.h	/^inline void MessageSignature::set_address(const char* value, size_t size) {$/;"	f	class:MessageSignature
set_address	protob/messages.pb.h	/^inline void VerifyMessage::set_address(const ::std::string& value) {$/;"	f	class:VerifyMessage
set_address	protob/messages.pb.h	/^inline void VerifyMessage::set_address(const char* value) {$/;"	f	class:VerifyMessage
set_address	protob/messages.pb.h	/^inline void VerifyMessage::set_address(const char* value, size_t size) {$/;"	f	class:VerifyMessage
set_address	protob/types.pb.h	/^inline void TxOutputType::set_address(const ::std::string& value) {$/;"	f	class:TxOutputType
set_address	protob/types.pb.h	/^inline void TxOutputType::set_address(const char* value) {$/;"	f	class:TxOutputType
set_address	protob/types.pb.h	/^inline void TxOutputType::set_address(const char* value, size_t size) {$/;"	f	class:TxOutputType
set_address_n	protob/messages.pb.h	/^inline void CipherKeyValue::set_address_n(int index, ::google::protobuf::uint32 value) {$/;"	f	class:CipherKeyValue
set_address_n	protob/messages.pb.h	/^inline void DecryptMessage::set_address_n(int index, ::google::protobuf::uint32 value) {$/;"	f	class:DecryptMessage
set_address_n	protob/messages.pb.h	/^inline void EncryptMessage::set_address_n(int index, ::google::protobuf::uint32 value) {$/;"	f	class:EncryptMessage
set_address_n	protob/messages.pb.h	/^inline void GetAddress::set_address_n(int index, ::google::protobuf::uint32 value) {$/;"	f	class:GetAddress
set_address_n	protob/messages.pb.h	/^inline void GetPublicKey::set_address_n(int index, ::google::protobuf::uint32 value) {$/;"	f	class:GetPublicKey
set_address_n	protob/messages.pb.h	/^inline void SignMessage::set_address_n(int index, ::google::protobuf::uint32 value) {$/;"	f	class:SignMessage
set_address_n	protob/types.pb.h	/^inline void TxInputType::set_address_n(int index, ::google::protobuf::uint32 value) {$/;"	f	class:TxInputType
set_address_n	protob/types.pb.h	/^inline void TxOutputType::set_address_n(int index, ::google::protobuf::uint32 value) {$/;"	f	class:TxOutputType
set_address_type	protob/types.pb.h	/^inline void CoinType::set_address_type(::google::protobuf::uint32 value) {$/;"	f	class:CoinType
set_allocated_address	protob/messages.pb.h	/^inline void Address::set_allocated_address(::std::string* address) {$/;"	f	class:Address
set_allocated_address	protob/messages.pb.h	/^inline void MessageSignature::set_allocated_address(::std::string* address) {$/;"	f	class:MessageSignature
set_allocated_address	protob/messages.pb.h	/^inline void VerifyMessage::set_allocated_address(::std::string* address) {$/;"	f	class:VerifyMessage
set_allocated_address	protob/types.pb.h	/^inline void TxOutputType::set_allocated_address(::std::string* address) {$/;"	f	class:TxOutputType
set_allocated_bootloader_hash	protob/messages.pb.h	/^inline void Features::set_allocated_bootloader_hash(::std::string* bootloader_hash) {$/;"	f	class:Features
set_allocated_bucket	protob/messages.pb.h	/^inline void DebugLinkLog::set_allocated_bucket(::std::string* bucket) {$/;"	f	class:DebugLinkLog
set_allocated_chain_code	protob/types.pb.h	/^inline void HDNodeType::set_allocated_chain_code(::std::string* chain_code) {$/;"	f	class:HDNodeType
set_allocated_coin_name	protob/messages.pb.h	/^inline void EstimateTxSize::set_allocated_coin_name(::std::string* coin_name) {$/;"	f	class:EstimateTxSize
set_allocated_coin_name	protob/messages.pb.h	/^inline void GetAddress::set_allocated_coin_name(::std::string* coin_name) {$/;"	f	class:GetAddress
set_allocated_coin_name	protob/messages.pb.h	/^inline void SignMessage::set_allocated_coin_name(::std::string* coin_name) {$/;"	f	class:SignMessage
set_allocated_coin_name	protob/messages.pb.h	/^inline void SignTx::set_allocated_coin_name(::std::string* coin_name) {$/;"	f	class:SignTx
set_allocated_coin_name	protob/messages.pb.h	/^inline void SimpleSignTx::set_allocated_coin_name(::std::string* coin_name) {$/;"	f	class:SimpleSignTx
set_allocated_coin_name	protob/types.pb.h	/^inline void CoinType::set_allocated_coin_name(::std::string* coin_name) {$/;"	f	class:CoinType
set_allocated_coin_shortcut	protob/types.pb.h	/^inline void CoinType::set_allocated_coin_shortcut(::std::string* coin_shortcut) {$/;"	f	class:CoinType
set_allocated_cpu_sn	protob/messages.pb.h	/^inline void Features::set_allocated_cpu_sn(::std::string* cpu_sn) {$/;"	f	class:Features
set_allocated_data	protob/messages.pb.h	/^inline void ButtonRequest::set_allocated_data(::std::string* data) {$/;"	f	class:ButtonRequest
set_allocated_details	protob/messages.pb.h	/^inline void TxRequest::set_allocated_details(::TxRequestDetailsType* details) {$/;"	f	class:TxRequest
set_allocated_device_id	protob/messages.pb.h	/^inline void Features::set_allocated_device_id(::std::string* device_id) {$/;"	f	class:Features
set_allocated_entropy	protob/messages.pb.h	/^inline void Entropy::set_allocated_entropy(::std::string* entropy) {$/;"	f	class:Entropy
set_allocated_entropy	protob/messages.pb.h	/^inline void EntropyAck::set_allocated_entropy(::std::string* entropy) {$/;"	f	class:EntropyAck
set_allocated_key	protob/messages.pb.h	/^inline void CipherKeyValue::set_allocated_key(::std::string* key) {$/;"	f	class:CipherKeyValue
set_allocated_label	protob/messages.pb.h	/^inline void ApplySettings::set_allocated_label(::std::string* label) {$/;"	f	class:ApplySettings
set_allocated_label	protob/messages.pb.h	/^inline void Features::set_allocated_label(::std::string* label) {$/;"	f	class:Features
set_allocated_label	protob/messages.pb.h	/^inline void LoadDevice::set_allocated_label(::std::string* label) {$/;"	f	class:LoadDevice
set_allocated_label	protob/messages.pb.h	/^inline void RecoveryDevice::set_allocated_label(::std::string* label) {$/;"	f	class:RecoveryDevice
set_allocated_label	protob/messages.pb.h	/^inline void ResetDevice::set_allocated_label(::std::string* label) {$/;"	f	class:ResetDevice
set_allocated_label	protob/storage.pb.h	/^inline void Storage::set_allocated_label(::std::string* label) {$/;"	f	class:Storage
set_allocated_language	protob/messages.pb.h	/^inline void ApplySettings::set_allocated_language(::std::string* language) {$/;"	f	class:ApplySettings
set_allocated_language	protob/messages.pb.h	/^inline void Features::set_allocated_language(::std::string* language) {$/;"	f	class:Features
set_allocated_language	protob/messages.pb.h	/^inline void LoadDevice::set_allocated_language(::std::string* language) {$/;"	f	class:LoadDevice
set_allocated_language	protob/messages.pb.h	/^inline void RecoveryDevice::set_allocated_language(::std::string* language) {$/;"	f	class:RecoveryDevice
set_allocated_language	protob/messages.pb.h	/^inline void ResetDevice::set_allocated_language(::std::string* language) {$/;"	f	class:ResetDevice
set_allocated_language	protob/storage.pb.h	/^inline void Storage::set_allocated_language(::std::string* language) {$/;"	f	class:Storage
set_allocated_layout	protob/messages.pb.h	/^inline void DebugLinkState::set_allocated_layout(::std::string* layout) {$/;"	f	class:DebugLinkState
set_allocated_matrix	protob/messages.pb.h	/^inline void DebugLinkState::set_allocated_matrix(::std::string* matrix) {$/;"	f	class:DebugLinkState
set_allocated_message	protob/messages.pb.h	/^inline void DecryptMessage::set_allocated_message(::std::string* message) {$/;"	f	class:DecryptMessage
set_allocated_message	protob/messages.pb.h	/^inline void EncryptMessage::set_allocated_message(::std::string* message) {$/;"	f	class:EncryptMessage
set_allocated_message	protob/messages.pb.h	/^inline void Failure::set_allocated_message(::std::string* message) {$/;"	f	class:Failure
set_allocated_message	protob/messages.pb.h	/^inline void Ping::set_allocated_message(::std::string* message) {$/;"	f	class:Ping
set_allocated_message	protob/messages.pb.h	/^inline void SignMessage::set_allocated_message(::std::string* message) {$/;"	f	class:SignMessage
set_allocated_message	protob/messages.pb.h	/^inline void Success::set_allocated_message(::std::string* message) {$/;"	f	class:Success
set_allocated_message	protob/messages.pb.h	/^inline void VerifyMessage::set_allocated_message(::std::string* message) {$/;"	f	class:VerifyMessage
set_allocated_mnemonic	protob/messages.pb.h	/^inline void DebugLinkState::set_allocated_mnemonic(::std::string* mnemonic) {$/;"	f	class:DebugLinkState
set_allocated_mnemonic	protob/messages.pb.h	/^inline void LoadDevice::set_allocated_mnemonic(::std::string* mnemonic) {$/;"	f	class:LoadDevice
set_allocated_mnemonic	protob/storage.pb.h	/^inline void Storage::set_allocated_mnemonic(::std::string* mnemonic) {$/;"	f	class:Storage
set_allocated_multisig	protob/types.pb.h	/^inline void TxInputType::set_allocated_multisig(::MultisigRedeemScriptType* multisig) {$/;"	f	class:TxInputType
set_allocated_node	protob/messages.pb.h	/^inline void DebugLinkState::set_allocated_node(::HDNodeType* node) {$/;"	f	class:DebugLinkState
set_allocated_node	protob/messages.pb.h	/^inline void LoadDevice::set_allocated_node(::HDNodeType* node) {$/;"	f	class:LoadDevice
set_allocated_node	protob/messages.pb.h	/^inline void PublicKey::set_allocated_node(::HDNodeType* node) {$/;"	f	class:PublicKey
set_allocated_node	protob/storage.pb.h	/^inline void Storage::set_allocated_node(::HDNodeType* node) {$/;"	f	class:Storage
set_allocated_passphrase	protob/messages.pb.h	/^inline void PassphraseAck::set_allocated_passphrase(::std::string* passphrase) {$/;"	f	class:PassphraseAck
set_allocated_path	protob/config.pb.h	/^inline void DeviceDescriptor::set_allocated_path(::std::string* path) {$/;"	f	class:DeviceDescriptor
set_allocated_payload	protob/messages.pb.h	/^inline void FirmwareUpload::set_allocated_payload(::std::string* payload) {$/;"	f	class:FirmwareUpload
set_allocated_payload	protob/messages.pb.h	/^inline void Success::set_allocated_payload(::std::string* payload) {$/;"	f	class:Success
set_allocated_pin	protob/messages.pb.h	/^inline void DebugLinkState::set_allocated_pin(::std::string* pin) {$/;"	f	class:DebugLinkState
set_allocated_pin	protob/messages.pb.h	/^inline void LoadDevice::set_allocated_pin(::std::string* pin) {$/;"	f	class:LoadDevice
set_allocated_pin	protob/messages.pb.h	/^inline void PinMatrixAck::set_allocated_pin(::std::string* pin) {$/;"	f	class:PinMatrixAck
set_allocated_pin	protob/storage.pb.h	/^inline void Storage::set_allocated_pin(::std::string* pin) {$/;"	f	class:Storage
set_allocated_prev_hash	protob/types.pb.h	/^inline void TxInputType::set_allocated_prev_hash(::std::string* prev_hash) {$/;"	f	class:TxInputType
set_allocated_private_key	protob/types.pb.h	/^inline void HDNodeType::set_allocated_private_key(::std::string* private_key) {$/;"	f	class:HDNodeType
set_allocated_pubkey	protob/messages.pb.h	/^inline void EncryptMessage::set_allocated_pubkey(::std::string* pubkey) {$/;"	f	class:EncryptMessage
set_allocated_public_key	protob/types.pb.h	/^inline void HDNodeType::set_allocated_public_key(::std::string* public_key) {$/;"	f	class:HDNodeType
set_allocated_recovery_fake_word	protob/messages.pb.h	/^inline void DebugLinkState::set_allocated_recovery_fake_word(::std::string* recovery_fake_word) {$/;"	f	class:DebugLinkState
set_allocated_reset_entropy	protob/messages.pb.h	/^inline void DebugLinkState::set_allocated_reset_entropy(::std::string* reset_entropy) {$/;"	f	class:DebugLinkState
set_allocated_reset_word	protob/messages.pb.h	/^inline void DebugLinkState::set_allocated_reset_word(::std::string* reset_word) {$/;"	f	class:DebugLinkState
set_allocated_revision	protob/messages.pb.h	/^inline void Features::set_allocated_revision(::std::string* revision) {$/;"	f	class:Features
set_allocated_script_pubkey	protob/types.pb.h	/^inline void TxOutputBinType::set_allocated_script_pubkey(::std::string* script_pubkey) {$/;"	f	class:TxOutputBinType
set_allocated_script_sig	protob/types.pb.h	/^inline void TxInputType::set_allocated_script_sig(::std::string* script_sig) {$/;"	f	class:TxInputType
set_allocated_serial_number	protob/config.pb.h	/^inline void DeviceDescriptor::set_allocated_serial_number(::std::string* serial_number) {$/;"	f	class:DeviceDescriptor
set_allocated_serialized	protob/messages.pb.h	/^inline void TxRequest::set_allocated_serialized(::TxRequestSerializedType* serialized) {$/;"	f	class:TxRequest
set_allocated_serialized_tx	protob/types.pb.h	/^inline void TxRequestSerializedType::set_allocated_serialized_tx(::std::string* serialized_tx) {$/;"	f	class:TxRequestSerializedType
set_allocated_signature	protob/messages.pb.h	/^inline void MessageSignature::set_allocated_signature(::std::string* signature) {$/;"	f	class:MessageSignature
set_allocated_signature	protob/messages.pb.h	/^inline void VerifyMessage::set_allocated_signature(::std::string* signature) {$/;"	f	class:VerifyMessage
set_allocated_signature	protob/types.pb.h	/^inline void TxRequestSerializedType::set_allocated_signature(::std::string* signature) {$/;"	f	class:TxRequestSerializedType
set_allocated_text	protob/messages.pb.h	/^inline void DebugLinkLog::set_allocated_text(::std::string* text) {$/;"	f	class:DebugLinkLog
set_allocated_tx	protob/messages.pb.h	/^inline void TxAck::set_allocated_tx(::TransactionType* tx) {$/;"	f	class:TxAck
set_allocated_tx_hash	protob/types.pb.h	/^inline void TxRequestDetailsType::set_allocated_tx_hash(::std::string* tx_hash) {$/;"	f	class:TxRequestDetailsType
set_allocated_value	protob/messages.pb.h	/^inline void CipherKeyValue::set_allocated_value(::std::string* value) {$/;"	f	class:CipherKeyValue
set_allocated_vendor	protob/messages.pb.h	/^inline void Features::set_allocated_vendor(::std::string* vendor) {$/;"	f	class:Features
set_allocated_wire_protocol	protob/config.pb.h	/^inline void Configuration::set_allocated_wire_protocol(::google::protobuf::FileDescriptorSet* wire_protocol) {$/;"	f	class:Configuration
set_allocated_word	protob/messages.pb.h	/^inline void WordAck::set_allocated_word(::std::string* word) {$/;"	f	class:WordAck
set_allocated_xpub	protob/messages.pb.h	/^inline void PublicKey::set_allocated_xpub(::std::string* xpub) {$/;"	f	class:PublicKey
set_amount	protob/types.pb.h	/^inline void TxOutputBinType::set_amount(::google::protobuf::uint64 value) {$/;"	f	class:TxOutputBinType
set_amount	protob/types.pb.h	/^inline void TxOutputType::set_amount(::google::protobuf::uint64 value) {$/;"	f	class:TxOutputType
set_ask_on_decrypt	protob/messages.pb.h	/^inline void CipherKeyValue::set_ask_on_decrypt(bool value) {$/;"	f	class:CipherKeyValue
set_ask_on_encrypt	protob/messages.pb.h	/^inline void CipherKeyValue::set_ask_on_encrypt(bool value) {$/;"	f	class:CipherKeyValue
set_blacklist_urls	protob/config.pb.h	/^inline void Configuration::set_blacklist_urls(int index, const ::std::string& value) {$/;"	f	class:Configuration
set_blacklist_urls	protob/config.pb.h	/^inline void Configuration::set_blacklist_urls(int index, const char* value) {$/;"	f	class:Configuration
set_blacklist_urls	protob/config.pb.h	/^inline void Configuration::set_blacklist_urls(int index, const char* value, size_t size) {$/;"	f	class:Configuration
set_bootloader_hash	protob/messages.pb.h	/^inline void Features::set_bootloader_hash(const ::std::string& value) {$/;"	f	class:Features
set_bootloader_hash	protob/messages.pb.h	/^inline void Features::set_bootloader_hash(const char* value) {$/;"	f	class:Features
set_bootloader_hash	protob/messages.pb.h	/^inline void Features::set_bootloader_hash(const void* value, size_t size) {$/;"	f	class:Features
set_bootloader_mode	protob/messages.pb.h	/^inline void Features::set_bootloader_mode(bool value) {$/;"	f	class:Features
set_bucket	protob/messages.pb.h	/^inline void DebugLinkLog::set_bucket(const ::std::string& value) {$/;"	f	class:DebugLinkLog
set_bucket	protob/messages.pb.h	/^inline void DebugLinkLog::set_bucket(const char* value) {$/;"	f	class:DebugLinkLog
set_bucket	protob/messages.pb.h	/^inline void DebugLinkLog::set_bucket(const char* value, size_t size) {$/;"	f	class:DebugLinkLog
set_button_protection	protob/messages.pb.h	/^inline void Ping::set_button_protection(bool value) {$/;"	f	class:Ping
set_chain_code	protob/types.pb.h	/^inline void HDNodeType::set_chain_code(const ::std::string& value) {$/;"	f	class:HDNodeType
set_chain_code	protob/types.pb.h	/^inline void HDNodeType::set_chain_code(const char* value) {$/;"	f	class:HDNodeType
set_chain_code	protob/types.pb.h	/^inline void HDNodeType::set_chain_code(const void* value, size_t size) {$/;"	f	class:HDNodeType
set_child_num	protob/types.pb.h	/^inline void HDNodeType::set_child_num(::google::protobuf::uint32 value) {$/;"	f	class:HDNodeType
set_code	protob/messages.pb.h	/^inline void ButtonRequest::set_code(::ButtonRequestType value) {$/;"	f	class:ButtonRequest
set_code	protob/messages.pb.h	/^inline void Failure::set_code(::FailureType value) {$/;"	f	class:Failure
set_coin_name	protob/messages.pb.h	/^inline void EstimateTxSize::set_coin_name(const ::std::string& value) {$/;"	f	class:EstimateTxSize
set_coin_name	protob/messages.pb.h	/^inline void EstimateTxSize::set_coin_name(const char* value) {$/;"	f	class:EstimateTxSize
set_coin_name	protob/messages.pb.h	/^inline void EstimateTxSize::set_coin_name(const char* value, size_t size) {$/;"	f	class:EstimateTxSize
set_coin_name	protob/messages.pb.h	/^inline void GetAddress::set_coin_name(const ::std::string& value) {$/;"	f	class:GetAddress
set_coin_name	protob/messages.pb.h	/^inline void GetAddress::set_coin_name(const char* value) {$/;"	f	class:GetAddress
set_coin_name	protob/messages.pb.h	/^inline void GetAddress::set_coin_name(const char* value, size_t size) {$/;"	f	class:GetAddress
set_coin_name	protob/messages.pb.h	/^inline void SignMessage::set_coin_name(const ::std::string& value) {$/;"	f	class:SignMessage
set_coin_name	protob/messages.pb.h	/^inline void SignMessage::set_coin_name(const char* value) {$/;"	f	class:SignMessage
set_coin_name	protob/messages.pb.h	/^inline void SignMessage::set_coin_name(const char* value, size_t size) {$/;"	f	class:SignMessage
set_coin_name	protob/messages.pb.h	/^inline void SignTx::set_coin_name(const ::std::string& value) {$/;"	f	class:SignTx
set_coin_name	protob/messages.pb.h	/^inline void SignTx::set_coin_name(const char* value) {$/;"	f	class:SignTx
set_coin_name	protob/messages.pb.h	/^inline void SignTx::set_coin_name(const char* value, size_t size) {$/;"	f	class:SignTx
set_coin_name	protob/messages.pb.h	/^inline void SimpleSignTx::set_coin_name(const ::std::string& value) {$/;"	f	class:SimpleSignTx
set_coin_name	protob/messages.pb.h	/^inline void SimpleSignTx::set_coin_name(const char* value) {$/;"	f	class:SimpleSignTx
set_coin_name	protob/messages.pb.h	/^inline void SimpleSignTx::set_coin_name(const char* value, size_t size) {$/;"	f	class:SimpleSignTx
set_coin_name	protob/types.pb.h	/^inline void CoinType::set_coin_name(const ::std::string& value) {$/;"	f	class:CoinType
set_coin_name	protob/types.pb.h	/^inline void CoinType::set_coin_name(const char* value) {$/;"	f	class:CoinType
set_coin_name	protob/types.pb.h	/^inline void CoinType::set_coin_name(const char* value, size_t size) {$/;"	f	class:CoinType
set_coin_shortcut	protob/types.pb.h	/^inline void CoinType::set_coin_shortcut(const ::std::string& value) {$/;"	f	class:CoinType
set_coin_shortcut	protob/types.pb.h	/^inline void CoinType::set_coin_shortcut(const char* value) {$/;"	f	class:CoinType
set_coin_shortcut	protob/types.pb.h	/^inline void CoinType::set_coin_shortcut(const char* value, size_t size) {$/;"	f	class:CoinType
set_cpu_sn	protob/messages.pb.h	/^inline void Features::set_cpu_sn(const ::std::string& value) {$/;"	f	class:Features
set_cpu_sn	protob/messages.pb.h	/^inline void Features::set_cpu_sn(const char* value) {$/;"	f	class:Features
set_cpu_sn	protob/messages.pb.h	/^inline void Features::set_cpu_sn(const char* value, size_t size) {$/;"	f	class:Features
set_data	protob/messages.pb.h	/^inline void ButtonRequest::set_data(const ::std::string& value) {$/;"	f	class:ButtonRequest
set_data	protob/messages.pb.h	/^inline void ButtonRequest::set_data(const char* value) {$/;"	f	class:ButtonRequest
set_data	protob/messages.pb.h	/^inline void ButtonRequest::set_data(const char* value, size_t size) {$/;"	f	class:ButtonRequest
set_delay_time	protob/messages.pb.h	/^inline void TestScreen::set_delay_time(::google::protobuf::uint32 value) {$/;"	f	class:TestScreen
set_depth	protob/types.pb.h	/^inline void HDNodeType::set_depth(::google::protobuf::uint32 value) {$/;"	f	class:HDNodeType
set_device_id	protob/messages.pb.h	/^inline void Features::set_device_id(const ::std::string& value) {$/;"	f	class:Features
set_device_id	protob/messages.pb.h	/^inline void Features::set_device_id(const char* value) {$/;"	f	class:Features
set_device_id	protob/messages.pb.h	/^inline void Features::set_device_id(const char* value, size_t size) {$/;"	f	class:Features
set_display_only	protob/messages.pb.h	/^inline void EncryptMessage::set_display_only(bool value) {$/;"	f	class:EncryptMessage
set_display_random	protob/messages.pb.h	/^inline void ResetDevice::set_display_random(bool value) {$/;"	f	class:ResetDevice
set_encrypt	protob/messages.pb.h	/^inline void CipherKeyValue::set_encrypt(bool value) {$/;"	f	class:CipherKeyValue
set_enforce_wordlist	protob/messages.pb.h	/^inline void RecoveryDevice::set_enforce_wordlist(bool value) {$/;"	f	class:RecoveryDevice
set_entropy	protob/messages.pb.h	/^inline void Entropy::set_entropy(const ::std::string& value) {$/;"	f	class:Entropy
set_entropy	protob/messages.pb.h	/^inline void Entropy::set_entropy(const char* value) {$/;"	f	class:Entropy
set_entropy	protob/messages.pb.h	/^inline void Entropy::set_entropy(const void* value, size_t size) {$/;"	f	class:Entropy
set_entropy	protob/messages.pb.h	/^inline void EntropyAck::set_entropy(const ::std::string& value) {$/;"	f	class:EntropyAck
set_entropy	protob/messages.pb.h	/^inline void EntropyAck::set_entropy(const char* value) {$/;"	f	class:EntropyAck
set_entropy	protob/messages.pb.h	/^inline void EntropyAck::set_entropy(const void* value, size_t size) {$/;"	f	class:EntropyAck
set_fingerprint	protob/types.pb.h	/^inline void HDNodeType::set_fingerprint(::google::protobuf::uint32 value) {$/;"	f	class:HDNodeType
set_has_address	protob/messages.pb.h	/^inline void Address::set_has_address() {$/;"	f	class:Address
set_has_address	protob/messages.pb.h	/^inline void MessageSignature::set_has_address() {$/;"	f	class:MessageSignature
set_has_address	protob/messages.pb.h	/^inline void VerifyMessage::set_has_address() {$/;"	f	class:VerifyMessage
set_has_address	protob/types.pb.h	/^inline void TxOutputType::set_has_address() {$/;"	f	class:TxOutputType
set_has_address_type	protob/types.pb.h	/^inline void CoinType::set_has_address_type() {$/;"	f	class:CoinType
set_has_amount	protob/types.pb.h	/^inline void TxOutputBinType::set_has_amount() {$/;"	f	class:TxOutputBinType
set_has_amount	protob/types.pb.h	/^inline void TxOutputType::set_has_amount() {$/;"	f	class:TxOutputType
set_has_ask_on_decrypt	protob/messages.pb.h	/^inline void CipherKeyValue::set_has_ask_on_decrypt() {$/;"	f	class:CipherKeyValue
set_has_ask_on_encrypt	protob/messages.pb.h	/^inline void CipherKeyValue::set_has_ask_on_encrypt() {$/;"	f	class:CipherKeyValue
set_has_bootloader_hash	protob/messages.pb.h	/^inline void Features::set_has_bootloader_hash() {$/;"	f	class:Features
set_has_bootloader_mode	protob/messages.pb.h	/^inline void Features::set_has_bootloader_mode() {$/;"	f	class:Features
set_has_bucket	protob/messages.pb.h	/^inline void DebugLinkLog::set_has_bucket() {$/;"	f	class:DebugLinkLog
set_has_button_protection	protob/messages.pb.h	/^inline void Ping::set_has_button_protection() {$/;"	f	class:Ping
set_has_chain_code	protob/types.pb.h	/^inline void HDNodeType::set_has_chain_code() {$/;"	f	class:HDNodeType
set_has_child_num	protob/types.pb.h	/^inline void HDNodeType::set_has_child_num() {$/;"	f	class:HDNodeType
set_has_code	protob/messages.pb.h	/^inline void ButtonRequest::set_has_code() {$/;"	f	class:ButtonRequest
set_has_code	protob/messages.pb.h	/^inline void Failure::set_has_code() {$/;"	f	class:Failure
set_has_coin_name	protob/messages.pb.h	/^inline void EstimateTxSize::set_has_coin_name() {$/;"	f	class:EstimateTxSize
set_has_coin_name	protob/messages.pb.h	/^inline void GetAddress::set_has_coin_name() {$/;"	f	class:GetAddress
set_has_coin_name	protob/messages.pb.h	/^inline void SignMessage::set_has_coin_name() {$/;"	f	class:SignMessage
set_has_coin_name	protob/messages.pb.h	/^inline void SignTx::set_has_coin_name() {$/;"	f	class:SignTx
set_has_coin_name	protob/messages.pb.h	/^inline void SimpleSignTx::set_has_coin_name() {$/;"	f	class:SimpleSignTx
set_has_coin_name	protob/types.pb.h	/^inline void CoinType::set_has_coin_name() {$/;"	f	class:CoinType
set_has_coin_shortcut	protob/types.pb.h	/^inline void CoinType::set_has_coin_shortcut() {$/;"	f	class:CoinType
set_has_cpu_sn	protob/messages.pb.h	/^inline void Features::set_has_cpu_sn() {$/;"	f	class:Features
set_has_data	protob/messages.pb.h	/^inline void ButtonRequest::set_has_data() {$/;"	f	class:ButtonRequest
set_has_delay_time	protob/messages.pb.h	/^inline void TestScreen::set_has_delay_time() {$/;"	f	class:TestScreen
set_has_depth	protob/types.pb.h	/^inline void HDNodeType::set_has_depth() {$/;"	f	class:HDNodeType
set_has_details	protob/messages.pb.h	/^inline void TxRequest::set_has_details() {$/;"	f	class:TxRequest
set_has_device_id	protob/messages.pb.h	/^inline void Features::set_has_device_id() {$/;"	f	class:Features
set_has_display_only	protob/messages.pb.h	/^inline void EncryptMessage::set_has_display_only() {$/;"	f	class:EncryptMessage
set_has_display_random	protob/messages.pb.h	/^inline void ResetDevice::set_has_display_random() {$/;"	f	class:ResetDevice
set_has_encrypt	protob/messages.pb.h	/^inline void CipherKeyValue::set_has_encrypt() {$/;"	f	class:CipherKeyValue
set_has_enforce_wordlist	protob/messages.pb.h	/^inline void RecoveryDevice::set_has_enforce_wordlist() {$/;"	f	class:RecoveryDevice
set_has_entropy	protob/messages.pb.h	/^inline void Entropy::set_has_entropy() {$/;"	f	class:Entropy
set_has_entropy	protob/messages.pb.h	/^inline void EntropyAck::set_has_entropy() {$/;"	f	class:EntropyAck
set_has_fingerprint	protob/types.pb.h	/^inline void HDNodeType::set_has_fingerprint() {$/;"	f	class:HDNodeType
set_has_imported	protob/messages.pb.h	/^inline void Features::set_has_imported() {$/;"	f	class:Features
set_has_imported	protob/storage.pb.h	/^inline void Storage::set_has_imported() {$/;"	f	class:Storage
set_has_initialized	protob/messages.pb.h	/^inline void Features::set_has_initialized() {$/;"	f	class:Features
set_has_inputs_cnt	protob/types.pb.h	/^inline void TransactionType::set_has_inputs_cnt() {$/;"	f	class:TransactionType
set_has_inputs_count	protob/messages.pb.h	/^inline void EstimateTxSize::set_has_inputs_count() {$/;"	f	class:EstimateTxSize
set_has_inputs_count	protob/messages.pb.h	/^inline void SignTx::set_has_inputs_count() {$/;"	f	class:SignTx
set_has_key	protob/messages.pb.h	/^inline void CipherKeyValue::set_has_key() {$/;"	f	class:CipherKeyValue
set_has_label	protob/messages.pb.h	/^inline void ApplySettings::set_has_label() {$/;"	f	class:ApplySettings
set_has_label	protob/messages.pb.h	/^inline void Features::set_has_label() {$/;"	f	class:Features
set_has_label	protob/messages.pb.h	/^inline void LoadDevice::set_has_label() {$/;"	f	class:LoadDevice
set_has_label	protob/messages.pb.h	/^inline void RecoveryDevice::set_has_label() {$/;"	f	class:RecoveryDevice
set_has_label	protob/messages.pb.h	/^inline void ResetDevice::set_has_label() {$/;"	f	class:ResetDevice
set_has_label	protob/storage.pb.h	/^inline void Storage::set_has_label() {$/;"	f	class:Storage
set_has_language	protob/messages.pb.h	/^inline void ApplySettings::set_has_language() {$/;"	f	class:ApplySettings
set_has_language	protob/messages.pb.h	/^inline void Features::set_has_language() {$/;"	f	class:Features
set_has_language	protob/messages.pb.h	/^inline void LoadDevice::set_has_language() {$/;"	f	class:LoadDevice
set_has_language	protob/messages.pb.h	/^inline void RecoveryDevice::set_has_language() {$/;"	f	class:RecoveryDevice
set_has_language	protob/messages.pb.h	/^inline void ResetDevice::set_has_language() {$/;"	f	class:ResetDevice
set_has_language	protob/storage.pb.h	/^inline void Storage::set_has_language() {$/;"	f	class:Storage
set_has_layout	protob/messages.pb.h	/^inline void DebugLinkState::set_has_layout() {$/;"	f	class:DebugLinkState
set_has_level	protob/messages.pb.h	/^inline void DebugLinkLog::set_has_level() {$/;"	f	class:DebugLinkLog
set_has_lock_time	protob/types.pb.h	/^inline void TransactionType::set_has_lock_time() {$/;"	f	class:TransactionType
set_has_major_version	protob/messages.pb.h	/^inline void Features::set_has_major_version() {$/;"	f	class:Features
set_has_matrix	protob/messages.pb.h	/^inline void DebugLinkState::set_has_matrix() {$/;"	f	class:DebugLinkState
set_has_maxfee_kb	protob/types.pb.h	/^inline void CoinType::set_has_maxfee_kb() {$/;"	f	class:CoinType
set_has_message	protob/messages.pb.h	/^inline void DecryptMessage::set_has_message() {$/;"	f	class:DecryptMessage
set_has_message	protob/messages.pb.h	/^inline void EncryptMessage::set_has_message() {$/;"	f	class:EncryptMessage
set_has_message	protob/messages.pb.h	/^inline void Failure::set_has_message() {$/;"	f	class:Failure
set_has_message	protob/messages.pb.h	/^inline void Ping::set_has_message() {$/;"	f	class:Ping
set_has_message	protob/messages.pb.h	/^inline void SignMessage::set_has_message() {$/;"	f	class:SignMessage
set_has_message	protob/messages.pb.h	/^inline void Success::set_has_message() {$/;"	f	class:Success
set_has_message	protob/messages.pb.h	/^inline void VerifyMessage::set_has_message() {$/;"	f	class:VerifyMessage
set_has_minor_version	protob/messages.pb.h	/^inline void Features::set_has_minor_version() {$/;"	f	class:Features
set_has_mnemonic	protob/messages.pb.h	/^inline void DebugLinkState::set_has_mnemonic() {$/;"	f	class:DebugLinkState
set_has_mnemonic	protob/messages.pb.h	/^inline void LoadDevice::set_has_mnemonic() {$/;"	f	class:LoadDevice
set_has_mnemonic	protob/storage.pb.h	/^inline void Storage::set_has_mnemonic() {$/;"	f	class:Storage
set_has_multisig	protob/types.pb.h	/^inline void TxInputType::set_has_multisig() {$/;"	f	class:TxInputType
set_has_node	protob/messages.pb.h	/^inline void DebugLinkState::set_has_node() {$/;"	f	class:DebugLinkState
set_has_node	protob/messages.pb.h	/^inline void LoadDevice::set_has_node() {$/;"	f	class:LoadDevice
set_has_node	protob/messages.pb.h	/^inline void PublicKey::set_has_node() {$/;"	f	class:PublicKey
set_has_node	protob/storage.pb.h	/^inline void Storage::set_has_node() {$/;"	f	class:Storage
set_has_outputs_cnt	protob/types.pb.h	/^inline void TransactionType::set_has_outputs_cnt() {$/;"	f	class:TransactionType
set_has_outputs_count	protob/messages.pb.h	/^inline void EstimateTxSize::set_has_outputs_count() {$/;"	f	class:EstimateTxSize
set_has_outputs_count	protob/messages.pb.h	/^inline void SignTx::set_has_outputs_count() {$/;"	f	class:SignTx
set_has_passphrase	protob/messages.pb.h	/^inline void PassphraseAck::set_has_passphrase() {$/;"	f	class:PassphraseAck
set_has_passphrase_protection	protob/messages.pb.h	/^inline void DebugLinkState::set_has_passphrase_protection() {$/;"	f	class:DebugLinkState
set_has_passphrase_protection	protob/messages.pb.h	/^inline void Features::set_has_passphrase_protection() {$/;"	f	class:Features
set_has_passphrase_protection	protob/messages.pb.h	/^inline void LoadDevice::set_has_passphrase_protection() {$/;"	f	class:LoadDevice
set_has_passphrase_protection	protob/messages.pb.h	/^inline void Ping::set_has_passphrase_protection() {$/;"	f	class:Ping
set_has_passphrase_protection	protob/messages.pb.h	/^inline void RecoveryDevice::set_has_passphrase_protection() {$/;"	f	class:RecoveryDevice
set_has_passphrase_protection	protob/messages.pb.h	/^inline void ResetDevice::set_has_passphrase_protection() {$/;"	f	class:ResetDevice
set_has_passphrase_protection	protob/storage.pb.h	/^inline void Storage::set_has_passphrase_protection() {$/;"	f	class:Storage
set_has_patch_version	protob/messages.pb.h	/^inline void Features::set_has_patch_version() {$/;"	f	class:Features
set_has_path	protob/config.pb.h	/^inline void DeviceDescriptor::set_has_path() {$/;"	f	class:DeviceDescriptor
set_has_payload	protob/messages.pb.h	/^inline void FirmwareUpload::set_has_payload() {$/;"	f	class:FirmwareUpload
set_has_payload	protob/messages.pb.h	/^inline void Success::set_has_payload() {$/;"	f	class:Success
set_has_pin	protob/messages.pb.h	/^inline void DebugLinkState::set_has_pin() {$/;"	f	class:DebugLinkState
set_has_pin	protob/messages.pb.h	/^inline void LoadDevice::set_has_pin() {$/;"	f	class:LoadDevice
set_has_pin	protob/messages.pb.h	/^inline void PinMatrixAck::set_has_pin() {$/;"	f	class:PinMatrixAck
set_has_pin	protob/storage.pb.h	/^inline void Storage::set_has_pin() {$/;"	f	class:Storage
set_has_pin_failed_attempts	protob/storage.pb.h	/^inline void Storage::set_has_pin_failed_attempts() {$/;"	f	class:Storage
set_has_pin_protection	protob/messages.pb.h	/^inline void Features::set_has_pin_protection() {$/;"	f	class:Features
set_has_pin_protection	protob/messages.pb.h	/^inline void Ping::set_has_pin_protection() {$/;"	f	class:Ping
set_has_pin_protection	protob/messages.pb.h	/^inline void RecoveryDevice::set_has_pin_protection() {$/;"	f	class:RecoveryDevice
set_has_pin_protection	protob/messages.pb.h	/^inline void ResetDevice::set_has_pin_protection() {$/;"	f	class:ResetDevice
set_has_prev_hash	protob/types.pb.h	/^inline void TxInputType::set_has_prev_hash() {$/;"	f	class:TxInputType
set_has_prev_index	protob/types.pb.h	/^inline void TxInputType::set_has_prev_index() {$/;"	f	class:TxInputType
set_has_private_key	protob/types.pb.h	/^inline void HDNodeType::set_has_private_key() {$/;"	f	class:HDNodeType
set_has_product_id	protob/config.pb.h	/^inline void DeviceDescriptor::set_has_product_id() {$/;"	f	class:DeviceDescriptor
set_has_pubkey	protob/messages.pb.h	/^inline void EncryptMessage::set_has_pubkey() {$/;"	f	class:EncryptMessage
set_has_public_key	protob/types.pb.h	/^inline void HDNodeType::set_has_public_key() {$/;"	f	class:HDNodeType
set_has_recovery_fake_word	protob/messages.pb.h	/^inline void DebugLinkState::set_has_recovery_fake_word() {$/;"	f	class:DebugLinkState
set_has_recovery_word_pos	protob/messages.pb.h	/^inline void DebugLinkState::set_has_recovery_word_pos() {$/;"	f	class:DebugLinkState
set_has_remove	protob/messages.pb.h	/^inline void ChangePin::set_has_remove() {$/;"	f	class:ChangePin
set_has_request_index	protob/types.pb.h	/^inline void TxRequestDetailsType::set_has_request_index() {$/;"	f	class:TxRequestDetailsType
set_has_request_type	protob/messages.pb.h	/^inline void TxRequest::set_has_request_type() {$/;"	f	class:TxRequest
set_has_reset_entropy	protob/messages.pb.h	/^inline void DebugLinkState::set_has_reset_entropy() {$/;"	f	class:DebugLinkState
set_has_reset_word	protob/messages.pb.h	/^inline void DebugLinkState::set_has_reset_word() {$/;"	f	class:DebugLinkState
set_has_revision	protob/messages.pb.h	/^inline void Features::set_has_revision() {$/;"	f	class:Features
set_has_script_pubkey	protob/types.pb.h	/^inline void TxOutputBinType::set_has_script_pubkey() {$/;"	f	class:TxOutputBinType
set_has_script_sig	protob/types.pb.h	/^inline void TxInputType::set_has_script_sig() {$/;"	f	class:TxInputType
set_has_script_type	protob/types.pb.h	/^inline void TxInputType::set_has_script_type() {$/;"	f	class:TxInputType
set_has_script_type	protob/types.pb.h	/^inline void TxOutputType::set_has_script_type() {$/;"	f	class:TxOutputType
set_has_sequence	protob/types.pb.h	/^inline void TxInputType::set_has_sequence() {$/;"	f	class:TxInputType
set_has_serial_number	protob/config.pb.h	/^inline void DeviceDescriptor::set_has_serial_number() {$/;"	f	class:DeviceDescriptor
set_has_serialized	protob/messages.pb.h	/^inline void TxRequest::set_has_serialized() {$/;"	f	class:TxRequest
set_has_serialized_tx	protob/types.pb.h	/^inline void TxRequestSerializedType::set_has_serialized_tx() {$/;"	f	class:TxRequestSerializedType
set_has_show_display	protob/messages.pb.h	/^inline void GetAddress::set_has_show_display() {$/;"	f	class:GetAddress
set_has_signature	protob/messages.pb.h	/^inline void MessageSignature::set_has_signature() {$/;"	f	class:MessageSignature
set_has_signature	protob/messages.pb.h	/^inline void VerifyMessage::set_has_signature() {$/;"	f	class:VerifyMessage
set_has_signature	protob/types.pb.h	/^inline void TxRequestSerializedType::set_has_signature() {$/;"	f	class:TxRequestSerializedType
set_has_signature_index	protob/types.pb.h	/^inline void TxRequestSerializedType::set_has_signature_index() {$/;"	f	class:TxRequestSerializedType
set_has_size	protob/messages.pb.h	/^inline void GetEntropy::set_has_size() {$/;"	f	class:GetEntropy
set_has_skip_checksum	protob/messages.pb.h	/^inline void LoadDevice::set_has_skip_checksum() {$/;"	f	class:LoadDevice
set_has_strength	protob/messages.pb.h	/^inline void ResetDevice::set_has_strength() {$/;"	f	class:ResetDevice
set_has_text	protob/messages.pb.h	/^inline void DebugLinkLog::set_has_text() {$/;"	f	class:DebugLinkLog
set_has_tx	protob/messages.pb.h	/^inline void TxAck::set_has_tx() {$/;"	f	class:TxAck
set_has_tx_hash	protob/types.pb.h	/^inline void TxRequestDetailsType::set_has_tx_hash() {$/;"	f	class:TxRequestDetailsType
set_has_tx_size	protob/messages.pb.h	/^inline void TxSize::set_has_tx_size() {$/;"	f	class:TxSize
set_has_type	protob/messages.pb.h	/^inline void PinMatrixRequest::set_has_type() {$/;"	f	class:PinMatrixRequest
set_has_valid_until	protob/config.pb.h	/^inline void Configuration::set_has_valid_until() {$/;"	f	class:Configuration
set_has_value	protob/messages.pb.h	/^inline void CipherKeyValue::set_has_value() {$/;"	f	class:CipherKeyValue
set_has_vendor	protob/messages.pb.h	/^inline void Features::set_has_vendor() {$/;"	f	class:Features
set_has_vendor_id	protob/config.pb.h	/^inline void DeviceDescriptor::set_has_vendor_id() {$/;"	f	class:DeviceDescriptor
set_has_version	protob/storage.pb.h	/^inline void Storage::set_has_version() {$/;"	f	class:Storage
set_has_version	protob/types.pb.h	/^inline void TransactionType::set_has_version() {$/;"	f	class:TransactionType
set_has_wire_protocol	protob/config.pb.h	/^inline void Configuration::set_has_wire_protocol() {$/;"	f	class:Configuration
set_has_word	protob/messages.pb.h	/^inline void WordAck::set_has_word() {$/;"	f	class:WordAck
set_has_word_count	protob/messages.pb.h	/^inline void RecoveryDevice::set_has_word_count() {$/;"	f	class:RecoveryDevice
set_has_xpub	protob/messages.pb.h	/^inline void PublicKey::set_has_xpub() {$/;"	f	class:PublicKey
set_has_yes_no	protob/messages.pb.h	/^inline void DebugLinkDecision::set_has_yes_no() {$/;"	f	class:DebugLinkDecision
set_imported	protob/messages.pb.h	/^inline void Features::set_imported(bool value) {$/;"	f	class:Features
set_imported	protob/storage.pb.h	/^inline void Storage::set_imported(bool value) {$/;"	f	class:Storage
set_initialized	protob/messages.pb.h	/^inline void Features::set_initialized(bool value) {$/;"	f	class:Features
set_inputs_cnt	protob/types.pb.h	/^inline void TransactionType::set_inputs_cnt(::google::protobuf::uint32 value) {$/;"	f	class:TransactionType
set_inputs_count	protob/messages.pb.h	/^inline void EstimateTxSize::set_inputs_count(::google::protobuf::uint32 value) {$/;"	f	class:EstimateTxSize
set_inputs_count	protob/messages.pb.h	/^inline void SignTx::set_inputs_count(::google::protobuf::uint32 value) {$/;"	f	class:SignTx
set_key	protob/messages.pb.h	/^inline void CipherKeyValue::set_key(const ::std::string& value) {$/;"	f	class:CipherKeyValue
set_key	protob/messages.pb.h	/^inline void CipherKeyValue::set_key(const char* value) {$/;"	f	class:CipherKeyValue
set_key	protob/messages.pb.h	/^inline void CipherKeyValue::set_key(const char* value, size_t size) {$/;"	f	class:CipherKeyValue
set_label	protob/messages.pb.h	/^inline void ApplySettings::set_label(const ::std::string& value) {$/;"	f	class:ApplySettings
set_label	protob/messages.pb.h	/^inline void ApplySettings::set_label(const char* value) {$/;"	f	class:ApplySettings
set_label	protob/messages.pb.h	/^inline void ApplySettings::set_label(const char* value, size_t size) {$/;"	f	class:ApplySettings
set_label	protob/messages.pb.h	/^inline void Features::set_label(const ::std::string& value) {$/;"	f	class:Features
set_label	protob/messages.pb.h	/^inline void Features::set_label(const char* value) {$/;"	f	class:Features
set_label	protob/messages.pb.h	/^inline void Features::set_label(const char* value, size_t size) {$/;"	f	class:Features
set_label	protob/messages.pb.h	/^inline void LoadDevice::set_label(const ::std::string& value) {$/;"	f	class:LoadDevice
set_label	protob/messages.pb.h	/^inline void LoadDevice::set_label(const char* value) {$/;"	f	class:LoadDevice
set_label	protob/messages.pb.h	/^inline void LoadDevice::set_label(const char* value, size_t size) {$/;"	f	class:LoadDevice
set_label	protob/messages.pb.h	/^inline void RecoveryDevice::set_label(const ::std::string& value) {$/;"	f	class:RecoveryDevice
set_label	protob/messages.pb.h	/^inline void RecoveryDevice::set_label(const char* value) {$/;"	f	class:RecoveryDevice
set_label	protob/messages.pb.h	/^inline void RecoveryDevice::set_label(const char* value, size_t size) {$/;"	f	class:RecoveryDevice
set_label	protob/messages.pb.h	/^inline void ResetDevice::set_label(const ::std::string& value) {$/;"	f	class:ResetDevice
set_label	protob/messages.pb.h	/^inline void ResetDevice::set_label(const char* value) {$/;"	f	class:ResetDevice
set_label	protob/messages.pb.h	/^inline void ResetDevice::set_label(const char* value, size_t size) {$/;"	f	class:ResetDevice
set_label	protob/storage.pb.h	/^inline void Storage::set_label(const ::std::string& value) {$/;"	f	class:Storage
set_label	protob/storage.pb.h	/^inline void Storage::set_label(const char* value) {$/;"	f	class:Storage
set_label	protob/storage.pb.h	/^inline void Storage::set_label(const char* value, size_t size) {$/;"	f	class:Storage
set_language	protob/messages.pb.h	/^inline void ApplySettings::set_language(const ::std::string& value) {$/;"	f	class:ApplySettings
set_language	protob/messages.pb.h	/^inline void ApplySettings::set_language(const char* value) {$/;"	f	class:ApplySettings
set_language	protob/messages.pb.h	/^inline void ApplySettings::set_language(const char* value, size_t size) {$/;"	f	class:ApplySettings
set_language	protob/messages.pb.h	/^inline void Features::set_language(const ::std::string& value) {$/;"	f	class:Features
set_language	protob/messages.pb.h	/^inline void Features::set_language(const char* value) {$/;"	f	class:Features
set_language	protob/messages.pb.h	/^inline void Features::set_language(const char* value, size_t size) {$/;"	f	class:Features
set_language	protob/messages.pb.h	/^inline void LoadDevice::set_language(const ::std::string& value) {$/;"	f	class:LoadDevice
set_language	protob/messages.pb.h	/^inline void LoadDevice::set_language(const char* value) {$/;"	f	class:LoadDevice
set_language	protob/messages.pb.h	/^inline void LoadDevice::set_language(const char* value, size_t size) {$/;"	f	class:LoadDevice
set_language	protob/messages.pb.h	/^inline void RecoveryDevice::set_language(const ::std::string& value) {$/;"	f	class:RecoveryDevice
set_language	protob/messages.pb.h	/^inline void RecoveryDevice::set_language(const char* value) {$/;"	f	class:RecoveryDevice
set_language	protob/messages.pb.h	/^inline void RecoveryDevice::set_language(const char* value, size_t size) {$/;"	f	class:RecoveryDevice
set_language	protob/messages.pb.h	/^inline void ResetDevice::set_language(const ::std::string& value) {$/;"	f	class:ResetDevice
set_language	protob/messages.pb.h	/^inline void ResetDevice::set_language(const char* value) {$/;"	f	class:ResetDevice
set_language	protob/messages.pb.h	/^inline void ResetDevice::set_language(const char* value, size_t size) {$/;"	f	class:ResetDevice
set_language	protob/storage.pb.h	/^inline void Storage::set_language(const ::std::string& value) {$/;"	f	class:Storage
set_language	protob/storage.pb.h	/^inline void Storage::set_language(const char* value) {$/;"	f	class:Storage
set_language	protob/storage.pb.h	/^inline void Storage::set_language(const char* value, size_t size) {$/;"	f	class:Storage
set_layout	protob/messages.pb.h	/^inline void DebugLinkState::set_layout(const ::std::string& value) {$/;"	f	class:DebugLinkState
set_layout	protob/messages.pb.h	/^inline void DebugLinkState::set_layout(const char* value) {$/;"	f	class:DebugLinkState
set_layout	protob/messages.pb.h	/^inline void DebugLinkState::set_layout(const void* value, size_t size) {$/;"	f	class:DebugLinkState
set_level	protob/messages.pb.h	/^inline void DebugLinkLog::set_level(::google::protobuf::uint32 value) {$/;"	f	class:DebugLinkLog
set_lock_time	protob/types.pb.h	/^inline void TransactionType::set_lock_time(::google::protobuf::uint32 value) {$/;"	f	class:TransactionType
set_major_version	protob/messages.pb.h	/^inline void Features::set_major_version(::google::protobuf::uint32 value) {$/;"	f	class:Features
set_matrix	protob/messages.pb.h	/^inline void DebugLinkState::set_matrix(const ::std::string& value) {$/;"	f	class:DebugLinkState
set_matrix	protob/messages.pb.h	/^inline void DebugLinkState::set_matrix(const char* value) {$/;"	f	class:DebugLinkState
set_matrix	protob/messages.pb.h	/^inline void DebugLinkState::set_matrix(const char* value, size_t size) {$/;"	f	class:DebugLinkState
set_maxfee_kb	protob/types.pb.h	/^inline void CoinType::set_maxfee_kb(::google::protobuf::uint64 value) {$/;"	f	class:CoinType
set_message	protob/messages.pb.h	/^inline void DecryptMessage::set_message(const ::std::string& value) {$/;"	f	class:DecryptMessage
set_message	protob/messages.pb.h	/^inline void DecryptMessage::set_message(const char* value) {$/;"	f	class:DecryptMessage
set_message	protob/messages.pb.h	/^inline void DecryptMessage::set_message(const void* value, size_t size) {$/;"	f	class:DecryptMessage
set_message	protob/messages.pb.h	/^inline void EncryptMessage::set_message(const ::std::string& value) {$/;"	f	class:EncryptMessage
set_message	protob/messages.pb.h	/^inline void EncryptMessage::set_message(const char* value) {$/;"	f	class:EncryptMessage
set_message	protob/messages.pb.h	/^inline void EncryptMessage::set_message(const void* value, size_t size) {$/;"	f	class:EncryptMessage
set_message	protob/messages.pb.h	/^inline void Failure::set_message(const ::std::string& value) {$/;"	f	class:Failure
set_message	protob/messages.pb.h	/^inline void Failure::set_message(const char* value) {$/;"	f	class:Failure
set_message	protob/messages.pb.h	/^inline void Failure::set_message(const char* value, size_t size) {$/;"	f	class:Failure
set_message	protob/messages.pb.h	/^inline void Ping::set_message(const ::std::string& value) {$/;"	f	class:Ping
set_message	protob/messages.pb.h	/^inline void Ping::set_message(const char* value) {$/;"	f	class:Ping
set_message	protob/messages.pb.h	/^inline void Ping::set_message(const char* value, size_t size) {$/;"	f	class:Ping
set_message	protob/messages.pb.h	/^inline void SignMessage::set_message(const ::std::string& value) {$/;"	f	class:SignMessage
set_message	protob/messages.pb.h	/^inline void SignMessage::set_message(const char* value) {$/;"	f	class:SignMessage
set_message	protob/messages.pb.h	/^inline void SignMessage::set_message(const void* value, size_t size) {$/;"	f	class:SignMessage
set_message	protob/messages.pb.h	/^inline void Success::set_message(const ::std::string& value) {$/;"	f	class:Success
set_message	protob/messages.pb.h	/^inline void Success::set_message(const char* value) {$/;"	f	class:Success
set_message	protob/messages.pb.h	/^inline void Success::set_message(const char* value, size_t size) {$/;"	f	class:Success
set_message	protob/messages.pb.h	/^inline void VerifyMessage::set_message(const ::std::string& value) {$/;"	f	class:VerifyMessage
set_message	protob/messages.pb.h	/^inline void VerifyMessage::set_message(const char* value) {$/;"	f	class:VerifyMessage
set_message	protob/messages.pb.h	/^inline void VerifyMessage::set_message(const void* value, size_t size) {$/;"	f	class:VerifyMessage
set_minor_version	protob/messages.pb.h	/^inline void Features::set_minor_version(::google::protobuf::uint32 value) {$/;"	f	class:Features
set_mnemonic	protob/messages.pb.h	/^inline void DebugLinkState::set_mnemonic(const ::std::string& value) {$/;"	f	class:DebugLinkState
set_mnemonic	protob/messages.pb.h	/^inline void DebugLinkState::set_mnemonic(const char* value) {$/;"	f	class:DebugLinkState
set_mnemonic	protob/messages.pb.h	/^inline void DebugLinkState::set_mnemonic(const char* value, size_t size) {$/;"	f	class:DebugLinkState
set_mnemonic	protob/messages.pb.h	/^inline void LoadDevice::set_mnemonic(const ::std::string& value) {$/;"	f	class:LoadDevice
set_mnemonic	protob/messages.pb.h	/^inline void LoadDevice::set_mnemonic(const char* value) {$/;"	f	class:LoadDevice
set_mnemonic	protob/messages.pb.h	/^inline void LoadDevice::set_mnemonic(const char* value, size_t size) {$/;"	f	class:LoadDevice
set_mnemonic	protob/storage.pb.h	/^inline void Storage::set_mnemonic(const ::std::string& value) {$/;"	f	class:Storage
set_mnemonic	protob/storage.pb.h	/^inline void Storage::set_mnemonic(const char* value) {$/;"	f	class:Storage
set_mnemonic	protob/storage.pb.h	/^inline void Storage::set_mnemonic(const char* value, size_t size) {$/;"	f	class:Storage
set_outputs_cnt	protob/types.pb.h	/^inline void TransactionType::set_outputs_cnt(::google::protobuf::uint32 value) {$/;"	f	class:TransactionType
set_outputs_count	protob/messages.pb.h	/^inline void EstimateTxSize::set_outputs_count(::google::protobuf::uint32 value) {$/;"	f	class:EstimateTxSize
set_outputs_count	protob/messages.pb.h	/^inline void SignTx::set_outputs_count(::google::protobuf::uint32 value) {$/;"	f	class:SignTx
set_passphrase	protob/messages.pb.h	/^inline void PassphraseAck::set_passphrase(const ::std::string& value) {$/;"	f	class:PassphraseAck
set_passphrase	protob/messages.pb.h	/^inline void PassphraseAck::set_passphrase(const char* value) {$/;"	f	class:PassphraseAck
set_passphrase	protob/messages.pb.h	/^inline void PassphraseAck::set_passphrase(const char* value, size_t size) {$/;"	f	class:PassphraseAck
set_passphrase_protection	protob/messages.pb.h	/^inline void DebugLinkState::set_passphrase_protection(bool value) {$/;"	f	class:DebugLinkState
set_passphrase_protection	protob/messages.pb.h	/^inline void Features::set_passphrase_protection(bool value) {$/;"	f	class:Features
set_passphrase_protection	protob/messages.pb.h	/^inline void LoadDevice::set_passphrase_protection(bool value) {$/;"	f	class:LoadDevice
set_passphrase_protection	protob/messages.pb.h	/^inline void Ping::set_passphrase_protection(bool value) {$/;"	f	class:Ping
set_passphrase_protection	protob/messages.pb.h	/^inline void RecoveryDevice::set_passphrase_protection(bool value) {$/;"	f	class:RecoveryDevice
set_passphrase_protection	protob/messages.pb.h	/^inline void ResetDevice::set_passphrase_protection(bool value) {$/;"	f	class:ResetDevice
set_passphrase_protection	protob/storage.pb.h	/^inline void Storage::set_passphrase_protection(bool value) {$/;"	f	class:Storage
set_patch_version	protob/messages.pb.h	/^inline void Features::set_patch_version(::google::protobuf::uint32 value) {$/;"	f	class:Features
set_path	protob/config.pb.h	/^inline void DeviceDescriptor::set_path(const ::std::string& value) {$/;"	f	class:DeviceDescriptor
set_path	protob/config.pb.h	/^inline void DeviceDescriptor::set_path(const char* value) {$/;"	f	class:DeviceDescriptor
set_path	protob/config.pb.h	/^inline void DeviceDescriptor::set_path(const char* value, size_t size) {$/;"	f	class:DeviceDescriptor
set_payload	protob/messages.pb.h	/^inline void FirmwareUpload::set_payload(const ::std::string& value) {$/;"	f	class:FirmwareUpload
set_payload	protob/messages.pb.h	/^inline void FirmwareUpload::set_payload(const char* value) {$/;"	f	class:FirmwareUpload
set_payload	protob/messages.pb.h	/^inline void FirmwareUpload::set_payload(const void* value, size_t size) {$/;"	f	class:FirmwareUpload
set_payload	protob/messages.pb.h	/^inline void Success::set_payload(const ::std::string& value) {$/;"	f	class:Success
set_payload	protob/messages.pb.h	/^inline void Success::set_payload(const char* value) {$/;"	f	class:Success
set_payload	protob/messages.pb.h	/^inline void Success::set_payload(const void* value, size_t size) {$/;"	f	class:Success
set_pin	protob/messages.pb.h	/^inline void DebugLinkState::set_pin(const ::std::string& value) {$/;"	f	class:DebugLinkState
set_pin	protob/messages.pb.h	/^inline void DebugLinkState::set_pin(const char* value) {$/;"	f	class:DebugLinkState
set_pin	protob/messages.pb.h	/^inline void DebugLinkState::set_pin(const char* value, size_t size) {$/;"	f	class:DebugLinkState
set_pin	protob/messages.pb.h	/^inline void LoadDevice::set_pin(const ::std::string& value) {$/;"	f	class:LoadDevice
set_pin	protob/messages.pb.h	/^inline void LoadDevice::set_pin(const char* value) {$/;"	f	class:LoadDevice
set_pin	protob/messages.pb.h	/^inline void LoadDevice::set_pin(const char* value, size_t size) {$/;"	f	class:LoadDevice
set_pin	protob/messages.pb.h	/^inline void PinMatrixAck::set_pin(const ::std::string& value) {$/;"	f	class:PinMatrixAck
set_pin	protob/messages.pb.h	/^inline void PinMatrixAck::set_pin(const char* value) {$/;"	f	class:PinMatrixAck
set_pin	protob/messages.pb.h	/^inline void PinMatrixAck::set_pin(const char* value, size_t size) {$/;"	f	class:PinMatrixAck
set_pin	protob/storage.pb.h	/^inline void Storage::set_pin(const ::std::string& value) {$/;"	f	class:Storage
set_pin	protob/storage.pb.h	/^inline void Storage::set_pin(const char* value) {$/;"	f	class:Storage
set_pin	protob/storage.pb.h	/^inline void Storage::set_pin(const char* value, size_t size) {$/;"	f	class:Storage
set_pin_failed_attempts	protob/storage.pb.h	/^inline void Storage::set_pin_failed_attempts(::google::protobuf::uint32 value) {$/;"	f	class:Storage
set_pin_protection	protob/messages.pb.h	/^inline void Features::set_pin_protection(bool value) {$/;"	f	class:Features
set_pin_protection	protob/messages.pb.h	/^inline void Ping::set_pin_protection(bool value) {$/;"	f	class:Ping
set_pin_protection	protob/messages.pb.h	/^inline void RecoveryDevice::set_pin_protection(bool value) {$/;"	f	class:RecoveryDevice
set_pin_protection	protob/messages.pb.h	/^inline void ResetDevice::set_pin_protection(bool value) {$/;"	f	class:ResetDevice
set_prev_hash	protob/types.pb.h	/^inline void TxInputType::set_prev_hash(const ::std::string& value) {$/;"	f	class:TxInputType
set_prev_hash	protob/types.pb.h	/^inline void TxInputType::set_prev_hash(const char* value) {$/;"	f	class:TxInputType
set_prev_hash	protob/types.pb.h	/^inline void TxInputType::set_prev_hash(const void* value, size_t size) {$/;"	f	class:TxInputType
set_prev_index	protob/types.pb.h	/^inline void TxInputType::set_prev_index(::google::protobuf::uint32 value) {$/;"	f	class:TxInputType
set_private_key	protob/types.pb.h	/^inline void HDNodeType::set_private_key(const ::std::string& value) {$/;"	f	class:HDNodeType
set_private_key	protob/types.pb.h	/^inline void HDNodeType::set_private_key(const char* value) {$/;"	f	class:HDNodeType
set_private_key	protob/types.pb.h	/^inline void HDNodeType::set_private_key(const void* value, size_t size) {$/;"	f	class:HDNodeType
set_product_id	protob/config.pb.h	/^inline void DeviceDescriptor::set_product_id(::google::protobuf::uint32 value) {$/;"	f	class:DeviceDescriptor
set_pubkey	protob/messages.pb.h	/^inline void EncryptMessage::set_pubkey(const ::std::string& value) {$/;"	f	class:EncryptMessage
set_pubkey	protob/messages.pb.h	/^inline void EncryptMessage::set_pubkey(const char* value) {$/;"	f	class:EncryptMessage
set_pubkey	protob/messages.pb.h	/^inline void EncryptMessage::set_pubkey(const void* value, size_t size) {$/;"	f	class:EncryptMessage
set_pubkeys	protob/types.pb.h	/^inline void MultisigRedeemScriptType::set_pubkeys(int index, const ::std::string& value) {$/;"	f	class:MultisigRedeemScriptType
set_pubkeys	protob/types.pb.h	/^inline void MultisigRedeemScriptType::set_pubkeys(int index, const char* value) {$/;"	f	class:MultisigRedeemScriptType
set_pubkeys	protob/types.pb.h	/^inline void MultisigRedeemScriptType::set_pubkeys(int index, const void* value, size_t size) {$/;"	f	class:MultisigRedeemScriptType
set_public_key	protob/types.pb.h	/^inline void HDNodeType::set_public_key(const ::std::string& value) {$/;"	f	class:HDNodeType
set_public_key	protob/types.pb.h	/^inline void HDNodeType::set_public_key(const char* value) {$/;"	f	class:HDNodeType
set_public_key	protob/types.pb.h	/^inline void HDNodeType::set_public_key(const void* value, size_t size) {$/;"	f	class:HDNodeType
set_recovery_fake_word	protob/messages.pb.h	/^inline void DebugLinkState::set_recovery_fake_word(const ::std::string& value) {$/;"	f	class:DebugLinkState
set_recovery_fake_word	protob/messages.pb.h	/^inline void DebugLinkState::set_recovery_fake_word(const char* value) {$/;"	f	class:DebugLinkState
set_recovery_fake_word	protob/messages.pb.h	/^inline void DebugLinkState::set_recovery_fake_word(const char* value, size_t size) {$/;"	f	class:DebugLinkState
set_recovery_word_pos	protob/messages.pb.h	/^inline void DebugLinkState::set_recovery_word_pos(::google::protobuf::uint32 value) {$/;"	f	class:DebugLinkState
set_remove	protob/messages.pb.h	/^inline void ChangePin::set_remove(bool value) {$/;"	f	class:ChangePin
set_request_index	protob/types.pb.h	/^inline void TxRequestDetailsType::set_request_index(::google::protobuf::uint32 value) {$/;"	f	class:TxRequestDetailsType
set_request_type	protob/messages.pb.h	/^inline void TxRequest::set_request_type(::RequestType value) {$/;"	f	class:TxRequest
set_reset_entropy	protob/messages.pb.h	/^inline void DebugLinkState::set_reset_entropy(const ::std::string& value) {$/;"	f	class:DebugLinkState
set_reset_entropy	protob/messages.pb.h	/^inline void DebugLinkState::set_reset_entropy(const char* value) {$/;"	f	class:DebugLinkState
set_reset_entropy	protob/messages.pb.h	/^inline void DebugLinkState::set_reset_entropy(const void* value, size_t size) {$/;"	f	class:DebugLinkState
set_reset_word	protob/messages.pb.h	/^inline void DebugLinkState::set_reset_word(const ::std::string& value) {$/;"	f	class:DebugLinkState
set_reset_word	protob/messages.pb.h	/^inline void DebugLinkState::set_reset_word(const char* value) {$/;"	f	class:DebugLinkState
set_reset_word	protob/messages.pb.h	/^inline void DebugLinkState::set_reset_word(const char* value, size_t size) {$/;"	f	class:DebugLinkState
set_revision	protob/messages.pb.h	/^inline void Features::set_revision(const ::std::string& value) {$/;"	f	class:Features
set_revision	protob/messages.pb.h	/^inline void Features::set_revision(const char* value) {$/;"	f	class:Features
set_revision	protob/messages.pb.h	/^inline void Features::set_revision(const void* value, size_t size) {$/;"	f	class:Features
set_script_pubkey	protob/types.pb.h	/^inline void TxOutputBinType::set_script_pubkey(const ::std::string& value) {$/;"	f	class:TxOutputBinType
set_script_pubkey	protob/types.pb.h	/^inline void TxOutputBinType::set_script_pubkey(const char* value) {$/;"	f	class:TxOutputBinType
set_script_pubkey	protob/types.pb.h	/^inline void TxOutputBinType::set_script_pubkey(const void* value, size_t size) {$/;"	f	class:TxOutputBinType
set_script_sig	protob/types.pb.h	/^inline void TxInputType::set_script_sig(const ::std::string& value) {$/;"	f	class:TxInputType
set_script_sig	protob/types.pb.h	/^inline void TxInputType::set_script_sig(const char* value) {$/;"	f	class:TxInputType
set_script_sig	protob/types.pb.h	/^inline void TxInputType::set_script_sig(const void* value, size_t size) {$/;"	f	class:TxInputType
set_script_type	protob/types.pb.h	/^inline void TxInputType::set_script_type(::InputScriptType value) {$/;"	f	class:TxInputType
set_script_type	protob/types.pb.h	/^inline void TxOutputType::set_script_type(::OutputScriptType value) {$/;"	f	class:TxOutputType
set_sequence	protob/types.pb.h	/^inline void TxInputType::set_sequence(::google::protobuf::uint32 value) {$/;"	f	class:TxInputType
set_serial_number	protob/config.pb.h	/^inline void DeviceDescriptor::set_serial_number(const ::std::string& value) {$/;"	f	class:DeviceDescriptor
set_serial_number	protob/config.pb.h	/^inline void DeviceDescriptor::set_serial_number(const char* value) {$/;"	f	class:DeviceDescriptor
set_serial_number	protob/config.pb.h	/^inline void DeviceDescriptor::set_serial_number(const char* value, size_t size) {$/;"	f	class:DeviceDescriptor
set_serialized_tx	protob/types.pb.h	/^inline void TxRequestSerializedType::set_serialized_tx(const ::std::string& value) {$/;"	f	class:TxRequestSerializedType
set_serialized_tx	protob/types.pb.h	/^inline void TxRequestSerializedType::set_serialized_tx(const char* value) {$/;"	f	class:TxRequestSerializedType
set_serialized_tx	protob/types.pb.h	/^inline void TxRequestSerializedType::set_serialized_tx(const void* value, size_t size) {$/;"	f	class:TxRequestSerializedType
set_show_display	protob/messages.pb.h	/^inline void GetAddress::set_show_display(bool value) {$/;"	f	class:GetAddress
set_signature	protob/messages.pb.h	/^inline void MessageSignature::set_signature(const ::std::string& value) {$/;"	f	class:MessageSignature
set_signature	protob/messages.pb.h	/^inline void MessageSignature::set_signature(const char* value) {$/;"	f	class:MessageSignature
set_signature	protob/messages.pb.h	/^inline void MessageSignature::set_signature(const void* value, size_t size) {$/;"	f	class:MessageSignature
set_signature	protob/messages.pb.h	/^inline void VerifyMessage::set_signature(const ::std::string& value) {$/;"	f	class:VerifyMessage
set_signature	protob/messages.pb.h	/^inline void VerifyMessage::set_signature(const char* value) {$/;"	f	class:VerifyMessage
set_signature	protob/messages.pb.h	/^inline void VerifyMessage::set_signature(const void* value, size_t size) {$/;"	f	class:VerifyMessage
set_signature	protob/types.pb.h	/^inline void TxRequestSerializedType::set_signature(const ::std::string& value) {$/;"	f	class:TxRequestSerializedType
set_signature	protob/types.pb.h	/^inline void TxRequestSerializedType::set_signature(const char* value) {$/;"	f	class:TxRequestSerializedType
set_signature	protob/types.pb.h	/^inline void TxRequestSerializedType::set_signature(const void* value, size_t size) {$/;"	f	class:TxRequestSerializedType
set_signature_index	protob/types.pb.h	/^inline void TxRequestSerializedType::set_signature_index(::google::protobuf::uint32 value) {$/;"	f	class:TxRequestSerializedType
set_signatures	protob/types.pb.h	/^inline void MultisigRedeemScriptType::set_signatures(int index, const ::std::string& value) {$/;"	f	class:MultisigRedeemScriptType
set_signatures	protob/types.pb.h	/^inline void MultisigRedeemScriptType::set_signatures(int index, const char* value) {$/;"	f	class:MultisigRedeemScriptType
set_signatures	protob/types.pb.h	/^inline void MultisigRedeemScriptType::set_signatures(int index, const void* value, size_t size) {$/;"	f	class:MultisigRedeemScriptType
set_size	protob/messages.pb.h	/^inline void GetEntropy::set_size(::google::protobuf::uint32 value) {$/;"	f	class:GetEntropy
set_skip_checksum	protob/messages.pb.h	/^inline void LoadDevice::set_skip_checksum(bool value) {$/;"	f	class:LoadDevice
set_strength	protob/messages.pb.h	/^inline void ResetDevice::set_strength(::google::protobuf::uint32 value) {$/;"	f	class:ResetDevice
set_text	protob/messages.pb.h	/^inline void DebugLinkLog::set_text(const ::std::string& value) {$/;"	f	class:DebugLinkLog
set_text	protob/messages.pb.h	/^inline void DebugLinkLog::set_text(const char* value) {$/;"	f	class:DebugLinkLog
set_text	protob/messages.pb.h	/^inline void DebugLinkLog::set_text(const char* value, size_t size) {$/;"	f	class:DebugLinkLog
set_tx_hash	protob/types.pb.h	/^inline void TxRequestDetailsType::set_tx_hash(const ::std::string& value) {$/;"	f	class:TxRequestDetailsType
set_tx_hash	protob/types.pb.h	/^inline void TxRequestDetailsType::set_tx_hash(const char* value) {$/;"	f	class:TxRequestDetailsType
set_tx_hash	protob/types.pb.h	/^inline void TxRequestDetailsType::set_tx_hash(const void* value, size_t size) {$/;"	f	class:TxRequestDetailsType
set_tx_size	protob/messages.pb.h	/^inline void TxSize::set_tx_size(::google::protobuf::uint32 value) {$/;"	f	class:TxSize
set_type	protob/messages.pb.h	/^inline void PinMatrixRequest::set_type(::PinMatrixRequestType value) {$/;"	f	class:PinMatrixRequest
set_valid_until	protob/config.pb.h	/^inline void Configuration::set_valid_until(::google::protobuf::uint32 value) {$/;"	f	class:Configuration
set_value	protob/messages.pb.h	/^inline void CipherKeyValue::set_value(const ::std::string& value) {$/;"	f	class:CipherKeyValue
set_value	protob/messages.pb.h	/^inline void CipherKeyValue::set_value(const char* value) {$/;"	f	class:CipherKeyValue
set_value	protob/messages.pb.h	/^inline void CipherKeyValue::set_value(const void* value, size_t size) {$/;"	f	class:CipherKeyValue
set_vendor	protob/messages.pb.h	/^inline void Features::set_vendor(const ::std::string& value) {$/;"	f	class:Features
set_vendor	protob/messages.pb.h	/^inline void Features::set_vendor(const char* value) {$/;"	f	class:Features
set_vendor	protob/messages.pb.h	/^inline void Features::set_vendor(const char* value, size_t size) {$/;"	f	class:Features
set_vendor_id	protob/config.pb.h	/^inline void DeviceDescriptor::set_vendor_id(::google::protobuf::uint32 value) {$/;"	f	class:DeviceDescriptor
set_version	protob/storage.pb.h	/^inline void Storage::set_version(::google::protobuf::uint32 value) {$/;"	f	class:Storage
set_version	protob/types.pb.h	/^inline void TransactionType::set_version(::google::protobuf::uint32 value) {$/;"	f	class:TransactionType
set_whitelist_urls	protob/config.pb.h	/^inline void Configuration::set_whitelist_urls(int index, const ::std::string& value) {$/;"	f	class:Configuration
set_whitelist_urls	protob/config.pb.h	/^inline void Configuration::set_whitelist_urls(int index, const char* value) {$/;"	f	class:Configuration
set_whitelist_urls	protob/config.pb.h	/^inline void Configuration::set_whitelist_urls(int index, const char* value, size_t size) {$/;"	f	class:Configuration
set_word	protob/messages.pb.h	/^inline void WordAck::set_word(const ::std::string& value) {$/;"	f	class:WordAck
set_word	protob/messages.pb.h	/^inline void WordAck::set_word(const char* value) {$/;"	f	class:WordAck
set_word	protob/messages.pb.h	/^inline void WordAck::set_word(const char* value, size_t size) {$/;"	f	class:WordAck
set_word_count	protob/messages.pb.h	/^inline void RecoveryDevice::set_word_count(::google::protobuf::uint32 value) {$/;"	f	class:RecoveryDevice
set_xpub	protob/messages.pb.h	/^inline void PublicKey::set_xpub(const ::std::string& value) {$/;"	f	class:PublicKey
set_xpub	protob/messages.pb.h	/^inline void PublicKey::set_xpub(const char* value) {$/;"	f	class:PublicKey
set_xpub	protob/messages.pb.h	/^inline void PublicKey::set_xpub(const char* value, size_t size) {$/;"	f	class:PublicKey
set_yes_no	protob/messages.pb.h	/^inline void DebugLinkDecision::set_yes_no(bool value) {$/;"	f	class:DebugLinkDecision
show_display	protob/messages.pb.h	/^inline bool GetAddress::show_display() const {$/;"	f	class:GetAddress
show_display_	protob/messages.pb.h	/^  bool show_display_;$/;"	m	class:GetAddress
signature	protob/messages.pb.h	/^inline const ::std::string& MessageSignature::signature() const {$/;"	f	class:MessageSignature
signature	protob/messages.pb.h	/^inline const ::std::string& VerifyMessage::signature() const {$/;"	f	class:VerifyMessage
signature	protob/types.pb.h	/^inline const ::std::string& TxRequestSerializedType::signature() const {$/;"	f	class:TxRequestSerializedType
signature_	protob/messages.pb.h	/^  ::std::string* signature_;$/;"	m	class:MessageSignature
signature_	protob/messages.pb.h	/^  ::std::string* signature_;$/;"	m	class:VerifyMessage
signature_	protob/types.pb.h	/^  ::std::string* signature_;$/;"	m	class:TxRequestSerializedType
signature_index	protob/types.pb.h	/^inline ::google::protobuf::uint32 TxRequestSerializedType::signature_index() const {$/;"	f	class:TxRequestSerializedType
signature_index_	protob/types.pb.h	/^  ::google::protobuf::uint32 signature_index_;$/;"	m	class:TxRequestSerializedType
signatures	protob/types.pb.h	/^MultisigRedeemScriptType::signatures() const {$/;"	f	class:MultisigRedeemScriptType
signatures	protob/types.pb.h	/^inline const ::std::string& MultisigRedeemScriptType::signatures(int index) const {$/;"	f	class:MultisigRedeemScriptType
signatures_	protob/types.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::std::string> signatures_;$/;"	m	class:MultisigRedeemScriptType
signatures_size	protob/types.pb.h	/^inline int MultisigRedeemScriptType::signatures_size() const {$/;"	f	class:MultisigRedeemScriptType
size	easylogging++.h	/^    inline std::size_t size(void) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::CommandLineArgs
size	protob/messages.pb.h	/^inline ::google::protobuf::uint32 GetEntropy::size() const {$/;"	f	class:GetEntropy
size_	protob/messages.pb.h	/^  ::google::protobuf::uint32 size_;$/;"	m	class:GetEntropy
size_type	wire.hpp	/^		typedef std::size_t size_type;$/;"	t	struct:wire::device
skip_checksum	protob/messages.pb.h	/^inline bool LoadDevice::skip_checksum() const {$/;"	f	class:LoadDevice
skip_checksum_	protob/messages.pb.h	/^  bool skip_checksum_;$/;"	m	class:LoadDevice
startTime	easylogging++.h	/^inline const struct timeval* PerformanceTrackingData::startTime() const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::PerformanceTrackingData
startsWith	easylogging++.h	/^    static inline bool startsWith(const std::string& str, const std::string& start) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Str
static_descriptor_initializer_config_2eproto_	protob/config.pb.cc	/^} static_descriptor_initializer_config_2eproto_;$/;"	v	typeref:struct:StaticDescriptorInitializer_config_2eproto
static_descriptor_initializer_messages_2eproto_	protob/messages.pb.cc	/^} static_descriptor_initializer_messages_2eproto_;$/;"	v	typeref:struct:StaticDescriptorInitializer_messages_2eproto
static_descriptor_initializer_storage_2eproto_	protob/storage.pb.cc	/^} static_descriptor_initializer_storage_2eproto_;$/;"	v	typeref:struct:StaticDescriptorInitializer_storage_2eproto
static_descriptor_initializer_types_2eproto_	protob/types.pb.cc	/^} static_descriptor_initializer_types_2eproto_;$/;"	v	typeref:struct:StaticDescriptorInitializer_types_2eproto
storage	easylogging++.h	/^    static inline base::type::StoragePointer storage() {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Helpers
stream	easylogging++.h	/^    inline base::type::stringstream_t& stream(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
strength	protob/messages.pb.h	/^inline ::google::protobuf::uint32 ResetDevice::strength() const {$/;"	f	class:ResetDevice
strength_	protob/messages.pb.h	/^  ::google::protobuf::uint32 strength_;$/;"	m	class:ResetDevice
string_t	easylogging++.h	/^typedef std::wstring string_t;$/;"	t	namespace:el::base::type
stringstream_t	easylogging++.h	/^typedef std::wstringstream stringstream_t;$/;"	t	namespace:el::base::type
text	protob/messages.pb.h	/^inline const ::std::string& DebugLinkLog::text() const {$/;"	f	class:DebugLinkLog
text_	protob/messages.pb.h	/^  ::std::string* text_;$/;"	m	class:DebugLinkLog
threading	easylogging++.h	/^namespace threading {$/;"	n	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit
toFile	easylogging++.h	/^    inline bool toFile(Level level) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
toStandardOutput	easylogging++.h	/^    inline bool toStandardOutput(Level level) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
toUpper	easylogging++.h	/^    static inline std::string& toUpper(std::string& str) {  \/\/ NOLINT$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Str
transactions	protob/messages.pb.h	/^SimpleSignTx::transactions() const {$/;"	f	class:SimpleSignTx
transactions	protob/messages.pb.h	/^inline const ::TransactionType& SimpleSignTx::transactions(int index) const {$/;"	f	class:SimpleSignTx
transactions_	protob/messages.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::TransactionType > transactions_;$/;"	m	class:SimpleSignTx
transactions_size	protob/messages.pb.h	/^inline int SimpleSignTx::transactions_size() const {$/;"	f	class:SimpleSignTx
trim	easylogging++.h	/^    static inline std::string& trim(std::string& str) {  \/\/ NOLINT$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Str
try_lock	easylogging++.h	/^    inline bool try_lock(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::threading::internal::Mutex
tx	protob/messages.pb.h	/^inline const ::TransactionType& TxAck::tx() const {$/;"	f	class:TxAck
tx_	protob/messages.pb.h	/^  ::TransactionType* tx_;$/;"	m	class:TxAck
tx_hash	protob/types.pb.h	/^inline const ::std::string& TxRequestDetailsType::tx_hash() const {$/;"	f	class:TxRequestDetailsType
tx_hash_	protob/types.pb.h	/^  ::std::string* tx_hash_;$/;"	m	class:TxRequestDetailsType
tx_size	protob/messages.pb.h	/^inline ::google::protobuf::uint32 TxSize::tx_size() const {$/;"	f	class:TxSize
tx_size_	protob/messages.pb.h	/^  ::google::protobuf::uint32 tx_size_;$/;"	m	class:TxSize
type	easylogging++.h	/^namespace type {$/;"	n	namespace:el::base
type	protob/messages.pb.h	/^inline ::PinMatrixRequestType PinMatrixRequest::type() const {$/;"	f	class:PinMatrixRequest
type_	protob/messages.pb.h	/^  int type_;$/;"	m	class:PinMatrixRequest
typedConfigurations	easylogging++.h	/^    inline base::TypedConfigurations* typedConfigurations(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
uninstallCustomFormatSpecifier	easylogging++.h	/^    inline bool uninstallCustomFormatSpecifier(const char* formatSpecifier) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
uninstallCustomFormatSpecifier	easylogging++.h	/^    static inline bool uninstallCustomFormatSpecifier(const char* formatSpecifier) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Helpers
uninstallLogDispatchCallback	easylogging++.h	/^    inline void uninstallLogDispatchCallback(const std::string& id) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
uninstallLogDispatchCallback	easylogging++.h	/^    static inline void uninstallLogDispatchCallback(const std::string& id) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Helpers
uninstallPerformanceTrackingCallback	easylogging++.h	/^    inline void uninstallPerformanceTrackingCallback(const std::string& id) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
uninstallPerformanceTrackingCallback	easylogging++.h	/^    static inline void uninstallPerformanceTrackingCallback(const std::string& id) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Helpers
uninstallPreRollOutCallback	easylogging++.h	/^    static inline void uninstallPreRollOutCallback(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Helpers
unit	easylogging++.h	/^        const base::type::char_t* unit;$/;"	m	struct:el::Level::ConfigurationType::LoggingFlag::base::consts::__anon9
unknown_fields	protob/config.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:Configuration
unknown_fields	protob/config.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:DeviceDescriptor
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:Address
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:ApplySettings
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:ButtonAck
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:ButtonRequest
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:Cancel
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:ChangePin
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:CipherKeyValue
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:ClearSession
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:DebugLinkDecision
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:DebugLinkGetState
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:DebugLinkLog
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:DebugLinkState
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:DebugLinkStop
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:DecryptMessage
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:EncryptMessage
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:Entropy
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:EntropyAck
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:EntropyRequest
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:EstimateTxSize
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:Failure
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:Features
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:FirmwareErase
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:FirmwareUpload
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:GetAddress
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:GetEntropy
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:GetPublicKey
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:Initialize
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:LoadDevice
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:MessageSignature
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:PassphraseAck
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:PassphraseRequest
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:PinMatrixAck
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:PinMatrixRequest
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:Ping
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:PublicKey
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:RecoveryDevice
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:ResetDevice
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:SignMessage
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:SignTx
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:SimpleSignTx
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:Success
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:TestScreen
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:TxAck
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:TxRequest
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:TxSize
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:VerifyMessage
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:WipeDevice
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:WordAck
unknown_fields	protob/messages.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:WordRequest
unknown_fields	protob/storage.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:Storage
unknown_fields	protob/types.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:CoinType
unknown_fields	protob/types.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:HDNodeType
unknown_fields	protob/types.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:MultisigRedeemScriptType
unknown_fields	protob/types.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:TransactionType
unknown_fields	protob/types.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:TxInputType
unknown_fields	protob/types.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:TxOutputBinType
unknown_fields	protob/types.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:TxOutputType
unknown_fields	protob/types.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:TxRequestDetailsType
unknown_fields	protob/types.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:TxRequestSerializedType
unlock	easylogging++.h	/^    inline void unlock(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::threading::internal::Mutex
unregister	easylogging++.h	/^    inline void unregister(Logger*& logger) {  \/\/ NOLINT$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::RegisteredLoggers
unregister	easylogging++.h	/^    inline void unregister(const T_Key& uniqKey) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::Registry
unregisterLogger	easylogging++.h	/^    static inline bool unregisterLogger(const std::string& identity) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Loggers
unsafeGetConfigByRef	easylogging++.h	/^    inline Conf_T& unsafeGetConfigByRef(Level level, std::map<Level, Conf_T>* confMap, const char* confName) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
unsafeGetConfigByVal	easylogging++.h	/^    inline Conf_T unsafeGetConfigByVal(Level level, const std::map<Level, Conf_T>* confMap, const char* confName) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
unsafeSet	easylogging++.h	/^    void unsafeSet(Level level, ConfigurationType configurationType, const std::string& value) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations
unsafeSetGlobally	easylogging++.h	/^    void unsafeSetGlobally(ConfigurationType configurationType, const std::string& value, bool includeGlobalLevel) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations
unsafeSetIfNotExist	easylogging++.h	/^    void unsafeSetIfNotExist(Level level, ConfigurationType configurationType, const std::string& value) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations
unsafeValidateFileRolling	easylogging++.h	/^    bool unsafeValidateFileRolling(Level level, const PreRollOutCallback& PreRollOutCallback) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
unsetPreRollOutCallback	easylogging++.h	/^    inline void unsetPreRollOutCallback(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
userFormat	easylogging++.h	/^    inline const base::type::string_t& userFormat(void) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogFormat
utils	easylogging++.h	/^namespace utils {$/;"	n	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit
utils	easylogging++.h	/^namespace utils {$/;"	n	namespace:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::el::base
vRegistry	easylogging++.h	/^    inline base::VRegistry* vRegistry(void) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
valid_until	protob/config.pb.h	/^inline ::google::protobuf::uint32 Configuration::valid_until() const {$/;"	f	class:Configuration
valid_until_	protob/config.pb.h	/^  ::google::protobuf::uint32 valid_until_;$/;"	m	class:Configuration
validateAfterN	easylogging++.h	/^    bool validateAfterN(const char* filename, unsigned long int lineNumber, std::size_t n) {  \/\/ NOLINT$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::RegisteredHitCounters
validateAfterNCounter	easylogging++.h	/^    inline bool validateAfterNCounter(const char* filename, unsigned long int lineNumber, std::size_t n) { \/\/ NOLINT$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
validateEveryN	easylogging++.h	/^    bool validateEveryN(const char* filename, unsigned long int lineNumber, std::size_t n) {  \/\/ NOLINT$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::RegisteredHitCounters
validateEveryNCounter	easylogging++.h	/^    inline bool validateEveryNCounter(const char* filename, unsigned long int lineNumber, std::size_t occasion) {  \/\/ NOLINT$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
validateFileRolling	easylogging++.h	/^    bool validateFileRolling(Level level, const PreRollOutCallback& PreRollOutCallback) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
validateFileRolling	easylogging++.h	/^    static inline void validateFileRolling(Logger* logger, Level level) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Helpers
validateHitCounts	easylogging++.h	/^    inline void validateHitCounts(std::size_t n) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::HitCounter
validateNTimes	easylogging++.h	/^    bool validateNTimes(const char* filename, unsigned long int lineNumber, std::size_t n) {  \/\/ NOLINT$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::RegisteredHitCounters
validateNTimesCounter	easylogging++.h	/^    inline bool validateNTimesCounter(const char* filename, unsigned long int lineNumber, std::size_t n) { \/\/ NOLINT$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
value	easylogging++.h	/^        double value;$/;"	m	struct:el::Level::ConfigurationType::LoggingFlag::base::consts::__anon9
value	easylogging++.h	/^    inline const std::string& value(void) const {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configuration
value	protob/messages.pb.h	/^inline const ::std::string& CipherKeyValue::value() const {$/;"	f	class:CipherKeyValue
value_	protob/messages.pb.h	/^  ::std::string* value_;$/;"	m	class:CipherKeyValue
vendor	protob/messages.pb.h	/^inline const ::std::string& Features::vendor() const {$/;"	f	class:Features
vendor_	protob/messages.pb.h	/^  ::std::string* vendor_;$/;"	m	class:Features
vendor_id	protob/config.pb.h	/^inline ::google::protobuf::uint32 DeviceDescriptor::vendor_id() const {$/;"	f	class:DeviceDescriptor
vendor_id	wire.hpp	/^		std::uint16_t vendor_id;$/;"	m	struct:wire::device_info
vendor_id_	protob/config.pb.h	/^  ::google::protobuf::uint32 vendor_id_;$/;"	m	class:DeviceDescriptor
verbose	easylogging++.h	/^    inline void Logger::verbose(int vlevel, const T& log) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::Logger
verbose	easylogging++.h	/^    inline void Logger::verbose(int vlevel, const char* s, const T& value, const Args&... args) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::Logger
verbose	easylogging++.h	/^    inline void Logger::verbose(int, const T&) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::Logger
verbose	easylogging++.h	/^    inline void Logger::verbose(int, const char*, const T&, const Args&...) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::Logger
verboseLevel	easylogging++.h	/^    inline base::type::VerboseLevel verboseLevel(void) const { return m_verboseLevel; }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogMessage
version	easylogging++.h	/^    static inline const std::string version(void) { return std::string("9.74"); }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::VersionInfo
version	protob/storage.pb.h	/^inline ::google::protobuf::uint32 Storage::version() const {$/;"	f	class:Storage
version	protob/types.pb.h	/^inline ::google::protobuf::uint32 TransactionType::version() const {$/;"	f	class:TransactionType
version_	protob/storage.pb.h	/^  ::google::protobuf::uint32 version_;$/;"	m	class:Storage
version_	protob/types.pb.h	/^  ::google::protobuf::uint32 version_;$/;"	m	class:TransactionType
wcharPtrToCharPtr	easylogging++.h	/^    static char* wcharPtrToCharPtr(const wchar_t* line) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Str
whitelist_urls	protob/config.pb.h	/^Configuration::whitelist_urls() const {$/;"	f	class:Configuration
whitelist_urls	protob/config.pb.h	/^inline const ::std::string& Configuration::whitelist_urls(int index) const {$/;"	f	class:Configuration
whitelist_urls_	protob/config.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::std::string> whitelist_urls_;$/;"	m	class:Configuration
whitelist_urls_size	protob/config.pb.h	/^inline int Configuration::whitelist_urls_size() const {$/;"	f	class:Configuration
wildCardMatch	easylogging++.h	/^    static bool wildCardMatch(const char* str, const char* pattern) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Str
wire	wire.hpp	/^namespace wire {$/;"	n
wire_protocol	protob/config.pb.h	/^inline const ::google::protobuf::FileDescriptorSet& Configuration::wire_protocol() const {$/;"	f	class:Configuration
wire_protocol_	protob/config.pb.h	/^  ::google::protobuf::FileDescriptorSet* wire_protocol_;$/;"	m	class:Configuration
word	protob/messages.pb.h	/^inline const ::std::string& WordAck::word() const {$/;"	f	class:WordAck
word_	protob/messages.pb.h	/^  ::std::string* word_;$/;"	m	class:WordAck
word_count	protob/messages.pb.h	/^inline ::google::protobuf::uint32 RecoveryDevice::word_count() const {$/;"	f	class:RecoveryDevice
word_count_	protob/messages.pb.h	/^  ::google::protobuf::uint32 word_count_;$/;"	m	class:RecoveryDevice
workarounds	easylogging++.h	/^namespace workarounds {$/;"	n	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder
write	wire.hpp	/^		void  write(char_type const *data, size_type len) {$/;"	f	struct:wire::device
writeIterator	easylogging++.h	/^    inline MessageBuilder& writeIterator(Iterator begin_, Iterator end_, std::size_t size_) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::MessageBuilder
write_error	wire.hpp	/^		struct write_error : public std::runtime_error {$/;"	s	struct:wire::device
write_report	wire.hpp	/^		size_type write_report(char_type const *data, size_type len) {$/;"	f	struct:wire::device
write_to	wire.hpp	/^		void write_to(device &device) const {$/;"	f	struct:wire::message
xpub	protob/messages.pb.h	/^inline const ::std::string& PublicKey::xpub() const {$/;"	f	class:PublicKey
xpub_	protob/messages.pb.h	/^  ::std::string* xpub_;$/;"	m	class:PublicKey
yes_no	protob/messages.pb.h	/^inline bool DebugLinkDecision::yes_no() const {$/;"	f	class:DebugLinkDecision
yes_no_	protob/messages.pb.h	/^  bool yes_no_;$/;"	m	class:DebugLinkDecision
~AbstractRegistry	easylogging++.h	/^    virtual ~AbstractRegistry(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::AbstractRegistry
~Address	protob/messages.pb.cc	/^Address::~Address() {$/;"	f	class:Address
~ApplySettings	protob/messages.pb.cc	/^ApplySettings::~ApplySettings() {$/;"	f	class:ApplySettings
~ButtonAck	protob/messages.pb.cc	/^ButtonAck::~ButtonAck() {$/;"	f	class:ButtonAck
~ButtonRequest	protob/messages.pb.cc	/^ButtonRequest::~ButtonRequest() {$/;"	f	class:ButtonRequest
~Cancel	protob/messages.pb.cc	/^Cancel::~Cancel() {$/;"	f	class:Cancel
~ChangePin	protob/messages.pb.cc	/^ChangePin::~ChangePin() {$/;"	f	class:ChangePin
~CipherKeyValue	protob/messages.pb.cc	/^CipherKeyValue::~CipherKeyValue() {$/;"	f	class:CipherKeyValue
~ClearSession	protob/messages.pb.cc	/^ClearSession::~ClearSession() {$/;"	f	class:ClearSession
~CoinType	protob/types.pb.cc	/^CoinType::~CoinType() {$/;"	f	class:CoinType
~CommandLineArgs	easylogging++.h	/^    virtual ~CommandLineArgs(void) {}$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::CommandLineArgs
~Configuration	easylogging++.h	/^    virtual ~Configuration(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configuration
~Configuration	protob/config.pb.cc	/^Configuration::~Configuration() {$/;"	f	class:Configuration
~Configurations	easylogging++.h	/^    virtual ~Configurations(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::Configurations
~DebugLinkDecision	protob/messages.pb.cc	/^DebugLinkDecision::~DebugLinkDecision() {$/;"	f	class:DebugLinkDecision
~DebugLinkGetState	protob/messages.pb.cc	/^DebugLinkGetState::~DebugLinkGetState() {$/;"	f	class:DebugLinkGetState
~DebugLinkLog	protob/messages.pb.cc	/^DebugLinkLog::~DebugLinkLog() {$/;"	f	class:DebugLinkLog
~DebugLinkState	protob/messages.pb.cc	/^DebugLinkState::~DebugLinkState() {$/;"	f	class:DebugLinkState
~DebugLinkStop	protob/messages.pb.cc	/^DebugLinkStop::~DebugLinkStop() {$/;"	f	class:DebugLinkStop
~DecryptMessage	protob/messages.pb.cc	/^DecryptMessage::~DecryptMessage() {$/;"	f	class:DecryptMessage
~DeviceDescriptor	protob/config.pb.cc	/^DeviceDescriptor::~DeviceDescriptor() {$/;"	f	class:DeviceDescriptor
~EncryptMessage	protob/messages.pb.cc	/^EncryptMessage::~EncryptMessage() {$/;"	f	class:EncryptMessage
~Entropy	protob/messages.pb.cc	/^Entropy::~Entropy() {$/;"	f	class:Entropy
~EntropyAck	protob/messages.pb.cc	/^EntropyAck::~EntropyAck() {$/;"	f	class:EntropyAck
~EntropyRequest	protob/messages.pb.cc	/^EntropyRequest::~EntropyRequest() {$/;"	f	class:EntropyRequest
~EstimateTxSize	protob/messages.pb.cc	/^EstimateTxSize::~EstimateTxSize() {$/;"	f	class:EstimateTxSize
~Failure	protob/messages.pb.cc	/^Failure::~Failure() {$/;"	f	class:Failure
~Features	protob/messages.pb.cc	/^Features::~Features() {$/;"	f	class:Features
~FirmwareErase	protob/messages.pb.cc	/^FirmwareErase::~FirmwareErase() {$/;"	f	class:FirmwareErase
~FirmwareUpload	protob/messages.pb.cc	/^FirmwareUpload::~FirmwareUpload() {$/;"	f	class:FirmwareUpload
~GetAddress	protob/messages.pb.cc	/^GetAddress::~GetAddress() {$/;"	f	class:GetAddress
~GetEntropy	protob/messages.pb.cc	/^GetEntropy::~GetEntropy() {$/;"	f	class:GetEntropy
~GetPublicKey	protob/messages.pb.cc	/^GetPublicKey::~GetPublicKey() {$/;"	f	class:GetPublicKey
~HDNodeType	protob/types.pb.cc	/^HDNodeType::~HDNodeType() {$/;"	f	class:HDNodeType
~HitCounter	easylogging++.h	/^    virtual ~HitCounter(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::HitCounter
~Initialize	protob/messages.pb.cc	/^Initialize::~Initialize() {$/;"	f	class:Initialize
~IterableContainer	easylogging++.h	/^    virtual ~IterableContainer(void) {}$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::workarounds::IterableContainer
~LoadDevice	protob/messages.pb.cc	/^LoadDevice::~LoadDevice() {$/;"	f	class:LoadDevice
~LogBuilder	easylogging++.h	/^    virtual ~LogBuilder(void) { ELPP_INTERNAL_INFO(3, "Destroying log builder...")}$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogBuilder
~LogFormat	easylogging++.h	/^    virtual ~LogFormat(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::LogFormat
~Logger	easylogging++.h	/^    virtual ~Logger(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::Logger
~MessageSignature	protob/messages.pb.cc	/^MessageSignature::~MessageSignature() {$/;"	f	class:MessageSignature
~MultisigRedeemScriptType	protob/types.pb.cc	/^MultisigRedeemScriptType::~MultisigRedeemScriptType() {$/;"	f	class:MultisigRedeemScriptType
~Mutex	easylogging++.h	/^    virtual ~Mutex(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::threading::internal::Mutex
~PErrorWriter	easylogging++.h	/^    virtual ~PErrorWriter(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::Writer::PErrorWriter
~PassphraseAck	protob/messages.pb.cc	/^PassphraseAck::~PassphraseAck() {$/;"	f	class:PassphraseAck
~PassphraseRequest	protob/messages.pb.cc	/^PassphraseRequest::~PassphraseRequest() {$/;"	f	class:PassphraseRequest
~PinMatrixAck	protob/messages.pb.cc	/^PinMatrixAck::~PinMatrixAck() {$/;"	f	class:PinMatrixAck
~PinMatrixRequest	protob/messages.pb.cc	/^PinMatrixRequest::~PinMatrixRequest() {$/;"	f	class:PinMatrixRequest
~Ping	protob/messages.pb.cc	/^Ping::~Ping() {$/;"	f	class:Ping
~PublicKey	protob/messages.pb.cc	/^PublicKey::~PublicKey() {$/;"	f	class:PublicKey
~RecoveryDevice	protob/messages.pb.cc	/^RecoveryDevice::~RecoveryDevice() {$/;"	f	class:RecoveryDevice
~RegisteredLoggers	easylogging++.h	/^    virtual ~RegisteredLoggers(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::RegisteredLoggers
~Registry	easylogging++.h	/^    virtual ~Registry(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::Registry
~RegistryWithPred	easylogging++.h	/^    virtual ~RegistryWithPred(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::OS::DateTime::RegistryWithPred
~ResetDevice	protob/messages.pb.cc	/^ResetDevice::~ResetDevice() {$/;"	f	class:ResetDevice
~ScopedAddFlag	easylogging++.h	/^        ~ScopedAddFlag(void) { Loggers::removeFlag(m_flag); }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Loggers::ScopedAddFlag
~ScopedLock	easylogging++.h	/^    virtual ~ScopedLock(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::threading::internal::ScopedLock
~ScopedRemoveFlag	easylogging++.h	/^        ~ScopedRemoveFlag(void) { Loggers::addFlag(m_flag); }$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::Loggers::ScopedRemoveFlag
~SignMessage	protob/messages.pb.cc	/^SignMessage::~SignMessage() {$/;"	f	class:SignMessage
~SignTx	protob/messages.pb.cc	/^SignTx::~SignTx() {$/;"	f	class:SignTx
~SimpleSignTx	protob/messages.pb.cc	/^SimpleSignTx::~SimpleSignTx() {$/;"	f	class:SimpleSignTx
~StackTrace	easylogging++.h	/^    virtual ~StackTrace(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::debug::StackTrace
~Storage	easylogging++.h	/^    virtual ~Storage(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage
~Storage	protob/storage.pb.cc	/^Storage::~Storage() {$/;"	f	class:Storage
~Success	protob/messages.pb.cc	/^Success::~Success() {$/;"	f	class:Success
~SysLogInitializer	easylogging++.h	/^    virtual ~SysLogInitializer(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::PerformanceTrackingData::base::base::SysLogInitializer
~TestScreen	protob/messages.pb.cc	/^TestScreen::~TestScreen() {$/;"	f	class:TestScreen
~ThreadSafe	easylogging++.h	/^    virtual ~ThreadSafe(void) {}$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::threading::ThreadSafe
~TransactionType	protob/types.pb.cc	/^TransactionType::~TransactionType() {$/;"	f	class:TransactionType
~TxAck	protob/messages.pb.cc	/^TxAck::~TxAck() {$/;"	f	class:TxAck
~TxInputType	protob/types.pb.cc	/^TxInputType::~TxInputType() {$/;"	f	class:TxInputType
~TxOutputBinType	protob/types.pb.cc	/^TxOutputBinType::~TxOutputBinType() {$/;"	f	class:TxOutputBinType
~TxOutputType	protob/types.pb.cc	/^TxOutputType::~TxOutputType() {$/;"	f	class:TxOutputType
~TxRequest	protob/messages.pb.cc	/^TxRequest::~TxRequest() {$/;"	f	class:TxRequest
~TxRequestDetailsType	protob/types.pb.cc	/^TxRequestDetailsType::~TxRequestDetailsType() {$/;"	f	class:TxRequestDetailsType
~TxRequestSerializedType	protob/types.pb.cc	/^TxRequestSerializedType::~TxRequestSerializedType() {$/;"	f	class:TxRequestSerializedType
~TxSize	protob/messages.pb.cc	/^TxSize::~TxSize() {$/;"	f	class:TxSize
~TypedConfigurations	easylogging++.h	/^    virtual ~TypedConfigurations(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::TypedConfigurations
~VerifyMessage	protob/messages.pb.cc	/^VerifyMessage::~VerifyMessage() {$/;"	f	class:VerifyMessage
~WipeDevice	protob/messages.pb.cc	/^WipeDevice::~WipeDevice() {$/;"	f	class:WipeDevice
~WordAck	protob/messages.pb.cc	/^WordAck::~WordAck() {$/;"	f	class:WordAck
~WordRequest	protob/messages.pb.cc	/^WordRequest::~WordRequest() {$/;"	f	class:WordRequest
~Writer	easylogging++.h	/^    virtual ~Writer(void) {$/;"	f	class:el::Level::ConfigurationType::LoggingFlag::base::TimestampUnit::utils::File::base::base::Storage::base::DefaultLogBuilder::Writer
~device	wire.hpp	/^		~device() {$/;"	f	struct:wire::device
